{"version":3,"file":"static/js/SingleName.0afa4ad6-c1898.chunk.js","mappings":"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","sources":["components/AddFavourite/Favourite.js","components/SingleName/registerReducerFactory.js","components/SingleName/NameRegister/registerReducer.js","components/SingleName/NameRegister/Step.js","components/Icons/Bell.svg","components/Icons/GreyCircleTick.svg","components/SingleName/NameRegister/notification.js","components/SingleName/NameRegister/Explainer.js","components/Calendar/RenewalCalendar.js","components/Icons/SmallPencil.svg","components/SingleName/NameRegister/CTA.js","components/Icons/QuestionMarkSmall.svg","components/Icons/CheckCircle.svg","components/SingleName/NameRegister/Progress.js","components/SingleName/NameRegister/NotAvailable.js","components/SingleName/NameRegister/LineGraph.js","components/Calendar/ReleaseCalendar.js","components/SingleName/NameRegister/Premium.js","components/SingleName/NameRegister/ProgressRecorder.js","components/NetworkInformation/useNetworkInfo.js","components/SingleName/NameRegister/PremiumPriceOracle.js","components/SingleName/NameRegister/NameRegister.js","components/SingleName/NameRegister/index.js","components/SingleName/AddSubdomain.js","components/SingleName/SubDomains.js","api/dnssecmodes.js","components/Icons/BookPen.svg","components/SetupName/SetupName.js","components/SingleName/RegistryMigration.js","components/SingleName/DetailsItem.js","components/Links/AddressLink.js","components/Icons/Pencil.svg","components/Forms/Pencil.js","components/CopyToClipboard/CopyToClipboard.js","components/CopyToClipboard/index.js","components/SingleName/DetailsItemEditable.js","components/Icons/You.js","components/SingleName/SubmitProof.js","components/SingleName/DetailsItemInput.js","components/Forms/Select.js","components/SingleName/ResolverAndRecords/AddRecord.js","components/Links/RecordLink.js","components/IPFS/Dropzone.js","components/IPFS/Upload.js","components/IPFS/Login.js","components/Icons/Upload.svg","components/Links/ContentHashLink.js","components/SingleName/ResolverAndRecords/RecordsItem.js","components/SingleName/RecordInput.js","components/SingleName/ResolverAndRecords/KeyValueRecord/KeyValueRecord.js","components/SingleName/ResolverAndRecords/RecordsCheck.js","components/SingleName/ResolverAndRecords/KeyValueRecord/index.js","components/SingleName/ResolverAndRecords/Certificate.js","components/SingleName/ResolverAndRecords/RequestCertificate.js","components/SingleName/ResolverAndRecords/ContentHash.js","components/SingleName/ResolverAndRecords/Records.js","components/SingleName/ResolverAndRecords/ArtRecords.js","components/ErrorModal/ErrorModal.js","components/ErrorModal/index.js","components/SingleName/ResolverAndRecords/ResolverMigration.js","components/SingleName/ResolverAndRecords/ResolverAndRecords.js","components/SingleName/ResolverAndRecords/index.js","components/SingleName/NameClaimTestDomain.js","components/SingleName/DetailsContainer.js","components/SingleName/NameDetails.js","components/SingleName/DNSNameRegister/registerReducer.js","components/SingleName/DNSNameRegister/Step.js","components/SingleName/DNSNameRegister/Explainer.js","components/SingleName/DNSNameRegister/CTA.js","components/SingleName/DNSNameRegister/DNSNameRegister.js","components/SingleName/DNSNameRegister/index.js","components/SingleName/ShortName.js","components/SingleName/Tabs.js","components/SingleName/Name.js","routes/SingleName.js"],"sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { GET_FAVOURITES, GET_SUBDOMAIN_FAVOURITES } from '../../graphql/queries'\nimport AddFavourite from './AddFavourite'\n\nconst getFavouritesQuery = nameArray =>\n  nameArray?.length < 3 ? GET_FAVOURITES : GET_SUBDOMAIN_FAVOURITES\n\nconst isFavourite = (favourites, name) => {\n  return favourites?.filter(domain => name === domain.name).length > 0\n}\n\nconst Favourite = ({ domain }) => {\n  const { name } = domain\n  const nameArray = name?.split('.')\n  const { data } = useQuery(getFavouritesQuery(nameArray))\n\n  const favourites =\n    nameArray?.length < 3 ? data?.favourites : data?.subDomainFavourites\n\n  return (\n    <AddFavourite\n      domain={domain}\n      isSubDomain={nameArray?.length > 2}\n      isFavourite={isFavourite(favourites, name)}\n    />\n  )\n}\n\nexport default Favourite\n","const registerReducerFactory = registerMachine => {\n  const getStates = (states, initialState) => {\n    function traverseLinkedList(list, next) {\n      if (states[next].on.NEXT === next) {\n        return [...list, next]\n      }\n      return traverseLinkedList([...list, next], states[next].on.NEXT)\n    }\n    return traverseLinkedList([], initialState)\n  }\n\n  const registerReducer = (state, action) => {\n    return registerMachine.states[state].on[action] || state\n  }\n\n  const states = getStates(registerMachine.states, registerMachine.initialState)\n\n  const hasReachedState = (state, currentState) => {\n    const indexToReach = states.findIndex(s => s === state)\n    const currentStateIndex = states.findIndex(s => s === currentState)\n    return currentStateIndex >= indexToReach\n  }\n\n  return {\n    registerReducer,\n    hasReachedState\n  }\n}\n\nexport default registerReducerFactory\n","import registerReducerFactory from '../registerReducerFactory'\n\nexport const registerMachine = {\n  initialState: 'PRICE_DECISION',\n  states: {\n    PRICE_DECISION: {\n      on: {\n        NEXT: 'COMMIT_SENT',\n        PREVIOUS: 'PRICE_DECISION'\n      }\n    },\n    COMMIT_SENT: {\n      on: {\n        NEXT: 'COMMIT_CONFIRMED',\n        PREVIOUS: 'PRICE_DECISION'\n      }\n    },\n    COMMIT_CONFIRMED: {\n      on: {\n        NEXT: 'AWAITING_REGISTER',\n        PREVIOUS: 'COMMIT_SENT'\n      }\n    },\n    AWAITING_REGISTER: {\n      on: {\n        NEXT: 'REVEAL_SENT',\n        PREVIOUS: 'COMMIT_CONFIRMED'\n      }\n    },\n    REVEAL_SENT: {\n      on: {\n        NEXT: 'REVEAL_CONFIRMED',\n        PREVIOUS: 'AWAITING_REGISTER'\n      }\n    },\n    REVEAL_CONFIRMED: {\n      on: {\n        NEXT: 'REVEAL_CONFIRMED',\n        PREVIOUS: 'REVEAL_SENT'\n      }\n    }\n  }\n}\n\nexport const { registerReducer, hasReachedState } = registerReducerFactory(\n  registerMachine\n)\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst offset = 180\n\nconst Number = styled('div')`\n  color: ${p => (p.progress === 100 ? '#42E068' : '#dfdfdf')};\n  font-size: 34px;\n  font-weight: 300;\n  position: relative;\n  width: 60px;\n  height: 60px;\n\n  span {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n`\n\nconst SVG = styled('svg')`\n  stroke: #ccc;\n\n  circle {\n    stroke-dasharray: ${offset};\n    stroke-dashoffset: 0;\n  }\n\n  circle.progress {\n    stroke-dasharray: ${offset};\n    stroke-dashoffset: ${p => (offset / 100) * (p.progress - 100)};\n  }\n`\n\nconst Content = styled('div')`\n  margin-left: 8px;\n\n  h3 {\n    margin-top: 2px;\n    font-size: 14px;\n    font-weight: 600;\n    margin-bottom: 5px;\n  }\n\n  p {\n    font-size: 14px;\n    font-weight: 400;\n    margin-top: 0;\n  }\n`\n\nconst StepContainer = styled('div')`\n  display: flex;\n`\n\nconst Step = ({ number, text, title, progress = 100 }) => (\n  <StepContainer>\n    <Number progress={progress}>\n      <SVG height=\"60\" width=\"60\" progress={progress}>\n        <circle\n          cx=\"30\"\n          cy=\"30\"\n          r=\"28\"\n          stroke=\"#dfdfdf\"\n          strokeWidth=\"2\"\n          fill=\"none\"\n          transform=\"rotate(-90, 30, 30)\"\n        />\n        <circle\n          cx=\"30\"\n          cy=\"30\"\n          r=\"28\"\n          strokeWidth=\"2\"\n          stroke=\"#42E068\"\n          fill=\"none\"\n          className=\"progress\"\n          transform=\"rotate(-90, 30, 30)\"\n        />\n      </SVG>\n      <span>{number}</span>\n    </Number>\n    <Content>\n      <h3>{title}</h3>\n      <p>{text}</p>\n    </Content>\n  </StepContainer>\n)\n\nexport default Step\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBell(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 11,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.1875 9.6h2.625c0 .7732-.5876 1.4-1.3125 1.4s-1.3125-.6268-1.3125-1.4zm.4688-8.2866C2.2005 1.7128 1.125 3.1218 1.125 4.7998v2.3998c0 .2212-.1684.4004-.3746.4004C.336 7.6 0 7.959 0 8.4v.6006C0 9.1108.0834 9.2.188 9.2h8.624c.1038 0 .188-.0906.188-.1994V8.4c0-.4418-.3375-.8-.7504-.8-.2068 0-.3746-.1778-.3746-.4004V4.7998c0-1.6774-1.0753-3.0868-2.5313-3.4864V.9002C5.3438.4018 4.966 0 4.5 0c-.465 0-.8438.403-.8438.9002v.4132z\",\n    fill: \"#5284FF\",\n    fillRule: \"evenodd\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBell);\nexport default __webpack_public_path__ + \"static/media/Bell.bd591cffac9f06534299622beea9a6aa.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGreyCircleTick(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 11,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#D2D2D2\",\n    cx: 5.5,\n    cy: 5.5,\n    r: 5.5\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.123 6.196l2.1196-2.1195a.5897.5897 0 0 1 .8339 0l.1386.1386a.5897.5897 0 0 1 0 .8339L5.6903 7.5738a.588.588 0 0 1-.4263.1726.5898.5898 0 0 1-.6389-.1192L3.143 6.1959a.5897.5897 0 0 1-.0146-.8338l.1361-.141a.5897.5897 0 0 1 .8338-.0145l1.0247.9895z\",\n    fill: \"#FFF\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyCircleTick);\nexport default __webpack_public_path__ + \"static/media/GreyCircleTick.52c1034897ddb3c78d899789cdda0874.svg\";\nexport { ForwardRef as ReactComponent };","import 'notification-polyfill'\n\nexport function sendNotification(message = 'Hi there') {\n  // Let's check if the browser supports notifications\n  if (!('Notification' in window)) {\n    return false\n  }\n\n  // Let's check whether notification permissions have already been granted\n  else if (hasPermission()) {\n    // If it's okay let's create a notification\n    new Notification(message)\n  }\n}\n\nexport function hasPermission() {\n  return Notification.permission === 'granted'\n}\n\nexport function requestPermission() {\n  if (Notification.permission !== 'denied') {\n    Notification.requestPermission().then(function(permission) {\n      // If the user accepts, let's create a notification\n      if (permission === 'granted') {\n        sendNotification(\n          'We will send you a notification when your name is ready'\n        )\n      }\n    })\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\n\nimport mq from 'mediaQuery'\nimport Step from './Step'\nimport Button from '../../Forms/Button'\nimport { ReactComponent as Bell } from '../../Icons/Bell.svg'\nimport { ReactComponent as Tick } from '../../Icons/GreyCircleTick.svg'\n\nimport { requestPermission, hasPermission } from './notification'\n\nconst Steps = styled('section')`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-row-gap: 30px;\n  ${mq.large`\n    grid-template-columns: repeat(3, 1fr);\n    grid-column-gap: 30px;\n    grid-template-rows: 1fr;\n  `}\n`\n\nconst Header = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  h2 {\n    font-family: Overpass;\n    font-weight: 300;\n    font-size: 18px;\n    color: #2b2b2b;\n    letter-spacing: 0;\n    margin: 0;\n    margin-bottom: 5px;\n\n    ${mq.medium`\n      font-size: 24px;\n      color: #2B2B2B;\n      letter-spacing: 0;\n    `}\n  }\n\n  p {\n    margin: 0;\n    font-weight: 400;\n    font-family: Overpass;\n    font-size: 14px;\n    color: #adbbcd;\n    letter-spacing: 0;\n  }\n`\n\nconst NotifyButton = styled(Button)`\n  flex-shrink: 0;\n`\n\nconst NotifyButtonDisabled = styled('div')`\n  color: hsla(0, 0%, 82%, 1);\n`\n\nconst Explainer = ({ step, waitPercentComplete, waitTime }) => {\n  const { t } = useTranslation()\n  const titles = {\n    PRICE_DECISION: t('register.titles.0'),\n    COMMIT_SENT: t('register.titles.1'),\n    COMMIT_CONFIRMED: t('register.titles.1'),\n    AWAITING_REGISTER: t('register.titles.1'),\n    REVEAL_SENT: t('register.titles.1'),\n    REVEAL_CONFIRMED: t('register.titles.2')\n  }\n\n  return (\n    <>\n      <Header>\n        <div>\n          <h2>{titles[step]}</h2>\n          <p>{t('register.favourite')}</p>\n        </div>\n        {hasPermission() ? (\n          <NotifyButtonDisabled>\n            <Tick style={{ marginRight: 5 }} />\n            {t('register.notify')}\n          </NotifyButtonDisabled>\n        ) : (\n          <NotifyButton type=\"hollow-primary\" onClick={requestPermission}>\n            <Bell style={{ marginRight: 5 }} />\n            {t('register.notify')}\n          </NotifyButton>\n        )}\n      </Header>\n\n      <Steps>\n        <Step\n          number={1}\n          progress={\n            step === 'PRICE_DECISION' ? 0 : step === 'COMMIT_SENT' ? 50 : 100\n          }\n          title={t('register.step1.title')}\n          text={t('register.step1.text') + ' ' + t('register.step1.text2')}\n        />\n        <Step\n          number={2}\n          progress={\n            step === 'PRICE_DECISION' || step === 'COMMIT_SENT'\n              ? 0\n              : step === 'COMMIT_CONFIRMED'\n              ? waitPercentComplete\n              : 100\n          }\n          title={\n            t(\n              'register.step2.title'\n            ) /* `Wait for ${moment\n            .duration({ seconds: waitTime })\n            .humanize()}` //add back localization of moment*/\n          }\n          text={t('register.step2.text')}\n        />\n        <Step\n          number={3}\n          progress={\n            step === 'REVEAL_CONFIRMED' ? 100 : step === 'REVEAL_SENT' ? 50 : 0\n          }\n          title={t('register.step3.title')}\n          text={t('register.step3.text')}\n        />\n      </Steps>\n    </>\n  )\n}\n\nexport default Explainer\n","import React, { useState } from 'react'\nimport Calendar, { CalendarButton } from './Calendar'\nimport EmailNotifyLink from '../ExpiryNotification/EmailNotifyLink'\nimport moment from 'moment'\nimport { useTranslation } from 'react-i18next'\nimport Modal from '../Modal/Modal'\nimport ExpiryNotificationModal from '../ExpiryNotification/ExpiryNotificationModal'\n\nfunction RenewalCalendarInvite({\n  startDatetime,\n  type = '',\n  name,\n  registrant,\n  noMargin\n}) {\n  const [showModal, setShowModal] = useState(false)\n\n  const { t } = useTranslation()\n  const endDatetime = startDatetime.clone().add(2, 'hours')\n  const duration = moment.duration(endDatetime.diff(startDatetime)).asHours()\n  const event = {\n    title: t('reminder.renewal.title', { name }),\n    description: t('reminder.renewal.description'),\n    location: t('reminder.everywhere'),\n    startDatetime: startDatetime.format('YYYYMMDDTHHmmss'),\n    endDatetime: endDatetime.format('YYYYMMDDTHHmmss'),\n    duration\n  }\n\n  const handleEmailNotifyClick = () => {\n    setShowModal(true)\n  }\n\n  const handleCloseModal = () => {\n    setShowModal(false)\n  }\n\n  // AddToCalendarHOC does not allow passing in additional arbitrary links\n  // to render in the dropdown list. Instead of refactoring the external\n  // library, the Dropdown component was extend to support rendering\n  // additional elements from appendChildren & prependChildren props.\n  const dropDownLinks = [\n    <EmailNotifyLink\n      key=\"email\"\n      domainName={name}\n      address={registrant}\n      onClick={handleEmailNotifyClick}\n    >\n      {t('c.email')}\n    </EmailNotifyLink>\n  ]\n\n  return (\n    <>\n      {showModal && (\n        <Modal closeModal={handleCloseModal}>\n          <ExpiryNotificationModal\n            {...{ address: registrant, onCancel: handleCloseModal }}\n          />\n        </Modal>\n      )}\n      <Calendar\n        style={{ display: 'none' }}\n        event={event}\n        dropDownLinks={dropDownLinks}\n        noMargin={noMargin}\n      />\n    </>\n  )\n}\n\nexport default RenewalCalendarInvite\n\nexport { CalendarButton }\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSmallPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#FFF\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M.8222 8.1247l.0065.0065-.768 2.6925c-.236.8263.236 1.318 1.082 1.082l2.6787-.7818.0054.0054 5.8701-5.87-3.0045-3.0047L.8222 8.1247zM11.6168 1.677L10.2791.3395c-.4524-.4525-1.2-.4525-1.6721 0L7.4857 1.4607l3.0098 3.0098 1.1213-1.1213c.4722-.4721.4722-1.2197 0-1.6721\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSmallPencil);\nexport default __webpack_public_path__ + \"static/media/SmallPencil.7e117320867486bed4b12e5f129df164.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from '@emotion/styled/macro'\nimport moment from 'moment'\nimport { css } from 'emotion'\nimport { useHistory } from 'react-router-dom'\nimport { Mutation } from '@apollo/client/react/components'\nimport { useTranslation } from 'react-i18next'\nimport EthVal from 'ethval'\n\nimport { trackReferral } from '../../../utils/analytics'\nimport { COMMIT, REGISTER } from '../../../graphql/mutations'\n\nimport Tooltip from 'components/Tooltip/Tooltip'\nimport PendingTx from '../../PendingTx'\nimport Button from '../../Forms/Button'\nimport AddToCalendar from '../../Calendar/RenewalCalendar'\nimport { ReactComponent as DefaultPencil } from '../../Icons/SmallPencil.svg'\nimport { ReactComponent as DefaultOrangeExclamation } from '../../Icons/OrangeExclamation.svg'\nimport { useAccount } from '../../QueryAccount'\n\nconst CTAContainer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`\n\nconst Pencil = styled(DefaultPencil)`\n  margin-right: 5px;\n`\n\nconst Prompt = styled('span')`\n  color: #ffa600;\n  margin-right: 10px;\n`\n\nconst OrangeExclamation = styled(DefaultOrangeExclamation)`\n  margin-right: 5px;\n  height: 12px;\n  width: 12px;\n`\n\nconst LeftLink = styled(Link)`\n  margin-right: 20px;\n`\n\nfunction getCTA({\n  step,\n  incrementStep,\n  secret,\n  duration,\n  label,\n  hasSufficientBalance,\n  txHash,\n  setTxHash,\n  setCommitmentTimerRunning,\n  commitmentTimerRunning,\n  isAboveMinDuration,\n  refetch,\n  refetchIsMigrated,\n  readOnly,\n  price,\n  years,\n  premium,\n  history,\n  t,\n  ethUsdPrice,\n  account\n}) {\n  const CTAs = {\n    PRICE_DECISION: (\n      <Mutation\n        mutation={COMMIT}\n        variables={{ label, secret, commitmentTimerRunning }}\n        onCompleted={data => {\n          const txHash = Object.values(data)[0]\n          setTxHash(txHash)\n          setCommitmentTimerRunning(true)\n          incrementStep()\n        }}\n      >\n        {mutate =>\n          isAboveMinDuration && !readOnly ? (\n            hasSufficientBalance ? (\n              <Button data-testid=\"request-register-button\" onClick={mutate}>\n                {t('register.buttons.request')}\n              </Button>\n            ) : (\n              <>\n                <Prompt>\n                  <OrangeExclamation />\n                  {t('register.buttons.insufficient')}\n                </Prompt>\n                <Button data-testid=\"request-register-button\" type=\"disabled\">\n                  {t('register.buttons.request')}\n                </Button>\n              </>\n            )\n          ) : readOnly ? (\n            <Tooltip\n              text=\"<p>You are not connected to a web3 browser. Please connect to a web3 browser and try again</p>\"\n              position=\"top\"\n              border={true}\n              offset={{ left: -30, top: 10 }}\n            >\n              {({ showTooltip, hideTooltip }) => {\n                return (\n                  <Button\n                    data-testid=\"request-register-button\"\n                    type=\"disabled\"\n                    onMouseOver={() => {\n                      showTooltip()\n                    }}\n                    onMouseLeave={() => {\n                      hideTooltip()\n                    }}\n                  >\n                    {t('register.buttons.request')}\n                  </Button>\n                )\n              }}\n            </Tooltip>\n          ) : (\n            <Button data-testid=\"request-register-button\" type=\"disabled\">\n              {t('register.buttons.request')}\n            </Button>\n          )\n        }\n      </Mutation>\n    ),\n    COMMIT_SENT: <PendingTx txHash={txHash} />,\n    COMMIT_CONFIRMED: (\n      <Button data-testid=\"disabled-register-button\" type=\"disabled\">\n        {t('register.buttons.register')}\n      </Button>\n    ),\n    AWAITING_REGISTER: (\n      <Mutation\n        mutation={REGISTER}\n        variables={{ label, duration, secret }}\n        onCompleted={data => {\n          const txHash = Object.values(data)[0]\n          setTxHash(txHash)\n          incrementStep()\n        }}\n      >\n        {mutate => (\n          <>\n            {hasSufficientBalance ? (\n              <>\n                <Prompt>\n                  <OrangeExclamation />\n                  {t('register.buttons.warning')}\n                </Prompt>\n                <Button data-testid=\"register-button\" onClick={mutate}>\n                  {t('register.buttons.register')}\n                </Button>\n              </>\n            ) : (\n              <>\n                <Prompt>\n                  <OrangeExclamation />\n                  {t('register.buttons.insufficient')}\n                </Prompt>\n                <Button data-testid=\"register-button\" type=\"disabled\">\n                  {t('register.buttons.register')}\n                </Button>\n              </>\n            )}\n          </>\n        )}\n      </Mutation>\n    ),\n    REVEAL_SENT: (\n      <PendingTx\n        txHash={txHash}\n        onConfirmed={async () => {\n          if (ethUsdPrice) {\n            // this is not set on local test env\n            trackReferral({\n              transactionId: txHash,\n              labels: [label],\n              type: 'register', // renew/register\n              price: new EthVal(`${price._hex}`)\n                .toEth()\n                .mul(ethUsdPrice)\n                .toFixed(2), // in wei, // in wei\n              years,\n              premium\n            })\n          }\n          incrementStep()\n        }}\n      />\n    ),\n    REVEAL_CONFIRMED: (\n      <>\n        <AddToCalendar\n          css={css`\n            margin-right: 20px;\n          `}\n          name={`${label}.evmos`}\n          startDatetime={moment()\n            .utc()\n            .local()\n            .add(duration, 'seconds')\n            .subtract(30, 'days')}\n        />\n        <LeftLink\n          onClick={async () => {\n            await Promise.all([refetch(), refetchIsMigrated()])\n            history.push(`/name/${label}.evmos`)\n          }}\n          data-testid=\"manage-name-button\"\n        >\n          {t('register.buttons.manage')}\n        </LeftLink>\n        <Button\n          onClick={async () => {\n            await Promise.all([refetchIsMigrated()])\n            history.push(`/address/${account}`)\n          }}\n        >\n          <Pencil />\n          {t('register.buttons.setreverserecord')}\n        </Button>\n      </>\n    )\n  }\n  return CTAs[step]\n}\n\nconst CTA = ({\n  step,\n  incrementStep,\n  secret,\n  duration,\n  label,\n  hasSufficientBalance,\n  setTimerRunning,\n  setCommitmentTimerRunning,\n  commitmentTimerRunning,\n  setBlockCreatedAt,\n  isAboveMinDuration,\n  refetch,\n  refetchIsMigrated,\n  readOnly,\n  price,\n  years,\n  premium,\n  ethUsdPrice\n}) => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const account = useAccount()\n  const [txHash, setTxHash] = useState(undefined)\n\n  useEffect(() => {\n    return () => {\n      if (step === 'REVEAL_CONFIRMED') {\n        refetch()\n      }\n    }\n  }, [step])\n\n  return (\n    <CTAContainer>\n      {getCTA({\n        step,\n        incrementStep,\n        secret,\n        duration,\n        label,\n        hasSufficientBalance,\n        txHash,\n        setTxHash,\n        setTimerRunning,\n        setBlockCreatedAt,\n        setCommitmentTimerRunning,\n        commitmentTimerRunning,\n        isAboveMinDuration,\n        refetch,\n        refetchIsMigrated,\n        readOnly,\n        price,\n        years,\n        premium,\n        history,\n        t,\n        ethUsdPrice,\n        account\n      })}\n    </CTAContainer>\n  )\n}\n\nexport default CTA\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgQuestionMarkSmall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 11,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0 -1)\",\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"hsla(0,0%,82%,1)\",\n    cx: 5.5,\n    cy: 6.5,\n    r: 5.5\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    fontFamily: \"Overpass-Bold, Overpass\",\n    fontSize: 10,\n    fontWeight: \"bold\",\n    letterSpacing: 0.3125,\n    fill: \"#FFF\"\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 3,\n    y: 10\n  }, \"?\")))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestionMarkSmall);\nexport default __webpack_public_path__ + \"static/media/QuestionMarkSmall.b12f0c21e8fd490426096d90f920a657.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheckCircle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 11,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"#42E068\",\n    cx: 5.5,\n    cy: 5.5,\n    r: 5.5\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.123 6.196l2.1196-2.1195a.5897.5897 0 0 1 .8339 0l.1386.1386a.5897.5897 0 0 1 0 .8339L5.6903 7.5738a.588.588 0 0 1-.4263.1726.5898.5898 0 0 1-.6389-.1192L3.143 6.1959a.5897.5897 0 0 1-.0146-.8338l.1361-.141a.5897.5897 0 0 1 .8338-.0145l1.0247.9895z\",\n    fill: \"#FFF\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckCircle);\nexport default __webpack_public_path__ + \"static/media/CheckCircle.fb9d3a0e576b3026604d0865dfc24b1c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nimport { hasReachedState } from './registerReducer'\n\nimport Tooltip from '../../Tooltip/Tooltip'\nimport { ReactComponent as DefaultQuestionMark } from 'components/Icons/QuestionMarkSmall.svg'\nimport { ReactComponent as DefaultCheckCircle } from 'components/Icons/CheckCircle.svg'\n\nconst ProgressContainer = styled('div')`\n  margin-bottom: 40px;\n`\n\nconst states = {\n  PRICE_DECISION: 0,\n  COMMIT_SENT: 12.5,\n  COMMIT_CONFIRMED: 25,\n  AWAITING_REGISTER: 75,\n  REVEAL_SENT: 85,\n  REVEAL_CONFIRMED: 100\n}\n\nconst ProgressBar = styled('div')`\n  height: 20px;\n  width: 100%;\n  border-radius: 10px;\n  margin-bottom: 20px;\n  background: ${({ percentDone }) =>\n      percentDone &&\n      `\n        linear-gradient(to right, #AFFF8C 0%, #42E068 ${percentDone}%, transparent ${percentDone}%),`}\n    rgba(66, 224, 104, 0.1);\n`\n\nconst Steps = styled('div')`\n  display: flex;\n  margin-bottom: 20px;\n`\n\nconst StepContainer = styled('section')`\n  flex: ${p => (p.large ? '2' : '1')};\n  display: flex;\n  justify-content: center;\n  border: 1px dotted #ccc;\n  border-right: none;\n  border-top: none;\n  position: relative;\n\n  &:last-of-type {\n    border-right: 1px dotted #ccc;\n  }\n`\n\nconst StepContent = styled('div')`\n  display: flex;\n  align-items: center;\n  background: white;\n  padding: 3px 15px;\n  font-family: Overpass;\n  font-weight: bold;\n  font-size: 14px;\n  letter-spacing: 1px;\n  margin-bottom: -16px;\n  transition: 0.2s;\n  color: ${p => (p.completed ? 'hsla(134, 72%, 57%, 1)' : 'hsla(0,0%,82%,1)')};\n  &:hover {\n    color: ${p =>\n      p.completed ? 'hsla(134, 72%, 57%, 1)' : 'hsla(227, 58%, 41%, 1)'};\n\n    circle {\n      fill: hsla(227, 58%, 41%, 1);\n    }\n  }\n`\n\nconst QuestionMark = styled(DefaultQuestionMark)`\n  margin-left: 5px;\n  margin-bottom: 2px;\n  transition: 0.2s;\n`\n\nconst CheckCircle = styled(DefaultCheckCircle)`\n  margin-left: 5px;\n  margin-bottom: 2px;\n`\n\nfunction Step({\n  children,\n  completed,\n  text,\n  large,\n  icon,\n  onMouseOver,\n  onMouseLeave\n}) {\n  return (\n    <StepContainer large={large}>\n      <StepContent\n        completed={completed}\n        onMouseOver={onMouseOver}\n        onMouseLeave={onMouseLeave}\n      >\n        {children}\n        {text} {icon}\n      </StepContent>\n    </StepContainer>\n  )\n}\n\nfunction Progress({ step, waitPercentComplete }) {\n  if (step === 'PRICE_DECISION') return null\n\n  const waitMin = states['COMMIT_CONFIRMED']\n  const waitMax = states['AWAITING_REGISTER']\n  const percentDone = waitPercentComplete / (100 / (waitMax - waitMin)) + 25\n  return (\n    <ProgressContainer>\n      <ProgressBar\n        percentDone={step !== 'COMMIT_CONFIRMED' ? states[step] : percentDone}\n      />\n      <Steps>\n        <Tooltip\n          text=\"<p>The first transaction is being mined on the blockchain. This should take 15-30 seconds.</p>\"\n          position=\"top\"\n          border={true}\n          offset={{ left: -30, top: 10 }}\n        >\n          {({ tooltipElement, showTooltip, hideTooltip }) => {\n            const completed = hasReachedState('COMMIT_CONFIRMED', step)\n            return (\n              <Step\n                text=\"Step 1\"\n                completed={completed}\n                icon={completed ? <CheckCircle /> : <QuestionMark />}\n                onMouseOver={() => {\n                  showTooltip()\n                }}\n                onMouseLeave={() => {\n                  hideTooltip()\n                }}\n              >\n                &nbsp;\n                {tooltipElement}\n              </Step>\n            )\n          }}\n        </Tooltip>\n        <Tooltip\n          text=\"<p>Once this step is complete, the ‘register’ button will activate. Sign up for browser notifications to remind you when the wait is up.  </p>\"\n          position=\"top\"\n          border={true}\n          offset={{ left: -30, top: 10 }}\n        >\n          {({ tooltipElement, showTooltip, hideTooltip }) => {\n            const completed = hasReachedState('AWAITING_REGISTER', step)\n            return (\n              <Step\n                large\n                text=\"Step 2\"\n                completed={completed}\n                icon={completed ? <CheckCircle /> : <QuestionMark />}\n                onMouseOver={() => {\n                  showTooltip()\n                }}\n                onMouseLeave={() => {\n                  hideTooltip()\n                }}\n              >\n                &nbsp;\n                {tooltipElement}\n              </Step>\n            )\n          }}\n        </Tooltip>\n        <Tooltip\n          text=\"<p>Click ‘register’ to launch the second transaction and complete the registration. </p>\"\n          position=\"top\"\n          border={true}\n          offset={{ left: -30, top: 10 }}\n        >\n          {({ tooltipElement, showTooltip, hideTooltip }) => {\n            const completed = hasReachedState('REVEAL_CONFIRMED', step)\n            return (\n              <Step\n                completed={completed}\n                text=\"Step 3\"\n                icon={\n                  hasReachedState('REVEAL_CONFIRMED', step) ? (\n                    <CheckCircle />\n                  ) : (\n                    <QuestionMark />\n                  )\n                }\n                onMouseOver={() => {\n                  showTooltip()\n                }}\n                onMouseLeave={() => {\n                  hideTooltip()\n                }}\n              >\n                &nbsp;\n                {tooltipElement}\n              </Step>\n            )\n          }}\n        </Tooltip>\n      </Steps>\n    </ProgressContainer>\n  )\n}\n\nexport default Progress\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from '@emotion/styled/macro'\n\nconst NotAvailableContainer = styled('div')`\n  padding: 30px 40px;\n`\n\nconst Message = styled('div')`\n  background: #f0f6fa;\n  color: #2b2b2b;\n  font-size: 20px;\n  padding: 20px;\n  font-weight: 300;\n`\n\nexport default function NotAvailable({ domain }) {\n  const { t } = useTranslation()\n\n  return (\n    <NotAvailableContainer>\n      <Message>{t('singleName.messages.alreadyregistered')}</Message>\n    </NotAvailableContainer>\n  )\n}\n","import Chart from 'chart.js'\nimport styled from '@emotion/styled/macro'\nimport React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport priceCalculator from './PriceCalculator'\n\nconst LineGraphContainer = styled('div')`\n  background-color: white;\n  color: #d8d8d8;\n  padding: 1em;\n  #myChart {\n    cursor: pointer;\n  }\n`\n\nconst Legend = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  span {\n    margin: 1em;\n  }\n`\n\nconst Canvas = styled('canvas')`\n  background-color: #e9eef6;\n`\n\nconst Title = styled('span')`\n  font-weight: bold;\n  font-size: large;\n`\n\nexport default function LineGraph({\n  startDate,\n  currentDate,\n  targetDate,\n  endDate,\n  now,\n  ethUsdPrice,\n  handleTooltip,\n  oracle,\n  premiumOnlyPrice,\n  price\n}) {\n  const c = priceCalculator({\n    price, // in ETH, BN\n    premium: premiumOnlyPrice, // in ETH\n    ethUsdPrice\n  })\n\n  const daysRemaining = oracle.getDaysRemaining(now)\n  const hoursRemaining = oracle.getHoursRemaining(now)\n  const totalDays = oracle.totalDays\n  const chartRef = React.createRef()\n  const labels = []\n  const dates = []\n  const data = []\n  const pointRadius = []\n  const supportLine = []\n  const { t } = useTranslation()\n  const [chart, setChart] = useState(false)\n  let chartStartDate, maxTicksLimit\n  if (daysRemaining > 7) {\n    chartStartDate = now\n    maxTicksLimit = daysRemaining\n  } else if (daysRemaining > 1) {\n    chartStartDate = endDate.clone().subtract(7, 'day')\n    maxTicksLimit = 7\n  } else {\n    chartStartDate = endDate.clone().subtract(24, 'hour')\n    maxTicksLimit = 24\n  }\n  const chartstartPremium = oracle.getAmountByDateRange(\n    startDate,\n    chartStartDate\n  )\n\n  for (\n    let i = chartStartDate.clone();\n    endDate.diff(i) > 0;\n    i = i.add(1, 'hour')\n  ) {\n    const premium = oracle.getAmountByDateRange(startDate, i)\n    let label = i.format('YYYY-MM-DD:HH:00')\n    dates.push(label)\n    labels.push(premium)\n    if (\n      currentDate.diff(i) >= 0 ||\n      currentDate.format('YYYY-MM-DD:HH:00') === label\n    ) {\n      data.push(premium)\n    } else {\n      data.push(null)\n    }\n    if (\n      currentDate.format('YYYY-MM-DD:HH:00') === label ||\n      startDate.format('YYYY-MM-DD:HH:00') === label ||\n      targetDate.format('YYYY-MM-DD:HH:00') === label ||\n      targetDate === label\n    ) {\n      pointRadius.push(3)\n    } else {\n      pointRadius.push(null)\n    }\n    if (targetDate === label) {\n      supportLine.push(2000)\n    } else {\n      supportLine.push(null)\n    }\n  }\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d')\n    Chart.defaults.global.tooltips.yAlign = 'top'\n    Chart.defaults.global.tooltips.xAlign = 'center'\n    let _chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: dates,\n        //Bring in data\n        datasets: [\n          {\n            label: 'Passed',\n            borderWidth: 3,\n            data,\n            borderColor: '#2C46A6',\n            backgroundColor: '#2C46A6',\n            pointRadius,\n            fill: false\n          },\n          {\n            label: 'Estimate',\n            borderWidth: 2,\n            data: labels,\n            borderColor: '#D8D8D8',\n            pointBackgroundColor: '#2C46A6',\n            pointBorderColor: '#2C46A6',\n            fill: false,\n            pointRadius\n          }\n        ]\n      },\n      options: {\n        events: ['click'],\n        animation: {\n          duration: 0\n        },\n        tooltips: {\n          enabled: true,\n          mode: 'nearest',\n          intersect: false,\n          titleAlign: 'center',\n          multiKeyBackground: '#2C46A6',\n          callbacks: {\n            label: function(tooltipItem, data) {\n              handleTooltip(tooltipItem)\n              let label = `Premium: $${tooltipItem.yLabel.toFixed(2)}`\n              if (tooltipItem.datasetIndex === 1) {\n                return label\n              }\n            }\n          }\n        },\n        responsive: true,\n        aspectRatio: 5,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [\n            {\n              afterFit: scale => {\n                scale.height = 0\n              },\n              ticks: {\n                maxTicksLimit,\n                callback: function() {\n                  return ''\n                }\n              },\n              gridLines: {\n                zeroLineColor: '#e9eef6',\n                zeroLineWidth: 3,\n                color: 'white',\n                lineWidth: 3,\n                offsetGridLines: false,\n                drawBorder: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: { display: false, max: chartstartPremium * 1.1 },\n              gridLines: {\n                display: false,\n                drawBorder: false\n              }\n            }\n          ]\n        },\n        layout: {\n          padding: {}\n        }\n      }\n    })\n    setChart(_chart)\n  }, [])\n  if (chart) {\n    chart.data.datasets[0].pointRadius = pointRadius\n    chart.data.datasets[1].pointRadius = pointRadius\n    chart.update()\n  }\n\n  return (\n    <LineGraphContainer>\n      <Legend>\n        <Title>\n          {t('linegraph.title', {\n            premiumInEth: c.premium\n          })}{' '}\n          EVMOS($\n          {c.premiumInUsd})\n        </Title>\n        <span>\n          {daysRemaining > 1\n            ? t('linegraph.daysRemaining', { daysRemaining, totalDays })\n            : `${hoursRemaining} hours remaining`}\n        </span>\n      </Legend>\n      <Canvas id=\"myChart\" ref={chartRef} />\n      <Legend>\n        <span>${parseInt(chartstartPremium)} </span>\n        <span>$0</span>\n      </Legend>\n    </LineGraphContainer>\n  )\n}\n","import React from 'react'\nimport Calendar, { CalendarButton } from './Calendar'\nimport moment from 'moment'\nimport { useTranslation } from 'react-i18next'\n\nfunction RenewalCalendarInvite({ startDatetime, name, noMargin, invalid }) {\n  const { t } = useTranslation()\n  const endDatetime = startDatetime.clone().add(2, 'hours')\n  const duration = moment.duration(endDatetime.diff(startDatetime)).asHours()\n  const event = {\n    title: t('reminder.release.title', { name }),\n    description: t('reminder.release.description', { name }),\n    location: t('reminder.everywhere'),\n    startDatetime: startDatetime.format('YYYYMMDDTHHmmss'),\n    endDatetime: endDatetime.format('YYYYMMDDTHHmmss'),\n    duration\n  }\n  return <Calendar event={event} noMargin={noMargin} invalid={invalid} />\n}\n\nexport default RenewalCalendarInvite\n\nexport { CalendarButton }\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { css } from 'emotion'\nimport { useTranslation } from 'react-i18next'\nimport { formatDate } from 'utils/dates'\nimport mq from 'mediaQuery'\n\nimport { ReactComponent as ChainDefault } from '../../Icons/chain.svg'\n\nimport DefaultInput from '../../Forms/Input'\nimport AddToCalendar from '../../Calendar/ReleaseCalendar'\n\nconst PremiumContainer = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  ${mq.medium`\n    grid-template-columns:\n      minmax(min-content, 200px) minmax(min-content, min-content)\n      minmax(200px, 1fr) minmax(200px, min-content);\n  `}\n`\nconst Chain = styled(ChainDefault)`\n  display: none;\n\n  ${mq.medium`\n    display: block;\n    margin-top: 20px;\n    margin-left: 20px;\n    margin-right: 20px;\n  `}\n`\n\nconst AmountContainer = styled('div')`\n  ${mq.medium`\n    max-width: 220px;\n  `}\n`\n\nconst DateContainer = styled('div')`\n  width: 100%;\n  ${mq.medium`\n    width: auto\n  `}\n`\n\nconst CalendarContainer = styled('div')`\n  margin-top: 1em;\n  ${mq.medium`\n    margin: auto;\n    max-width: 220px;\n  `}\n`\n\nconst Value = styled('div')`\n  font-family: Overpass;\n  font-weight: 100;\n  font-size: 22px;\n  color: ${p => (p.invalid ? 'red' : '#2b2b2b')};\n  border-bottom: 1px solid #dbdbdb;\n  ${mq.small`\n    font-size: 28px;\n  `}\n`\n\nconst Description = styled('div')`\n  font-family: Overpass;\n  font-weight: 300;\n  font-size: 14px;\n  color: #adbbcd;\n  margin-top: 10px;\n`\n\nconst Input = styled(DefaultInput)`\n  display: inline-block;\n  width: 8em;\n  margin-bottom: 0em;\n`\n\nfunction Premium({\n  name,\n  invalid,\n  className,\n  reference,\n  handlePremium,\n  targetPremium,\n  targetDate\n}) {\n  const { t } = useTranslation()\n  return (\n    <PremiumContainer className={className} ref={reference}>\n      <AmountContainer>\n        <Input\n          invalid={invalid}\n          wide={false}\n          placeholder={'$0'}\n          value={targetPremium}\n          onChange={evt => {\n            handlePremium(evt.target)\n          }}\n        />\n        <Description>{t('register.premium.title')}</Description>\n      </AmountContainer>\n      <Chain />\n      <DateContainer>\n        <Value invalid={invalid}>\n          {invalid\n            ? t('register.premium.invalid')\n            : `${formatDate(targetDate)}`}\n        </Value>\n        <Description>{t('register.premium.dateDescription')}</Description>\n      </DateContainer>\n      <CalendarContainer style={{ display: 'none' }}>\n        <AddToCalendar\n          css={css`\n            margin-right: 20px;\n          `}\n          name={name}\n          startDatetime={targetDate.utc().local()}\n          invalid={invalid}\n        />\n      </CalendarContainer>\n    </PremiumContainer>\n  )\n}\n\nexport default Premium\n","import crypto from 'crypto'\nimport moment from 'moment'\n\nfunction randomSecret() {\n  return '0x' + crypto.randomBytes(32).toString('hex')\n}\n\nconst Store = {\n  get: label => {\n    return window.localStorage.getItem('progress')\n      ? JSON.parse(window.localStorage.getItem('progress'))[label]\n      : null\n  },\n  set: (label, obj) => {\n    let data = {}\n    let progress\n    if ((progress = window.localStorage.getItem('progress'))) {\n      data = JSON.parse(progress)\n    }\n    data[label] = {\n      ...data[label],\n      ...obj\n    }\n    window.localStorage.setItem('progress', JSON.stringify(data))\n  },\n  remove: label => {\n    let data = {}\n    let progress\n    if ((progress = window.localStorage.getItem('progress'))) {\n      data = JSON.parse(progress)\n    }\n    delete data[label]\n    window.localStorage.setItem('progress', JSON.stringify(data))\n  }\n}\n\nconst ProgressRecorder = ({\n  checkCommitment,\n  domain,\n  networkId,\n  states,\n  step,\n  dispatch,\n  secret,\n  setSecret,\n  years,\n  setYears,\n  timerRunning,\n  setTimerRunning,\n  waitUntil,\n  setWaitUntil,\n  secondsPassed,\n  setSecondsPassed,\n  commitmentExpirationDate,\n  setCommitmentExpirationDate,\n  now\n}) => {\n  const stepIndex = Object.keys(states).indexOf(step)\n\n  const label = `${networkId}-${domain.label}`\n  let savedStepIndex = 0\n  let savedStep, isBehind\n  savedStep = Store.get(label)\n  if (!secret) {\n    if (savedStep && savedStep.secret) {\n      setSecret(savedStep.secret)\n    } else {\n      setSecret(randomSecret())\n    }\n  }\n  if (!years) {\n    if (savedStep && savedStep.years) {\n      setYears(savedStep.years)\n    } else {\n      setYears(1)\n    }\n  }\n  if (!waitUntil) {\n    if (savedStep && savedStep.waitUntil) {\n      setWaitUntil(savedStep.waitUntil)\n    }\n  }\n  if (!secondsPassed) {\n    if (savedStep && savedStep.secondsPassed) {\n      setSecondsPassed(savedStep.secondsPassed)\n    }\n  }\n  if (!commitmentExpirationDate) {\n    if (savedStep && savedStep.commitmentExpirationDate) {\n      setCommitmentExpirationDate(savedStep.commitmentExpirationDate)\n    }\n  }\n\n  savedStepIndex = Object.keys(states).indexOf(savedStep && savedStep.step)\n  isBehind = savedStepIndex - stepIndex > 0\n\n  if (savedStep && now) {\n    if (\n      savedStep.commitmentExpirationDate &&\n      moment(savedStep.commitmentExpirationDate).isSameOrBefore(now)\n    ) {\n      Store.remove(label)\n    } else if (isBehind) {\n      dispatch('NEXT')\n    }\n  }\n\n  switch (step) {\n    case 'PRICE_DECISION':\n      if (!savedStep) {\n        Store.set(label, { step, secret })\n      } else {\n        if (!savedStep.secret || !savedStep.years) {\n          Store.set(label, { step, secret, years })\n        } else {\n          let commitmentDate = new Date(checkCommitment * 1000)\n          if (commitmentDate > 0) {\n            dispatch('NEXT') // Go to pending\n            dispatch('NEXT') // Go to confirmed\n          } else {\n            // This should be called only when user increament/decrement years\n            Store.set(label, { step, secret, years })\n          }\n        }\n      }\n      break\n    case 'COMMIT_CONFIRMED':\n      Store.set(label, {\n        step,\n        secret,\n        waitUntil,\n        secondsPassed,\n        commitmentExpirationDate\n      })\n      if (!timerRunning) {\n        setTimerRunning(true)\n      }\n      break\n    case 'AWAITING_REGISTER':\n      if (timerRunning) {\n        setTimerRunning(false)\n      }\n      break\n  }\n  return secret\n}\n\nexport default ProgressRecorder\n","import { useQuery } from '@apollo/client'\nimport { gql } from '@apollo/client'\n\nexport const GET_WEB3 = gql`\n  query web3 @client {\n    accounts\n    networkId\n    network\n    isReadOnly\n    isSafeApp\n  }\n`\n\nconst useNetworkInfo = () => {\n  const { data, loading, error, refetch } = useQuery(GET_WEB3)\n  if (!data) {\n    return {\n      accounts: undefined,\n      network: undefined,\n      networkId: undefined,\n      loading,\n      error\n    }\n  }\n  const { accounts, network, networkId, isReadOnly, isSafeApp } = data\n  return {\n    accounts: isReadOnly ? [] : accounts,\n    network,\n    networkId,\n    loading,\n    refetch,\n    error,\n    isReadOnly,\n    isSafeApp\n  }\n}\n\nexport default useNetworkInfo\n","const HOUR = 60 * 60\nconst DAY = HOUR * 24\nconst FACTOR = 0.5\nexport default class PremiumPriceOracle {\n  constructor(expiryDate, algorithm) {\n    this.algorithm = algorithm\n    if (algorithm === 'exponential') {\n      this.startingPremiumInUsd = 100000000\n      this.totalDays = 21\n      this.lastValue = this.startingPremiumInUsd * FACTOR ** this.totalDays\n    } else {\n      this.startingPremiumInUsd = 100000\n      this.totalDays = 28\n    }\n    this.releasedDate = expiryDate.clone().add(90, 'days')\n    this.zeroPremiumDate = this.releasedDate.clone().add(this.totalDays, 'days')\n    this.diff = this.zeroPremiumDate.diff(this.releasedDate)\n    this.rate = this.startingPremiumInUsd / this.diff\n    this.diffInHour = this.zeroPremiumDate.diff(this.releasedDate, 'hour')\n    this.hourlyRate = this.startingPremiumInUsd / this.diffInHour\n  }\n\n  getDaysPast(currentDate) {\n    return parseInt(currentDate.diff(this.releasedDate) / DAY / 1000)\n  }\n\n  getHoursPast(currentDate) {\n    return parseInt(currentDate.diff(this.releasedDate) / HOUR / 1000)\n  }\n\n  getDaysRemaining(currentDate) {\n    return this.totalDays - this.getDaysPast(currentDate)\n  }\n\n  getHoursRemaining(currentDate) {\n    return this.totalDays * 24 - this.getHoursPast(currentDate)\n  }\n\n  getTargetDateByAmount(amount) {\n    if (this.algorithm === 'exponential') {\n      let daysPast\n      if (amount < this.lastValue) {\n        daysPast = this.totalDays\n      } else {\n        daysPast =\n          Math.log((amount + this.lastValue) / this.startingPremiumInUsd) /\n          Math.log(FACTOR)\n      }\n      const r = this.releasedDate.clone().add(daysPast * 24 * 60, 'minutes')\n      return r\n    } else {\n      return this.zeroPremiumDate\n        .clone()\n        .subtract(amount / this.rate / 1000, 'second')\n    }\n  }\n\n  getTargetAmountByDaysPast(daysPast) {\n    if (this.algorithm === 'exponential') {\n      const premium = this.startingPremiumInUsd * FACTOR ** daysPast\n      if (premium >= this.lastValue) {\n        return premium - this.lastValue\n      } else {\n        return 0\n      }\n    } else {\n      return (this.totalDays - daysPast) * (this.hourlyRate * 24)\n    }\n  }\n\n  getAmountByDateRange(startDate, currentDate) {\n    let hoursPast = currentDate.diff(startDate) / HOUR / 1000\n    let daysPast = hoursPast / 24\n    return this.getTargetAmountByDaysPast(daysPast)\n  }\n}\n","import React, { useState, useReducer, useEffect } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport { useQuery } from '@apollo/client'\nimport moment from 'moment'\nimport { gql } from '@apollo/client'\n\nimport {\n  CHECK_COMMITMENT,\n  GET_MINIMUM_COMMITMENT_AGE,\n  GET_MAXIMUM_COMMITMENT_AGE,\n  GET_RENT_PRICE,\n  WAIT_BLOCK_TIMESTAMP,\n  GET_BALANCE,\n  GET_ETH_PRICE,\n  GET_PRICE_CURVE\n} from 'graphql/queries'\nimport { useInterval, useGasPrice, useBlock } from 'components/hooks'\nimport { useAccount } from '../../QueryAccount'\nimport { registerMachine, registerReducer } from './registerReducer'\nimport { calculateDuration, yearInSeconds } from 'utils/dates'\n\nimport Loader from 'components/Loader'\nimport Explainer from './Explainer'\nimport CTA from './CTA'\nimport Progress from './Progress'\nimport NotAvailable from './NotAvailable'\nimport Pricer from '../Pricer'\nimport LineGraph from './LineGraph'\nimport Premium from './Premium'\nimport ProgressRecorder from './ProgressRecorder'\nimport useNetworkInfo from '../../NetworkInformation/useNetworkInfo'\nimport { sendNotification } from './notification'\nimport PremiumPriceOracle from './PremiumPriceOracle'\nconst NameRegisterContainer = styled('div')`\n  padding: 20px 40px;\n`\n\nconst PremiumWarning = styled('div')`\n  background-color: #fef6e9;\n  color: black;\n  padding: 1em;\n  margin-bottom: 1em;\n`\n\nconst NameRegister = ({\n  domain,\n  waitTime,\n  refetch,\n  refetchIsMigrated,\n  readOnly,\n  registrationOpen\n}) => {\n  const { t } = useTranslation()\n  const [secret, setSecret] = useState(false)\n  const { networkId } = useNetworkInfo()\n  const [step, dispatch] = useReducer(\n    registerReducer,\n    registerMachine.initialState\n  )\n  let now, showPremiumWarning, currentPremium, underPremium\n  const incrementStep = () => dispatch('NEXT')\n  const decrementStep = () => dispatch('PREVIOUS')\n  const [years, setYears] = useState(false)\n  const [secondsPassed, setSecondsPassed] = useState(0)\n  const [timerRunning, setTimerRunning] = useState(false)\n  const [commitmentTimerRunning, setCommitmentTimerRunning] = useState(false)\n  const [blockCreatedAt, setBlockCreatedAt] = useState(null)\n  const [waitUntil, setWaitUntil] = useState(null)\n  const [targetDate, setTargetDate] = useState(false)\n  const [targetPremium, setTargetPremium] = useState(false)\n  const [commitmentExpirationDate, setCommitmentExpirationDate] = useState(\n    false\n  )\n  const {\n    data: { getEthPrice: ethUsdPrice } = {},\n    loading: ethUsdPriceLoading\n  } = useQuery(GET_ETH_PRICE)\n  const { data: { getPriceCurve } = {} } = useQuery(GET_PRICE_CURVE)\n  const { loading: gasPriceLoading, price: gasPrice } = useGasPrice()\n  const { block } = useBlock()\n  const [invalid, setInvalid] = useState(false)\n  const { data: { waitBlockTimestamp } = {} } = useQuery(WAIT_BLOCK_TIMESTAMP, {\n    variables: {\n      waitUntil\n    },\n    fetchPolicy: 'no-cache'\n  })\n  const account = useAccount()\n  const { data: { getBalance } = {} } = useQuery(GET_BALANCE, {\n    variables: { address: account },\n    fetchPolicy: 'no-cache'\n  })\n\n  const { data: { getMaximumCommitmentAge } = {} } = useQuery(\n    GET_MAXIMUM_COMMITMENT_AGE,\n    {\n      fetchPolicy: 'no-cache'\n    }\n  )\n  if (block) {\n    now = moment(block.timestamp * 1000)\n  }\n  if (!commitmentExpirationDate && getMaximumCommitmentAge && blockCreatedAt) {\n    setCommitmentExpirationDate(\n      moment(blockCreatedAt).add(getMaximumCommitmentAge, 'second')\n    )\n  }\n  const { data: { checkCommitment = false } = {} } = useQuery(\n    CHECK_COMMITMENT,\n    {\n      variables: {\n        label: domain.label,\n        secret,\n        // Add this varialbe so that it keeps polling only during the timer is on\n        commitmentTimerRunning\n      },\n      fetchPolicy: 'no-cache'\n    }\n  )\n  let i = 0\n\n  ProgressRecorder({\n    checkCommitment,\n    domain,\n    networkId,\n    states: registerMachine.states,\n    dispatch,\n    step,\n    secret,\n    setSecret,\n    years,\n    setYears,\n    timerRunning,\n    setTimerRunning,\n    waitUntil,\n    setWaitUntil,\n    secondsPassed,\n    setSecondsPassed,\n    commitmentExpirationDate,\n    setCommitmentExpirationDate,\n    now\n  })\n  useInterval(\n    () => {\n      if (blockCreatedAt && !waitUntil) {\n        setWaitUntil(blockCreatedAt + waitTime * 1000)\n      }\n      if (secondsPassed < waitTime) {\n        setSecondsPassed(s => s + 1)\n      } else {\n        if (waitBlockTimestamp && timerRunning) {\n          incrementStep()\n          sendNotification(\n            `${domain.name} ${t('register.notifications.ready')}`\n          )\n        }\n        setTimerRunning(false)\n      }\n    },\n    timerRunning ? 1000 : null\n  )\n  useInterval(\n    () => {\n      if (checkCommitment > 0) {\n        incrementStep()\n        setTimerRunning(true)\n        setCommitmentTimerRunning(false)\n      } else {\n        setCommitmentTimerRunning(new Date())\n      }\n    },\n    commitmentTimerRunning ? 1000 : null\n  )\n  const parsedYears = parseFloat(years)\n  const duration = calculateDuration(years)\n  const { data: { getRentPrice } = {}, loading: rentPriceLoading } = useQuery(\n    GET_RENT_PRICE,\n    {\n      variables: {\n        duration,\n        label: domain.label,\n        commitmentTimerRunning\n      }\n    }\n  )\n  const {\n    data: { getRentPrice: getPremiumPrice } = {},\n    loading: getPremiumPriceLoading\n  } = useQuery(GET_RENT_PRICE, {\n    variables: {\n      duration: 0,\n      label: domain.label,\n      commitmentTimerRunning\n    }\n  })\n\n  let hasSufficientBalance\n  if (!blockCreatedAt && checkCommitment > 0) {\n    setBlockCreatedAt(checkCommitment * 1000)\n  }\n  if (getBalance && getRentPrice) {\n    hasSufficientBalance = getBalance.gt(getRentPrice)\n  }\n  if (blockCreatedAt && !waitUntil) {\n    setWaitUntil(blockCreatedAt + waitTime * 1000)\n  }\n\n  const oneMonthInSeconds = 2419200\n  const twentyEightDaysInYears = oneMonthInSeconds / yearInSeconds\n  const isAboveMinDuration = parsedYears > twentyEightDaysInYears\n  const waitPercentComplete = (secondsPassed / waitTime) * 100\n\n  const expiryDate = moment(domain.expiryTime)\n  const oracle = new PremiumPriceOracle(expiryDate, getPriceCurve)\n  const { releasedDate, zeroPremiumDate, startingPremiumInUsd } = oracle\n\n  if (!registrationOpen) return <NotAvailable domain={domain} />\n  if (ethUsdPriceLoading || gasPriceLoading) return <></>\n\n  if (!targetDate) {\n    setTargetDate(zeroPremiumDate)\n    setTargetPremium(\n      oracle.getTargetAmountByDaysPast(oracle.getDaysPast(zeroPremiumDate))\n    )\n  }\n\n  if (block) {\n    showPremiumWarning = now.isBetween(releasedDate, zeroPremiumDate)\n    currentPremium = oracle.getTargetAmountByDaysPast(oracle.getDaysPast(now))\n    underPremium = now.isBetween(releasedDate, zeroPremiumDate)\n  }\n  const handleTooltip = tooltipItem => {\n    let delimitedParsedValue = tooltipItem.yLabel\n    if (targetPremium !== delimitedParsedValue) {\n      setTargetDate(oracle.getTargetDateByAmount(delimitedParsedValue))\n      setTargetPremium(delimitedParsedValue.toFixed(2))\n    }\n  }\n\n  const handlePremium = target => {\n    const { value } = target\n    const parsedValue = value.replace('$', '')\n    if (\n      !isNaN(parsedValue) &&\n      parseInt(parsedValue || 0) <= startingPremiumInUsd\n    ) {\n      if (targetPremium !== parsedValue) {\n        setTargetDate(oracle.getTargetDateByAmount(parsedValue))\n        setTargetPremium(parsedValue)\n      }\n      setInvalid(false)\n    } else {\n      setInvalid(true)\n    }\n  }\n\n  return (\n    <NameRegisterContainer>\n      {step === 'PRICE_DECISION' && (\n        <Pricer\n          name={domain.label}\n          duration={duration}\n          years={years}\n          setYears={setYears}\n          ethUsdPriceLoading={ethUsdPriceLoading}\n          ethUsdPremiumPrice={currentPremium}\n          ethUsdPrice={ethUsdPrice}\n          gasPrice={gasPrice}\n          loading={rentPriceLoading}\n          price={getRentPrice}\n          premiumOnlyPrice={getPremiumPrice}\n          underPremium={underPremium}\n          displayGas={true}\n        />\n      )}\n      {showPremiumWarning ? (\n        <PremiumWarning>\n          <h2>{t('register.premiumWarning.title')}</h2>\n          <p>\n            {getPriceCurve === 'exponential'\n              ? t('register.premiumWarning.exponentialWarningDescripiton')\n              : t('register.premiumWarning.description')}\n          </p>\n          <LineGraph\n            startDate={releasedDate}\n            currentDate={now}\n            targetDate={targetDate}\n            endDate={zeroPremiumDate}\n            targetPremium={targetPremium}\n            ethUsdPrice={ethUsdPrice}\n            handleTooltip={handleTooltip}\n            underPremium={underPremium}\n            oracle={oracle}\n            price={getRentPrice}\n            now={now}\n            premiumOnlyPrice={getPremiumPrice}\n          />\n\n          <Premium\n            handlePremium={handlePremium}\n            targetPremium={targetPremium}\n            name={domain.name}\n            invalid={invalid}\n            targetDate={targetDate}\n          />\n        </PremiumWarning>\n      ) : (\n        ''\n      )}\n      <Explainer\n        step={step}\n        waitTime={waitTime}\n        waitPercentComplete={waitPercentComplete}\n      />\n      <Progress step={step} waitPercentComplete={waitPercentComplete} />\n      <CTA\n        hasSufficientBalance={hasSufficientBalance}\n        waitTime={waitTime}\n        incrementStep={incrementStep}\n        decrementStep={decrementStep}\n        secret={secret}\n        step={step}\n        label={domain.label}\n        duration={duration}\n        secondsPassed={secondsPassed}\n        timerRunning={timerRunning}\n        setTimerRunning={setTimerRunning}\n        setCommitmentTimerRunning={setCommitmentTimerRunning}\n        commitmentTimerRunning={commitmentTimerRunning}\n        setBlockCreatedAt={setBlockCreatedAt}\n        refetch={refetch}\n        refetchIsMigrated={refetchIsMigrated}\n        isAboveMinDuration={isAboveMinDuration}\n        readOnly={readOnly}\n        price={getRentPrice}\n        years={years}\n        premium={currentPremium}\n        ethUsdPrice={!ethUsdPriceLoading && ethUsdPrice}\n      />\n    </NameRegisterContainer>\n  )\n}\n\nconst NameRegisterDataWrapper = props => {\n  const { data, loading, error } = useQuery(GET_MINIMUM_COMMITMENT_AGE)\n\n  if (loading) return <Loader withWrap={true} large />\n  if (error) {\n    console.log(error)\n  }\n  const { getMinimumCommitmentAge } = data\n  return <NameRegister waitTime={getMinimumCommitmentAge} {...props} />\n}\n\nexport default NameRegisterDataWrapper\n","import NameRegister from './NameRegister'\n\nexport default NameRegister\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport { useMutation } from '@apollo/client'\n\nimport { isLabelValid } from '../../utils/utils'\nimport { CREATE_SUBDOMAIN } from '../../graphql/mutations'\nimport mq from 'mediaQuery'\nimport { useEditable } from '../hooks'\n\nimport Button from '../Forms/Button'\nimport DefaultInput from '../Forms/Input'\nimport SaveCancel from './SaveCancel'\nimport PendingTx from '../PendingTx'\n\nconst AddSubdomainContainer = styled('section')`\n  margin-top: 30px;\n`\n\nconst AddSubdomainContent = styled('div')`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  ${mq.small`\n    margin-bottom: 0;\n    flex-direction: row;\n  `}\n`\n\nconst Input = styled(DefaultInput)`\n  width: 100%;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  ${mq.small`\n    margin-bottom: 0;\n  `}\n`\n\nfunction AddSubdomain({ domain, refetch }) {\n  const { state, actions } = useEditable()\n  const { t } = useTranslation()\n  const { editing, newValue, txHash, pending, confirmed } = state\n\n  const {\n    startEditing,\n    stopEditing,\n    updateValue,\n    startPending,\n    setConfirmed\n  } = actions\n\n  const isValid = newValue.length > 0 && isLabelValid(newValue)\n  const isInvalid = !isValid && newValue.length > 0\n  const [mutation] = useMutation(CREATE_SUBDOMAIN, {\n    onCompleted: data => {\n      if (data) {\n        startPending(Object.values(data)[0])\n        updateValue('')\n      }\n    }\n  })\n\n  return (\n    <AddSubdomainContainer>\n      <>\n        {!editing ? (\n          pending && !confirmed ? (\n            <PendingTx\n              txHash={txHash}\n              onConfirmed={() => {\n                setConfirmed()\n                refetch()\n              }}\n            />\n          ) : (\n            <Button onClick={startEditing} data-testid=\"addsubdomain\">\n              + {t('singleName.subdomains.add')}\n            </Button>\n          )\n        ) : null}\n        {editing && (\n          <AddSubdomainContent>\n            <Input\n              value={newValue}\n              onChange={e => updateValue(e.target.value)}\n              valid={isValid}\n              invalid={isInvalid}\n              placeholder=\"Type in a label for your subdomain\"\n              large\n            />\n            {isValid ? (\n              <SaveCancel\n                stopEditing={stopEditing}\n                isValid={isValid}\n                mutation={() => {\n                  mutation({\n                    variables: {\n                      name: `${newValue}.${domain.name}`\n                    }\n                  }).then(() => {\n                    refetch()\n                  })\n                }}\n              />\n            ) : (\n              <SaveCancel stopEditing={stopEditing} disabled />\n            )}\n          </AddSubdomainContent>\n        )}\n      </>\n    </AddSubdomainContainer>\n  )\n}\n\nexport default AddSubdomain\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport { Query } from '@apollo/client/react/components'\nimport {\n  GET_SUBDOMAINS_FROM_SUBGRAPH,\n  GET_SUBDOMAINS\n} from '../../graphql/queries'\nimport Loader from '../Loader'\nimport { H2 } from '../Typography/Basic'\nimport AddSubdomain from './AddSubdomain'\nimport ChildDomainItem from '../DomainItem/ChildDomainItem'\nimport { getNamehash } from '@evmosdomains/ui'\nimport { decryptName } from '../../api/labels'\n\nconst SubDomainsContainer = styled('div')`\n  padding-bottom: 30px;\n  padding-left: 40px;\n  padding-right: 40px;\n`\n\nconst SubDomainH2 = styled(H2)`\n  padding: 20px 0 50px;\n  text-align: center;\n  color: #ccd4da;\n`\n\nfunction SubDomainsFromWeb3({ domain, canAddSubdomain }) {\n  return (\n    <Query query={GET_SUBDOMAINS} variables={{ name: domain.name }}>\n      {({ loading, error, data, refetch }) => {\n        const subdomains =\n          data &&\n          data.getSubDomains &&\n          data.getSubDomains.subDomains &&\n          data.getSubDomains.subDomains.filter(subdomain => {\n            return parseInt(subdomain.owner, 16) !== 0\n          })\n        const hasNoSubdomains = subdomains && subdomains.length === 0\n        if (error) {\n          console.log('error getting subdomains', error)\n        }\n        if (loading)\n          return (\n            <>\n              <AddSubdomainContainer\n                domain={domain}\n                refetch={refetch}\n                canAddSubdomain={canAddSubdomain}\n              />\n              <Loader withWrap large />\n            </>\n          )\n        if (hasNoSubdomains) {\n          return (\n            <>\n              <AddSubdomainContainer\n                domain={domain}\n                refetch={refetch}\n                canAddSubdomain={canAddSubdomain}\n              />\n              <SubDomainH2>No subdomains have been added.</SubDomainH2>\n            </>\n          )\n        }\n        return (\n          <>\n            <AddSubdomainContainer\n              domain={domain}\n              refetch={refetch}\n              canAddSubdomain={canAddSubdomain}\n            />\n            {subdomains &&\n              subdomains.map(d => (\n                <ChildDomainItem\n                  name={d.name}\n                  owner={d.owner}\n                  labelhash={d.labelHash}\n                  canDeleteSubdomain={canAddSubdomain}\n                  refetch={refetch}\n                />\n              ))}\n          </>\n        )\n      }}\n    </Query>\n  )\n}\n\nfunction AddSubdomainContainer({ domain, refetch, canAddSubdomain }) {\n  return canAddSubdomain ? (\n    <AddSubdomain domain={domain} refetch={refetch} />\n  ) : null\n}\n\nfunction SubDomains({\n  domain,\n  isOwner,\n  loadingIsParentMigrated,\n  isParentMigratedToNewRegistry,\n  isMigratedToNewRegistry,\n  loadingIsMigrated,\n  ...rest\n}) {\n  const { t } = useTranslation()\n  const canAddSubdomain =\n    isOwner &&\n    !loadingIsParentMigrated &&\n    !loadingIsMigrated &&\n    isParentMigratedToNewRegistry &&\n    isMigratedToNewRegistry\n\n  return (\n    <SubDomainsContainer {...rest}>\n      {parseInt(domain.owner, 16) !== 0 ? (\n        <Query\n          query={GET_SUBDOMAINS_FROM_SUBGRAPH}\n          variables={{\n            id: getNamehash(domain.name)\n          }}\n        >\n          {({ loading, error, data, refetch }) => {\n            const subdomains =\n              data &&\n              data.domain &&\n              data.domain.subdomains &&\n              data.domain.subdomains.filter(subdomain => {\n                return parseInt(subdomain.owner.id, 16) !== 0\n              })\n\n            if (error || !data || !data.domain) {\n              console.error(\n                'Unable to get subdomains from subgraph, falling back to web3 ',\n                error\n              )\n\n              return (\n                <SubDomainsFromWeb3\n                  domain={domain}\n                  isOwner={isOwner}\n                  canAddSubdomain={canAddSubdomain}\n                />\n              )\n            }\n            if (loading)\n              return (\n                <>\n                  <Loader withWrap large />\n                </>\n              )\n            if (subdomains && subdomains.length === 0) {\n              return (\n                <>\n                  <AddSubdomainContainer\n                    domain={domain}\n                    refetch={refetch}\n                    canAddSubdomain={canAddSubdomain}\n                  />\n                  <SubDomainH2>\n                    {t('singleName.subdomains.nosubdomains')}\n                  </SubDomainH2>\n                </>\n              )\n            }\n\n            if (data.domain === null) {\n              return (\n                <SubDomainsFromWeb3\n                  domain={domain}\n                  isOwner={isOwner}\n                  canAddSubdomain={canAddSubdomain}\n                />\n              )\n            }\n            return (\n              <>\n                <AddSubdomainContainer\n                  domain={domain}\n                  refetch={refetch}\n                  canAddSubdomain={canAddSubdomain}\n                />\n                {subdomains.map(d => {\n                  let name, parentLabel\n                  if (domain.name === '[root]') {\n                    parentLabel = ''\n                  } else {\n                    parentLabel = `.${domain.name}`\n                  }\n                  if (d.labelName !== null) {\n                    name = `${d.labelName}${parentLabel}`\n                  } else {\n                    name = `${decryptName(d.labelhash)}${parentLabel}`\n                  }\n                  return (\n                    <ChildDomainItem\n                      showBlockies={true}\n                      name={name}\n                      isMigrated={d.isMigrated}\n                      owner={d.owner.id}\n                      labelhash={d.labelHash}\n                      isSubdomain={true}\n                      canDeleteSubdomain={canAddSubdomain}\n                      refetch={refetch}\n                    />\n                  )\n                })}\n              </>\n            )\n          }}\n        </Query>\n      ) : (\n        <SubDomainH2>{t('singleName.subdomains.nosubdomains')}</SubDomainH2>\n      )}\n    </SubDomainsContainer>\n  )\n}\n\nexport default SubDomains\n","export default [\n  // 0\n  {\n    state: 'ENABLE_DNSSEC',\n    title: 'Problem fetching data from DNS',\n    displayError: true\n  },\n  // 1\n  {\n    state: 'ENABLE_DNSSEC',\n    title: 'DNS entry does not exist.',\n    displayError: true\n  },\n  // 2\n  {\n    state: 'ENABLE_DNSSEC',\n    title: 'Please enable DNSSEC'\n  },\n  // 3\n  {\n    state: 'ADD_TEXT',\n    title: 'Please add text record into _ens.name.tld'\n  },\n  // 4,\n  {\n    state: 'ADD_TEXT',\n    title: 'DNS Record is invalid',\n    displayError: true\n  },\n  // 5,\n  {\n    state: 'SUBMIT_PROOF',\n    title: 'Ready to register',\n    explainer:\n      \"*Click 'refresh' if you make changes to the domain in the DNS Registrar.\"\n  },\n  // 6,\n  {\n    state: 'SUBMIT_PROOF',\n    title: 'DNS is out of sync',\n    explainer:\n      \"The Controller and DNS Owner are out of sync. Click 'sync' to make the DNS Owner the Controller. Click 'refresh' if you make changes to the domain in the DNS Registrar.\",\n    outOfSync: true\n  },\n  // 7,\n  {\n    state: 'SUBMIT_PROOF',\n    title: 'Registry is out of date',\n    explainer:\n      \"Click 'sync' to make the DNS Owner the Controller. Click 'refresh' if you make changes to the domain in the DNS Registrar.\",\n    outOfSync: true\n  },\n  // 8,\n  {\n    state: 'ADD_TEXT',\n    title: 'DNS Record does not exist',\n    displayError: true\n  }\n]\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBookPen(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"25px\",\n    height: \"20px\",\n    viewBox: \"0 0 25 20\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Symbols\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Registrar-Icon\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Rectangle-2\",\n    fill: \"#4B84FF\",\n    x: 0,\n    y: 0,\n    width: 16,\n    height: 20,\n    rx: 3\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20,15.8125 C20,15.928875 20.0525,16.04 20.1465,16.1218125 L22.1465,17.8718125 C22.244,17.957125 22.372,18 22.5,18 C22.628,18 22.756,17.957125 22.8535,17.8718125 L24.8535,16.1218125 C24.9475,16.04 25,15.928875 25,15.8125 L25,4 L20,4 L20,15.8125 Z\",\n    id: \"Fill-4\",\n    fill: \"#4B84FF\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22,0 L23,0 C24.1045695,-2.02906125e-16 25,0.8954305 25,2 L25,3 L20,3 L20,2 C20,0.8954305 20.8954305,2.02906125e-16 22,0 Z\",\n    id: \"Rectangle-6\",\n    fill: \"#4B84FF\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Rectangle-3\",\n    fill: \"#FFFFFF\",\n    transform: \"translate(6.000000, 5.000000) scale(1, -1) translate(-6.000000, -5.000000) \",\n    x: 2,\n    y: 4,\n    width: 8,\n    height: 2,\n    rx: 1\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Rectangle-3-Copy\",\n    fill: \"#FFFFFF\",\n    transform: \"translate(6.000000, 9.000000) scale(1, -1) translate(-6.000000, -9.000000) \",\n    x: 2,\n    y: 8,\n    width: 8,\n    height: 2,\n    rx: 1\n  }))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBookPen);\nexport default __webpack_public_path__ + \"static/media/BookPen.c8ba8b409c85c2feae362c335ec92650.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport mq from '../../mediaQuery'\nimport { ReactComponent as BookPen } from '../Icons/BookPen.svg'\nimport DefaultRotatingSmallCaret from '../Icons/RotatingSmallCaret'\n\nconst SetupNameContainer = styled('div')`\n  background: #f0f6fa;\n  padding: 20px 40px;\n  margin-bottom: 40px;\n`\n\nconst Header = styled('header')`\n  display: flex;\n  position: relative;\n  align-items: center;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst RotatingSmallCaret = styled(DefaultRotatingSmallCaret)`\n  position: absolute;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%)\n    ${p => (p.rotated ? 'rotate(0)' : 'rotate(-90deg)')};\n`\n\nconst H2 = styled('h2')`\n  margin: 0;\n  margin-left: 10px;\n  font-size: 20px;\n  font-weight: 300;\n`\n\nconst Content = styled('div')`\n  display: ${p => (p.open ? 'flex' : 'none')};\n  flex-direction: column;\n  ${mq.large`\n    flex-direction: row;\n  `}\n`\n\nconst Block = styled('section')`\n  margin-right: 40px;\n  &:last-child {\n    margin-right: 0;\n  }\n  h3 {\n    font-size: 18px;\n    font-weight: 300;\n  }\n\n  p {\n    font-size: 14px;\n    font-weight: 300;\n  }\n`\n\nfunction SetupName({ initialState = false }) {\n  const { t } = useTranslation()\n  const [open, setOpen] = useState(initialState)\n  const [initial, setInitial] = useState(initialState)\n  // Change the open state when resolver is set/unset\n  if (initial !== initialState) {\n    setInitial(initialState)\n    setOpen(initialState)\n  }\n\n  const toggleOpen = () => setOpen(!open)\n  return null\n  return (\n    <SetupNameContainer>\n      <Header onClick={toggleOpen}>\n        <BookPen />\n        <H2>{t('singleName.learnmore.title')}</H2>\n        <RotatingSmallCaret rotated={open ? 1 : 0} />\n      </Header>\n      <Content open={open}>\n        <Block>\n          <h3>{t('singleName.learnmore.step1.title')}</h3>\n          <p>{t('singleName.learnmore.step1.text')}</p>\n        </Block>\n        <Block>\n          <h3>{t('singleName.learnmore.step2.title')}</h3>\n          <p>{t('singleName.learnmore.step2.text')}</p>\n        </Block>\n        <Block>\n          <h3>{t('singleName.learnmore.step3.title')}</h3>\n          <p>{t('singleName.learnmore.step3.text')}</p>\n        </Block>\n      </Content>{' '}\n    </SetupNameContainer>\n  )\n}\n\nexport default SetupName\n","import React from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { useTranslation, Trans } from 'react-i18next'\n\nimport { MIGRATE_REGISTRY } from 'graphql/mutations'\nimport { IS_CONTRACT_CONTROLLER } from 'graphql/queries'\nimport styled from '@emotion/styled/macro'\nimport PendingTx from '../PendingTx'\nimport { ExternalButtonLink } from '../Forms/Button'\n\nimport { useEditable } from '../hooks'\n\nconst WarningBox = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 18px;\n  // font-weight: 100;\n  color: #2b2b2b;\n  padding: 20px 35px;\n  background: hsla(37, 91%, 55%, 0.1);\n  margin-bottom: 20px;\n`\n\nconst WarningContent = styled('div')`\n  width: calc(100% - 120px);\n  padding-right: 20px;\n`\n\nconst SubWarning = styled('p')`\n  font-size: 14px;\n  color: #2b2b2b;\n  font-weight: 500;\n`\n\nconst Migrate = styled(ExternalButtonLink)`\n  flex: 2 1 auto;\n`\n\nexport default function RegistryMigration({\n  domain,\n  account,\n  dnssecmode,\n  refetchIsMigrated,\n  isParentMigratedToNewRegistry,\n  loadingIsParentMigrated\n}) {\n  const { t } = useTranslation()\n  const { state, actions } = useEditable()\n  const { txHash, pending, confirmed } = state\n  const { startPending, setConfirmed } = actions\n  const {\n    data: { isContractController } = {},\n    loading: loadingIsContractController\n  } = useQuery(IS_CONTRACT_CONTROLLER, {\n    variables: { address: domain.owner }\n  })\n  const [migrateRegistry] = useMutation(MIGRATE_REGISTRY, {\n    variables: { name: domain.name, address: domain.owner },\n    onCompleted: data => {\n      startPending(Object.values(data)[0])\n    }\n  })\n\n  const loading = loadingIsParentMigrated\n  let canMigrate\n  // isContractController query takes a while which causes CI to fail.\n  // Make it migratable while isContractController is undefined\n  // and make it un migratable only if it ended up being smart contract.\n  if (isContractController) {\n    canMigrate = false\n  } else {\n    canMigrate =\n      !loading &&\n      isParentMigratedToNewRegistry &&\n      account === domain.parentOwner\n  }\n  const isContractControllerMessage = t('registrymigration.messages.controller')\n  const defaultMessage = (\n    <Trans\n      i18nKey=\"registrymigration.messages.default\"\n      values={{ parent: domain.parent }}\n    />\n  )\n  const migrateParentFirstMessage = (\n    <Trans\n      i18nKey=\"registrymigration.messages.parentmigrate\"\n      values={{ parent: domain.parent }}\n    />\n  )\n  const dnssecMigrateMessage = t('registrymigration.messages.dnssec')\n\n  return (\n    <WarningBox>\n      <WarningContent>\n        {isContractController\n          ? isContractControllerMessage\n          : !isParentMigratedToNewRegistry\n          ? migrateParentFirstMessage\n          : dnssecmode\n          ? dnssecMigrateMessage\n          : defaultMessage}\n        {domain.parent !== 'evmos' && !dnssecmode && (\n          <SubWarning>{t('registrymigration.donotaccept')}</SubWarning>\n        )}\n      </WarningContent>\n      {pending && !confirmed && txHash ? (\n        <PendingTx\n          txHash={txHash}\n          onConfirmed={() => {\n            setConfirmed()\n            refetchIsMigrated()\n          }}\n        />\n      ) : (\n        <Migrate\n          data-testid={`registry-migrate-button-${\n            canMigrate ? 'enabled' : 'disabled'\n          }`}\n          onClick={canMigrate ? migrateRegistry : () => {}}\n          type={canMigrate ? 'hollow-primary' : 'hollow-primary-disabled'}\n          href=\"#\"\n        >\n          {t('c.migrate')}\n        </Migrate>\n      )}\n    </WarningBox>\n  )\n}\n","import styled from '@emotion/styled/macro'\nimport mq from 'mediaQuery'\n\nexport const DetailsItem = styled('div')`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  margin-bottom: 20px;\n\n  ${mq.small`\n    align-items: center;\n    margin-bottom: 20px;\n  `}\n\n  ${p =>\n    p.uneditable\n      ? mq.small`\n    flex-direction: row;\n  `\n      : mq.small`flex-direction: row;`}\n`\n\nexport const DetailsKey = styled('div')`\n  color: ${({ greyed }) => (greyed ? '#CCD4DA' : '2b2b2b')};\n  font-size: 14px;\n  letter-spacing: 0px;\n  font-weight: 600;\n  text-transform: uppercase;\n  flex-shrink: 0;\n  display: flex;\n  margin-bottom: 20px;\n\n  ${mq.small`\n    align-items: center;\n    margin-bottom: 0;\n    font-size: 16px;\n    max-width: 220px;\n    min-width: 180px;\n  `}\n`\n\nexport const DetailsValue = styled('div')`\n  font-size: 14px;\n  font-weight: 100;\n  font-family: Overpass Mono;\n  white-space: nowrap;\n  overflow: hidden;\n  display: inline-flex;\n  text-overflow: ellipsis;\n  ${mq.small`\n    font-size: 18px;\n    align-items: center;\n  `}\n  ${p =>\n    p.editing &&\n    p.editable &&\n    mq.small`\n      padding-right: 5px;\n    `}\n\n  a {\n    display: flex;\n    overflow: hidden;\n  }\n`\n/* Container element for key/value */\nexport const DetailsContent = styled('div')`\n  display: flex;\n  justify-content: flex-start;\n  position: relative;\n  flex-direction: column;\n  width: 100%;\n  ${({ editing }) => editing && 'margin-bottom: 30px'};\n  transition: 0.3s;\n  ${mq.small`\n    flex-direction: row;\n    align-items: center;\n  `}\n`\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { Link } from 'react-router-dom'\n\nconst AddressLinkContainer = styled(Link)`\n  display: inline-block;\n  align-items: center;\n  text-overflow: ellipsis;\n  font-family: Overpass Mono;\n`\n\nconst AddressLink = ({ children, address, className, ariaLabel }) => (\n  <AddressLinkContainer\n    to={`/address/${address}`}\n    className={className}\n    aria-label={ariaLabel}\n  >\n    {children}\n  </AddressLinkContainer>\n)\n\nexport default AddressLink\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPencil(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#ADBBCD\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.165 11.51l.009.01-1.088 3.814c-.334 1.17.334 1.867 1.533 1.532l3.795-1.107.007.007 8.316-8.315-4.256-4.257-8.316 8.316zM16.457 2.376L14.562.48c-.64-.641-1.7-.641-2.369 0l-1.588 1.588 4.264 4.264 1.588-1.588c.669-.67.669-1.728 0-2.37\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPencil);\nexport default __webpack_public_path__ + \"static/media/Pencil.75c8d2cf2f6aab3fde857ba69a1e2b63.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled/macro'\nimport { ReactComponent as Pencil } from '../Icons/Pencil.svg'\n\nconst StyledPencil = styled(Pencil)`\n  ${p =>\n    p.disabled &&\n    `\n     g {\n       fill: #ADBBCD;\n     }\n  `}\n  &:hover {\n    g {\n      transition: 0.2s;\n      fill: #5384fe;\n    }\n    cursor: pointer;\n  }\n\n  ${p =>\n    p.disabled &&\n    `\n    &:hover {\n      cursor: default;\n      g {\n        fill: #ADBBCD;\n      }\n    }\n  `}\n`\n\nexport default StyledPencil\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst HOVER_TIMEOUT = 1000\n\nconst CopyContainer = styled('span')`\n  margin: 0 5px;\n  position: relative;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst Copied = styled('span')`\n  font-size: 16px;\n`\n\nexport default function Copy({ value, iconColour }) {\n  const [copied, setCopied] = useState(false)\n  return (\n    <CopyContainer>\n      {copied ? (\n        <Copied>Copied</Copied>\n      ) : (\n        <CopyToClipboard\n          text={value}\n          onCopy={() => {\n            setCopied(true)\n            setTimeout(() => setCopied(false), HOVER_TIMEOUT)\n          }}\n        >\n          <svg width=\"13\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g fill={iconColour ? iconColour : '#5384FE'} fillRule=\"nonzero\">\n              <path d=\"M11.937 16H.968C.444 16 0 15.56 0 15.004V.882C0 .392.381 0 .857 0h6.778c.38 0 .682.31.682.702a.687.687 0 01-.682.702h-6.27V14.63h10.27V5.176c0-.392.302-.703.682-.703.381 0 .683.31.683.703v9.746c-.016.588-.492 1.078-1.063 1.078z\" />\n              <path d=\"M7.926 6a.864.864 0 01-.64-.259C7.101 5.551 7 5.275 7 4.947V.907h.724H7c0-.155 0-.638.454-.845.169-.07.505-.156.875.207l4.376 4.212c.27.259.37.621.236.95-.118.327-.438.534-.825.534L7.926 6zm.504-3.625v2.14l2.222-.017L8.43 2.375z\" />\n            </g>\n          </svg>\n        </CopyToClipboard>\n      )}\n    </CopyContainer>\n  )\n}\n","import CopyToClipboard from './CopyToClipboard'\nexport default CopyToClipboard\n","import React, { useState, useEffect } from 'react'\nimport { css } from 'emotion'\nimport moment from 'moment'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport EthVal from 'ethval'\n\nimport {\n  GET_PUBLIC_RESOLVER,\n  GET_RENT_PRICE,\n  IS_CONTRACT_CONTROLLER,\n  GET_ETH_PRICE\n} from '../../graphql/queries'\nimport { SET_RESOLVER, SET_SUBNODE_OWNER, SET_OWNER } from 'graphql/mutations'\n\nimport mq from 'mediaQuery'\nimport { useEditable } from '../hooks'\nimport { calculateDuration, formatDate } from 'utils/dates'\nimport { trackReferral } from 'utils/analytics'\nimport { addressUtils, emptyAddress } from 'utils/utils'\nimport { refetchTilUpdatedSingle } from 'utils/graphql'\nimport Bin from '../Forms/Bin'\nimport { useAccount } from '../QueryAccount'\nimport { getEnsAddress } from '../../apollo/mutations/ens'\n\nimport AddToCalendar from '../Calendar/RenewalCalendar'\nimport Tooltip from '../Tooltip/Tooltip'\nimport { SingleNameBlockies } from '../Blockies'\nimport DefaultAddressLink from '../Links/AddressLink'\nimport {\n  DetailsItem,\n  DetailsKey,\n  DetailsValue as DefaultDetailsValue,\n  DetailsContent\n} from './DetailsItem'\nimport DefaultSaveCancel from './SaveCancel'\nimport DefaultInput from '../Forms/Input'\nimport Button from '../Forms/Button'\nimport Pencil from '../Forms/Pencil'\nimport DefaultInfo from '../Icons/Info'\nimport DefaultPendingTx from '../PendingTx'\nimport DefaultPricer from './Pricer'\nimport DefaultAddressInput from '@evmosdomains/react-ens-address'\nimport CopyToClipboard from '../CopyToClipboard/'\nimport { isOwnerOfParentDomain } from '../../utils/utils'\n\nconst AddressInput = styled(DefaultAddressInput)`\n  margin-bottom: 10px;\n`\n\nconst AddressLink = styled(DefaultAddressLink)`\n  display: flex;\n  align-items: center;\n`\n\nconst Address = styled('span')`\n  display: block;\n  align-items: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst Info = styled(DefaultInfo)`\n  flex-shrink: 0;\n`\n\nconst EditButton = styled(Button)`\n  width: 130px;\n`\n\nconst WarningMessage = styled('span')`\n  color: #f6412d;\n  margin-right: auto;\n  margin-bottom: 1em;\n  ${mq.small`\n    margin-bottom: 0em;\n  `}\n`\n\nconst DetailsEditableContainer = styled(DetailsItem)`\n  flex-direction: column;\n  min-height: 30px;\n\n  background: ${({ editing, backgroundStyle }) => {\n    switch (backgroundStyle) {\n      case 'warning':\n        return editing ? 'transparent' : 'transparent'\n      default:\n        return editing ? '#F0F6FA' : 'transparent'\n    }\n  }};\n  padding: ${({ editing }) => (editing ? '20px' : '0')};\n  ${({ editing }) => (editing ? 'margin-bottom: 20px;' : '')}\n  transition: 0.3s;\n\n  ${({ editing }) => editing && mq.small` flex-direction: column;`};\n`\n\nconst DetailsValue = styled(DefaultDetailsValue)`\n  ${p =>\n    p.expiryDate &&\n    `\n      overflow: inherit;\n      display: flex;\n       align-items: flex-start;\n      flex-direction: column;\n  `}\n\n  ${p =>\n    p.expiryDate &&\n    mq.medium`\n      margin-top: -16px;\n      align-items: center;\n      flex-direction: row;\n  `}\n`\n\nconst ExpiryDate = styled('span')`\n  margin-right: 10px;\n`\n\nconst EditRecord = styled(motion.div)`\n  width: 100%;\n`\n\nconst Input = styled(DefaultInput)`\n  margin-bottom: 20px;\n`\n\nconst Action = styled(motion.div)`\n  margin-left: 0;\n  margin-top: 20px;\n  ${mq.small`\n     margin-left: auto;\n  align-self: center;\n  margin-top: -10px;\n  `}\n`\n\nconst PendingTx = styled(DefaultPendingTx)`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translate(0, -65%);\n`\n\nconst DefaultResolverButton = styled('a')`\n  display: flex;\n  padding-right: 20px;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst Pricer = styled(DefaultPricer)``\n\nconst Buttons = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nconst ResolverAddressWarning = styled('span')`\n  color: #f6412d;\n  margin-left: 3em;\n  margin-right: auto;\n`\n\nconst SaveCancel = motion.custom(DefaultSaveCancel)\n\nfunction getMessages({ keyName, parent, deedOwner, isDeedOwner, t }) {\n  let [newValue, newType] = getDefaultMessage(keyName, t)\n  if (\n    keyName === 'Owner' &&\n    parent === 'eth' &&\n    parseInt(deedOwner, 16) !== 0\n  ) {\n    newValue = t('singleName.messages.noresolver')\n    if (isDeedOwner) {\n      newValue += t('singleName.messages.notfinalise')\n    }\n  }\n\n  return [newValue, newType]\n}\n\nfunction getDefaultMessage(keyName, t) {\n  switch (keyName) {\n    case 'Resolver':\n      return [t('singleName.messages.noresolver'), 'message']\n    case 'Controller':\n    case 'registrant':\n      return [t('singleName.messages.noowner'), 'message']\n    default:\n      return ['No 0x message set', 'message']\n  }\n}\n\nfunction getToolTipMessage({ keyName, t, isExpiredRegistrant }) {\n  switch (keyName) {\n    case 'Resolver':\n      return t(`singleName.tooltips.detailsItem.${keyName}`)\n    case 'Controller':\n      return t(`singleName.tooltips.detailsItem.${keyName}`)\n    case 'registrant':\n      if (isExpiredRegistrant) {\n        return t(`singleName.tooltips.detailsItem.${keyName}Expired`)\n      }\n      return t(`singleName.tooltips.detailsItem.${keyName}`)\n    default:\n      return 'You can only make changes if you are the controller and are logged into your wallet'\n  }\n}\n\nfunction chooseMutation(recordType, isOwnerOfParent) {\n  switch (recordType) {\n    case 'Controller':\n      if (isOwnerOfParent) {\n        return SET_SUBNODE_OWNER\n      } else {\n        return SET_OWNER\n      }\n    case 'Resolver':\n      return SET_RESOLVER\n    default:\n      return SET_SUBNODE_OWNER\n  }\n}\n\nfunction getInputType(\n  keyName,\n  type,\n  {\n    newValue,\n    presetValue,\n    updateValue,\n    isValid,\n    isInvalid,\n    name,\n    ethUsdPriceLoading,\n    ethUsdPrice,\n    years,\n    setYears,\n    duration,\n    expirationDate,\n    rentPriceLoading,\n    rentPrice,\n    placeholder\n  }\n) {\n  if (keyName === 'Expiration Date') {\n    return (\n      <Pricer\n        name={name.split('.')[0]}\n        duration={duration}\n        years={years}\n        setYears={years => {\n          setYears(years)\n          updateValue(formatDate(expirationDate))\n        }}\n        ethUsdPriceLoading={ethUsdPriceLoading}\n        ethUsdPrice={ethUsdPrice}\n        expirationDate={expirationDate}\n        loading={rentPriceLoading}\n        price={rentPrice}\n      />\n    )\n  }\n  const ensAddress = getEnsAddress()\n  const provider =\n    process.env.REACT_APP_STAGE === 'local'\n      ? 'http://localhost:8545'\n      : window.ethereum || window.web3\n  if (type === 'address' && keyName !== 'Resolver') {\n    let option = {\n      presetValue: presetValue || '',\n      provider,\n      onResolve: ({ address }) => {\n        if (address) {\n          updateValue(address)\n        } else {\n          updateValue('')\n        }\n      },\n      ensAddress\n    }\n    return <AddressInput {...option} />\n  }\n\n  return (\n    <Input\n      value={newValue}\n      onChange={e => updateValue(e.target.value.trim())}\n      valid={isValid}\n      invalid={isInvalid}\n      placeholder={keyName === 'Resolver' ? placeholder : ''}\n      large\n    />\n  )\n}\n\nfunction getValidation(keyName, newValue, isContractAddress) {\n  switch (keyName) {\n    case 'Expiration Date':\n      return true\n    case 'Resolver':\n      return !!isContractAddress\n    default:\n      return addressUtils.isAddress(newValue) && newValue !== emptyAddress\n  }\n}\n\nfunction getVariables(keyName, { domain, variableName, newValue, duration }) {\n  if (keyName === 'Expiration Date') {\n    return {\n      label: domain.name.split('.')[0],\n      duration\n    }\n  } else {\n    return {\n      name: domain.name,\n      [variableName ? variableName : 'address']: newValue\n    }\n  }\n}\n\nconst Editable = ({\n  isExpired,\n  showLabel = true,\n  editButtonType = 'primary',\n  backgroundStyle = 'blue',\n  keyName,\n  value,\n  type,\n  mutation: mutationQuery,\n  mutationButton,\n  editButton,\n  domain,\n  variableName,\n  refetch,\n  confirm,\n  copyToClipboard\n}) => {\n  const { t } = useTranslation()\n  const { state, actions } = useEditable()\n  const [presetValue, setPresetValue] = useState('')\n\n  const { editing, newValue, txHash, pending, confirmed } = state\n\n  const {\n    startEditing,\n    stopEditing,\n    updateValue,\n    startPending,\n    setConfirmed\n  } = actions\n\n  //only used with Expiration date\n  let duration\n  let expirationDate\n  const [years, setYears] = useState(1)\n\n  if (keyName === 'Expiration Date') {\n    duration = calculateDuration(years)\n    expirationDate = new Date(new Date(value).getTime() + duration * 1000)\n  }\n  const { data: ethUsdPriceData = {}, loading: ethUsdPriceLoading } = useQuery(\n    GET_ETH_PRICE,\n    {\n      skip: keyName !== 'Expiration Date'\n    }\n  )\n  let ethUsdPrice = ethUsdPriceData?.getEthPrice\n\n  const { data: { getRentPrice } = {}, loading: rentPriceLoading } = useQuery(\n    GET_RENT_PRICE,\n    {\n      variables: {\n        duration,\n        label: domain.label\n      },\n      skip: keyName !== 'Expiration Date'\n    }\n  )\n  const isNewResolverAddress =\n    keyName === 'Resolver' &&\n    addressUtils.isAddress(newValue) &&\n    newValue !== emptyAddress\n  const { data: { isContractController: isContractAddress } = {} } = useQuery(\n    IS_CONTRACT_CONTROLLER,\n    {\n      variables: {\n        address: newValue\n      },\n      skip: !isNewResolverAddress\n    }\n  )\n  const isValid = getValidation(keyName, newValue, isContractAddress)\n\n  const isInvalid = !isValid && newValue.length > 0\n  const account = useAccount()\n  const isOwnerOfParent = isOwnerOfParentDomain(domain, account)\n  const isRegistrant = !domain.available && domain.registrant === account\n  const canDelete = ['Resolver'].includes(keyName)\n  const placeholder = t('singleName.resolver.placeholder')\n  const [mutation] = useMutation(mutationQuery, {\n    onCompleted: data => {\n      const txHash = Object.values(data)[0]\n      startPending(txHash)\n      if (keyName === 'Expiration Date') {\n        trackReferral({\n          labels: [domain.label], // labels array\n          transactionId: txHash, //hash\n          type: 'renew', // renew/register\n          price: new EthVal(`${getRentPrice._hex}`)\n            .toEth()\n            .mul(ethUsdPrice)\n            .toFixed(2), // in wei, // in wei\n          years\n        })\n      }\n    }\n  })\n\n  const [ownerMutation] = useMutation(\n    chooseMutation(keyName, isOwnerOfParent),\n    {\n      variables: {\n        name: domain.name,\n        address: emptyAddress\n      },\n      onCompleted: data => {\n        startPending(Object.values(data)[0])\n      }\n    }\n  )\n\n  const { data, loading } = useQuery(GET_PUBLIC_RESOLVER, {\n    fetchPolicy: 'network-only'\n  })\n\n  return (\n    <DetailsEditableContainer\n      editing={editing}\n      backgroundStyle={backgroundStyle}\n    >\n      <DetailsContent editing={editing}>\n        {showLabel && (\n          <>\n            <DetailsKey>{t(`c.${keyName}`)}</DetailsKey>\n            <DetailsValue\n              editing={editing}\n              editable\n              data-testid={`details-value-${keyName.toLowerCase()}`}\n              expiryDate={type === 'date'}\n            >\n              {type === 'address' ? (\n                <AddressLink address={value} ariaLabel={t(`c.${keyName}`)}>\n                  <SingleNameBlockies address={value} imageSize={24} />\n                  {keyName === 'Resolver' &&\n                  domain.contentType === 'oldcontent' ? (\n                    <Tooltip\n                      text='<p>This resolver is outdated and does not support the new content hash.<br/>Click the \"Set\" button to update  to the latest public resolver.</p>'\n                      position=\"top\"\n                      border={true}\n                    >\n                      {({ tooltipElement, showTooltip, hideTooltip }) => (\n                        <>\n                          <Info\n                            onMouseOver={() => {\n                              showTooltip()\n                            }}\n                            onMouseLeave={() => {\n                              hideTooltip()\n                            }}\n                          />\n                          {tooltipElement}\n                        </>\n                      )}\n                    </Tooltip>\n                  ) : null}\n                  <Address>{value}</Address>\n                </AddressLink>\n              ) : type === 'date' ? (\n                <>\n                  <ExpiryDate\n                    tabIndex={0}\n                    aria-label={`${t(`c.${keyName}`)}${formatDate(value)}`}\n                  >\n                    {formatDate(value)}\n                  </ExpiryDate>\n                </>\n              ) : (\n                value\n              )}\n              {copyToClipboard && <CopyToClipboard value={value} />}\n            </DetailsValue>\n          </>\n        )}\n        {editing ? null : pending && !confirmed ? (\n          <PendingTx\n            txHash={txHash}\n            onConfirmed={() => {\n              if (keyName === 'registrant') {\n                refetchTilUpdatedSingle({\n                  refetch,\n                  interval: 300,\n                  keyToCompare: 'registrant',\n                  prevData: {\n                    singleName: domain\n                  },\n                  getterString: 'singleName'\n                })\n              } else {\n                refetch()\n              }\n              setConfirmed()\n            }}\n          />\n        ) : (\n          <Action\n            initial={{\n              opacity: 0,\n              x: 0\n            }}\n            animate={{\n              opacity: 1,\n              x: 0\n            }}\n            exit={{\n              opacity: 0,\n              x: 0\n            }}\n          >\n            {editButton ? (\n              <EditButton\n                type={editButtonType}\n                onClick={startEditing}\n                data-testid={`edit-${keyName.toLowerCase()}`}\n              >\n                {editButton}\n              </EditButton>\n            ) : (\n              <Pencil\n                onClick={startEditing}\n                data-testid={`edit-${keyName.toLowerCase()}`}\n              />\n            )}\n          </Action>\n        )}\n        {editing &&\n        canDelete &&\n        (keyName === 'Controller' || keyName === 'Resolver') ? (\n          <Action>\n            <Bin\n              data-testid={`delete-${type.toLowerCase()}`}\n              onClick={e => {\n                e.preventDefault()\n                ownerMutation()\n              }}\n            />\n          </Action>\n        ) : (\n          ''\n        )}\n      </DetailsContent>\n      <AnimatePresence>\n        {editing && (\n          <motion.div\n            initial={{\n              height: 0,\n              width: 0,\n              opacity: 0\n            }}\n            animate={{\n              height: 'auto',\n              width: '100%',\n              opacity: 1\n            }}\n            exit={{\n              height: 0,\n              width: 0,\n              opacity: 0\n            }}\n            transition={{ ease: 'easeOut', duration: 0.3 }}\n          >\n            <EditRecord\n              initial={{\n                scale: 0,\n                opacity: 0\n              }}\n              animate={{\n                scale: 1,\n                opacity: 1\n              }}\n              exit={{\n                scale: 0,\n                opacity: 0\n              }}\n              transition={{ ease: 'easeOut', duration: 0.3 }}\n            >\n              {getInputType(keyName, type, {\n                newValue,\n                updateValue,\n                presetValue,\n                isValid,\n                isInvalid,\n                years,\n                name: domain.name,\n                setYears,\n                ethUsdPrice,\n                ethUsdPriceLoading,\n                duration,\n                expirationDate,\n                rentPriceLoading,\n                rentPrice: getRentPrice,\n                placeholder\n              })}\n            </EditRecord>\n            <Buttons>\n              {keyName === 'Expiration Date' && !isRegistrant ? (\n                <WarningMessage>\n                  *{t('singleName.expiry.cannotown')}\n                </WarningMessage>\n              ) : (\n                ''\n              )}\n              {keyName === 'Resolver' && (\n                <>\n                  {isNewResolverAddress && !isContractAddress && (\n                    <ResolverAddressWarning data-testid=\"resolver-address-warning\">\n                      {t('singleName.resolver.resolverAddressWarning')}\n                    </ResolverAddressWarning>\n                  )}\n                  {!loading && (\n                    <DefaultResolverButton\n                      onClick={e => {\n                        e.preventDefault()\n                        updateValue(data.publicResolver.address)\n                      }}\n                    >\n                      {t('singleName.resolver.publicResolver')}\n                    </DefaultResolverButton>\n                  )}\n                </>\n              )}\n\n              <SaveCancel\n                stopEditing={stopEditing}\n                mutation={() => {\n                  const variables = getVariables(keyName, {\n                    domain,\n                    variableName,\n                    newValue,\n                    duration\n                  })\n                  mutation({\n                    variables\n                  })\n                }}\n                value={\n                  keyName === 'Expiration Date' ? formatDate(value) : value\n                }\n                newValue={\n                  keyName === 'Expiration Date'\n                    ? formatDate(expirationDate)\n                    : newValue\n                }\n                mutationButton={mutationButton}\n                confirm={true}\n                isValid={isValid}\n              />\n            </Buttons>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </DetailsEditableContainer>\n  )\n}\n\nfunction ViewOnly({\n  editButton,\n  value,\n  keyName,\n  type,\n  deedOwner,\n  isDeedOwner,\n  domain,\n  isExpiredRegistrant,\n  copyToClipboard\n}) {\n  const { t } = useTranslation()\n  //get default messages for 0x values\n  if (parseInt(value, 16) === 0) {\n    let [newValue, newType] = getMessages({\n      keyName,\n      parent: domain.parent,\n      deedOwner,\n      isDeedOwner,\n      t\n    })\n\n    value = newValue\n    type = newType\n  }\n  return (\n    <DetailsEditableContainer>\n      <DetailsContent>\n        <DetailsKey>{t(`c.${keyName}`)}</DetailsKey>\n        <DetailsValue data-testid={`details-value-${keyName.toLowerCase()}`}>\n          {type === 'address' ? (\n            <AddressLink address={value} ariaLabel={t(`c.${keyName}`)}>\n              <SingleNameBlockies address={value} imageSize={24} />\n              {value}\n            </AddressLink>\n          ) : type === 'date' ? (\n            formatDate(value)\n          ) : (\n            value\n          )}\n          {copyToClipboard && <CopyToClipboard value={value} />}\n        </DetailsValue>\n\n        <Action>\n          {editButton ? (\n            <Tooltip\n              text={getToolTipMessage({ keyName, t, isExpiredRegistrant })}\n              position=\"top\"\n              border={true}\n              warning={true}\n              offset={{ left: -30, top: 10 }}\n            >\n              {({ tooltipElement, showTooltip, hideTooltip }) => {\n                return (\n                  <EditButton\n                    onMouseOver={() => {\n                      showTooltip()\n                    }}\n                    onMouseLeave={() => {\n                      hideTooltip()\n                    }}\n                    data-testid={`edit-${keyName.toLowerCase()}`}\n                    type=\"disabled\"\n                  >\n                    {editButton}\n                    {tooltipElement}\n                  </EditButton>\n                )\n              }}\n            </Tooltip>\n          ) : (\n            <Pencil\n              data-testid={`edit-${keyName.toLowerCase()}`}\n              disabled={true}\n            />\n          )}\n        </Action>\n      </DetailsContent>\n    </DetailsEditableContainer>\n  )\n}\n\nfunction DetailsEditable(props) {\n  return props.canEdit ? <Editable {...props} /> : <ViewOnly {...props} />\n}\n\nexport default DetailsEditable\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst Button = styled('span')`\n  color: white;\n  background: #c7d3e3;\n  border-radius: 6px;\n  border: 1px solid #ededed;\n  padding: 0 2px;\n`\n\nconst You = () => {\n  return <Button>You</Button>\n}\n\nexport default You\n","import React from 'react'\nimport { Mutation } from '@apollo/client/react/components'\nimport styled from '@emotion/styled/macro'\nimport { useEditable } from '../hooks'\nimport { SUBMIT_PROOF } from '../../graphql/mutations'\n\nimport Button from '../Forms/Button'\nimport PendingTx from '../PendingTx'\n\nconst SubmitButton = styled(Button)`\n  width: 130px;\n`\n\nconst Action = styled('div')`\n  position: absolute;\n`\n\nfunction SubmitProof({ name, parentOwner, refetch, actionText }) {\n  console.log('SubmitProof', { name, parentOwner, refetch, actionText })\n  const { state, actions } = useEditable()\n  const { txHash, pending, confirmed } = state\n  const { startPending } = actions\n\n  return (\n    <Action>\n      {pending && !confirmed && txHash ? (\n        <PendingTx\n          txHash={txHash}\n          onConfirmed={() => {\n            refetch()\n          }}\n        />\n      ) : (\n        <Mutation\n          mutation={SUBMIT_PROOF}\n          onCompleted={data => {\n            startPending(Object.values(data)[0])\n          }}\n        >\n          {mutate => (\n            <SubmitButton\n              onClick={() => {\n                mutate({ variables: { name, parentOwner } })\n              }}\n              type=\"primary\"\n            >\n              {actionText}\n            </SubmitButton>\n          )}\n        </Mutation>\n      )}\n    </Action>\n  )\n}\n\nexport default SubmitProof\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { getPlaceholder, trimRecord } from '../../utils/records'\nimport DefaultInput from '../Forms/Input'\n\nconst Input = styled(DefaultInput)`\n  width: 100%;\n`\n\nconst DetailsItemInput = ({\n  updateValue,\n  isValid,\n  isInvalid,\n  dataType,\n  contentType,\n  placeholder,\n  newValue\n}) => {\n  return (\n    <Input\n      warning={dataType === 'content' && contentType === 'oldcontent'}\n      valid={isValid}\n      invalid={isInvalid}\n      placeholder={placeholder || getPlaceholder(dataType, contentType)}\n      onChange={e => {\n        updateValue(trimRecord(contentType, e.target.value))\n      }}\n      value={newValue}\n    />\n  )\n}\n\nexport default DetailsItemInput\n","import React, { Component } from 'react'\nimport styled from '@emotion/styled/macro'\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable'\n\nconst SelectContainer = styled('div')`\n  width: 250px;\n`\n\nconst styles = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: 'white',\n    textTransform: 'lowercase',\n    fontWeight: '700',\n    fontSize: '12px',\n    color: '#2B2B2B',\n    letterSpacing: '0.5px'\n  }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      // backgroundColor: isDisabled\n      //   ? null\n      //   : isSelected\n      //     ? data.color\n      //     : isFocused\n      //       ? color.alpha(0.1).css()\n      //       : null,\n      backgroundColor: 'white',\n      textTransform: 'lowercase',\n      fontWeight: isSelected ? 700 : 500,\n      fontSize: '12px',\n      letterSpacing: '0.5px',\n      color: isDisabled ? '#ccc' : isSelected ? 'black' : '#666',\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    }\n  },\n  input: styles => ({ ...styles }),\n  placeholder: styles => ({ ...styles }),\n  singleValue: (styles, { data }) => ({ ...styles })\n}\n\nclass SelectComponent extends Component {\n  render() {\n    const { selectedOption, handleChange, className, addNewKey } = this.props\n    const SelectorType = addNewKey ? CreatableSelect : Select\n    return (\n      <SelectContainer className={className}>\n        <SelectorType\n          isHidden={false}\n          value={selectedOption}\n          onChange={handleChange}\n          {...this.props}\n          styles={styles}\n          theme={theme => ({\n            ...theme,\n            borderRadius: 10,\n            colors: {\n              ...theme.colors,\n              text: 'orangered',\n              primary25: 'blue',\n              primary: '#cccccc'\n            }\n          })}\n        />\n      </SelectContainer>\n    )\n  }\n}\n\nexport default SelectComponent\n","import React, { useEffect, useRef, useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport mq from 'mediaQuery'\nimport { useTranslation } from 'react-i18next'\n\nimport { validateRecord, getPlaceholder } from '../../../utils/records'\nimport { useEditable } from '../../hooks'\nimport TEXT_RECORD_KEYS from 'constants/textRecords'\nimport COIN_LIST from 'constants/coinList'\n\nimport Button from '../../Forms/Button'\nimport { DetailsKey } from '../DetailsItem'\nimport DetailsItemInput from '../DetailsItemInput'\nimport DefaultSelect from '../../Forms/Select'\nimport DefaultAddressInput from '@evmosdomains/react-ens-address'\nimport { asyncThrottle } from 'utils/utils'\n\nconst AddressInput = styled(DefaultAddressInput)`\n  margin-bottom: 10px;\n`\n\nconst ToggleAddRecord = styled('span')`\n  font-family: Overpass;\n  font-weight: bold;\n  font-size: 14px;\n  color: #5284ff;\n  letter-spacing: 0.58px;\n  text-align: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  ${p =>\n    p.pending &&\n    `\n    color: #cccccc;\n    pointer-events: none;\n    \n    &:hover {\n      cursor: initial;\n    }\n  `}\n`\n\nconst Select = styled(DefaultSelect)`\n  margin-right: 20px;\n  flex-direction: row;\n  margin-bottom: 10px;\n  width: 100%;\n  ${mq.small`\n    margin-bottom: 0px;\n    max-width: 150px;\n  `}\n`\n\nconst RecordsTitle = styled('h3')`\n  /* Pointers: */\n  font-family: Overpass;\n  font-weight: 700;\n  font-size: 12px;\n  color: #adbbcd;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n  margin: 0;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst AddRecordContainer = styled('div')`\n  background: #f0f6fa;\n`\n\nconst AddRecordForm = styled('form')`\n  padding: 20px;\n`\n\nconst Row = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  flex-direction: column;\n  ${mq.small`\n    flex-direction: row;\n  `}\n`\n\nconst NewRecordsContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 21px;\n  overflow: hidden;\n  ${mq.medium`\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n  `}\n`\n\nexport const RecordsKey = styled(DetailsKey)`\n  font-size: 12px;\n  margin-bottom: 0;\n  max-width: 100%;\n  margin-right: 10px;\n  ${mq.medium`\n    width: 200px;\n    margin-right: 0px;\n  `}\n`\nconst UploadBtn = styled(Button)`\n  flex-direction: row;\n  margin-bottom: 5px;\n  width: 100%;\n  background: #5284ff;\n  ${mq.small`\n    margin-left: 20px;\n    margin-bottom: 20px;\n    max-width: 150px;\n  `}\n`\n\nconst AddRecordButton = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst textRecordOptions = TEXT_RECORD_KEYS.slice()\n  .sort()\n  .map(key => ({\n    label: key,\n    value: key\n  }))\nconst coinOptions = COIN_LIST.slice()\n  .sort()\n  .map(key => ({\n    label: key,\n    value: key\n  }))\n\nconst clearInput = (setSelectedRecord, setSelectedKey, updateValue) => {\n  setSelectedRecord(null)\n  setSelectedKey(null)\n  updateValue(null)\n}\n\nconst throttledValidate = asyncThrottle(\n  async (selectedKey, newValue, selectedRecord, domain, setIsValidating) => {\n    if (!selectedKey) return false\n    setIsValidating(true)\n\n    return await validateRecord({\n      key: selectedKey?.value,\n      value: newValue,\n      contractFn: selectedRecord?.contractFn,\n      addr: domain.addr\n    })\n  },\n  500\n)\n\nconst useChangedValidRecord = (\n  selectedKey,\n  newValue,\n  selectedRecord,\n  domain,\n  setIsValidating,\n  setIsValid\n) => {\n  const newValueRef = useRef()\n\n  newValueRef.current = newValue\n\n  useEffect(() => {\n    if (newValue) {\n      new Promise(async () => {\n        const isValid = await throttledValidate(\n          selectedKey,\n          newValue,\n          selectedRecord,\n          domain,\n          setIsValidating\n        )\n\n        if (newValue === newValueRef.current) {\n          setIsValid(isValid)\n          setIsValidating(false)\n        }\n      })\n    }\n  }, [newValue])\n}\n\nfunction Editable({\n  domain,\n  emptyRecords,\n  editing,\n  startEditing,\n  stopEditing,\n  updateRecord,\n  pending\n}) {\n  const { t } = useTranslation()\n  const { state, actions } = useEditable()\n  const { newValue } = state\n  const { updateValue } = actions\n\n  const [selectedRecord, setSelectedRecord] = useState(null)\n  const [selectedKey, setSelectedKey] = useState(null)\n  const [isValid, setIsValid] = useState(false)\n  const [isValidating, setIsValidating] = useState(false)\n\n  const handleChange = selectedRecord => {\n    if (selectedRecord.contractFn === 'setContenthash') {\n      setSelectedKey('content')\n    } else {\n      setSelectedKey(null)\n    }\n    setSelectedRecord(selectedRecord)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n  }\n\n  const args = {\n    type: selectedRecord && selectedRecord.value ? selectedRecord.value : null,\n    value: newValue,\n    contentType: domain.contentType,\n    selectedKey: selectedKey && selectedKey.value\n  }\n\n  useChangedValidRecord(\n    selectedKey,\n    newValue,\n    selectedRecord,\n    domain,\n    setIsValidating,\n    setIsValid\n  )\n\n  return (\n    <>\n      <RecordsTitle>\n        {t('singleName.record.title')}\n        {editing ? (\n          <ToggleAddRecord onClick={stopEditing} pending={pending}>\n            Close Add/Edit Record\n          </ToggleAddRecord>\n        ) : (\n          <ToggleAddRecord onClick={startEditing} pending={pending}>\n            Add/Edit Record\n          </ToggleAddRecord>\n        )}\n      </RecordsTitle>\n      {editing && (\n        <AddRecordForm onSubmit={handleSubmit}>\n          <Row>\n            <Select\n              selectedOption={selectedRecord}\n              handleChange={handleChange}\n              placeholder=\"Add record\"\n              options={emptyRecords}\n            />\n            {selectedRecord?.value === 'coins' && (\n              <Select\n                selectedRecord={selectedKey}\n                handleChange={setSelectedKey}\n                placeholder=\"Coin\"\n                options={coinOptions}\n              />\n            )}\n            {selectedRecord?.value === 'textRecords' && (\n              <Select\n                selectedRecord={selectedKey}\n                handleChange={setSelectedKey}\n                placeholder=\"Key\"\n                options={textRecordOptions}\n                addNewKey\n              />\n            )}\n            {selectedRecord?.value && (\n              <DetailsItemInput\n                newValue={newValue || ''}\n                dataType={selectedRecord ? selectedRecord.value : null}\n                contentType={selectedKey?.label}\n                updateValue={updateValue}\n                isValid={isValid && !isValidating}\n                isInvalid={!isValid && !isValidating}\n                placeholder={getPlaceholder(\n                  selectedRecord.contractFn,\n                  selectedKey?.label\n                )}\n              />\n            )}\n          </Row>\n          <AddRecordButton>\n            <Button\n              data-testid=\"save-record\"\n              type={isValid ? 'primary' : 'disabled'}\n              disabled={!isValid && !isValidating}\n              onClick={() => {\n                updateRecord({\n                  key: selectedKey?.value || 'CONTENT',\n                  value: newValue,\n                  contractFn: selectedRecord?.contractFn\n                })\n                clearInput(setSelectedRecord, setSelectedKey, updateValue)\n                setIsValid(false)\n                setIsValidating(false)\n              }}\n            >\n              Save\n            </Button>\n          </AddRecordButton>\n        </AddRecordForm>\n      )}\n    </>\n  )\n}\n\nfunction AddRecord(props) {\n  const { canEdit } = props\n  const { t } = useTranslation()\n  return canEdit ? (\n    <AddRecordContainer>\n      <Editable {...props} />\n    </AddRecordContainer>\n  ) : (\n    <AddRecordContainer>\n      <RecordsTitle>{t('singleName.record.title')}</RecordsTitle>\n    </AddRecordContainer>\n  )\n}\n\nexport default AddRecord\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport externalLinkSvg from '../Icons/externalLink.svg'\nimport CopyToClipboard from '../CopyToClipboard/'\nimport { isRecordEmpty, prependUrl } from '../../utils/utils'\nimport useNetworkInfo from '../NetworkInformation/useNetworkInfo'\nimport { useAvatar } from '../hooks'\n\nconst LinkContainer = styled('div')`\n  display: block;\n  align-items: center;\n  a {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    .external-link {\n      margin-left: 5px;\n      transition: 0.1s;\n      opacity: 0;\n    }\n    &:hover {\n      .external-link {\n        opacity: 1;\n      }\n    }\n  }\n`\n\nconst UnlinkedValue = styled('div')`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst NotSet = styled('div')`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #ccc;\n`\n\nconst UnlinkedValueContainer = styled('div')`\n  display: inline-flex;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst AvatarImage = styled('img')`\n  width: 180px;\n  margin: 1em 0;\n`\n\nconst OwnerLabel = styled('span')`\n  background: rgb(66, 224, 104);\n  color: white;\n  border-radius: 5px;\n  padding: 0 5px;\n  margin-right: 5px;\n`\n\nconst RecordLink = ({ textKey, value, name }) => {\n  let url\n  const { network } = useNetworkInfo()\n  switch (textKey) {\n    case 'eth.ens.delegate':\n    case 'url':\n      url = `${value}`\n      break\n    case 'com.twitter':\n      url = `twitter.com/${value}`\n      break\n    case 'com.github':\n      url = `github.com/${value}`\n      break\n    default:\n  }\n  url = prependUrl(url)\n\n  if (textKey === 'email') {\n    url = `mailto:${value}`\n  }\n  const { is_owner, host_meta, image: imageUrl } = useAvatar(\n    textKey,\n    name,\n    network,\n    value\n  )\n  const isEmpty = isRecordEmpty(value)\n\n  return url && !isEmpty ? (\n    <LinkContainer>\n      <a\n        target=\"_blank\"\n        href={url}\n        rel=\"noopener noreferrer\"\n        aria-label={textKey}\n      >\n        {value}\n        <img\n          src={externalLinkSvg}\n          className=\"external-link\"\n          alt=\"external-link-svg\"\n        />\n      </a>\n      <CopyToClipboard value={value} />\n    </LinkContainer>\n  ) : imageUrl && !isEmpty ? (\n    <div>\n      <LinkContainer>\n        {is_owner && <OwnerLabel>Owner</OwnerLabel>}\n        <a\n          target=\"_blank\"\n          href={host_meta?.reference_url}\n          rel=\"noopener noreferrer\"\n          aria-label={textKey}\n        >\n          {value}\n          <img\n            src={externalLinkSvg}\n            className=\"external-link\"\n            alt=\"external-link-svg\"\n          />\n        </a>\n\n        <CopyToClipboard value={value} />\n      </LinkContainer>\n      <AvatarImage src={imageUrl} alt=\"avatar\" />\n    </div>\n  ) : (\n    <UnlinkedValueContainer>\n      {isEmpty ? (\n        <NotSet>Not set</NotSet>\n      ) : (\n        <>\n          <UnlinkedValue\n            data-testid={`unlinked-value-${textKey}`}\n            tabIndex={0}\n            aria-label={textKey}\n          >\n            {value}\n          </UnlinkedValue>\n          <CopyToClipboard value={value} />\n        </>\n      )}\n    </UnlinkedValueContainer>\n  )\n}\n\nexport default RecordLink\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport Button from '../Forms/Button'\nimport mq from 'mediaQuery'\n\nconst FileUpload = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  font-size: 16px;\n  margin-bottom 10px;\n`\n\nconst UploadButton = styled(Button)`\n  flex-direction: row;\n  margin-bottom: 5px;\n  width: 100%;\n  background: #5284ff;\n  ${mq.small`\n    margin-left: 20px;\n    max-width: 175px;\n  `}\n`\n\nconst Dropzone = props => {\n  const fileInputRef = React.createRef()\n  const folderInputRef = React.createRef()\n\n  const openFileDialog = () => {\n    if (props.disabled) return\n    fileInputRef.current.click()\n  }\n\n  const openFolderDialog = () => {\n    if (props.disabled) return\n    folderInputRef.current.click()\n  }\n\n  const onFilesAdded = e => {\n    if (props.disabled) return\n    const files = e.target.files\n    if (props.sendRequest) {\n      if (files.length > 1) {\n        const array = directoryListToArray(files)\n        props.sendRequest(array)\n      } else {\n        const array = fileListToArray(files)\n        props.sendRequest(array)\n      }\n    }\n  }\n\n  const fileListToArray = list => {\n    const array = []\n    for (let i = 0; i < list.length; i++) {\n      array.push(list.item(i))\n    }\n    return array\n  }\n\n  const directoryListToArray = list => {\n    const array = []\n    for (let i = 0; i < list.length; i++) {\n      const item = {\n        path: `${list.item(i).webkitRelativePath}`,\n        content: list.item(i)\n      }\n      array.push(item)\n    }\n    return array\n  }\n\n  return (\n    <>\n      <FileUpload\n        onClick={openFolderDialog}\n        style={{ cursor: props.disabled ? 'default' : 'pointer' }}\n      >\n        <UploadButton>Folder Upload</UploadButton>\n        <input\n          type=\"file\"\n          webkitdirectory=\"webkitdirectory\"\n          multiple=\"multiple\"\n          ref={folderInputRef}\n          style={{ display: 'none' }}\n          onChange={onFilesAdded}\n        />\n      </FileUpload>\n      <FileUpload\n        onClick={openFileDialog}\n        style={{ cursor: props.disabled ? 'default' : 'pointer' }}\n      >\n        <UploadButton>File Upload</UploadButton>\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          style={{ display: 'none' }}\n          onChange={onFilesAdded}\n        />\n      </FileUpload>\n    </>\n  )\n}\n\nexport default Dropzone\n","import React, { useState } from 'react'\nimport Dropzone from './Dropzone'\nimport styled from '@emotion/styled/macro'\nimport ipfsClient from 'ipfs-http-client'\nimport { loggedIn, getToken } from './auth'\nimport { getConfig, getDev } from './config'\nimport Loader from '../Loader'\nimport mq from 'mediaQuery'\n\nconst Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  align-items: center;\n  text-align: left;\n  overflow: hidden;\n  ${mq.small`\n    text-align: center;\n    margin-top: 10px;\n  `}\n`\n\nconst FileName = styled('span')`\n  margin-bottom: 0px;\n  font-size: 16px;\n\n  ${mq.small`\n    font-size: 20px;\n    margin-bottom: 12px;\n  `}\n`\n\nconst ErrorMsg = styled('span')`\n  margin-bottom: 0px;\n  font-size: 16px;\n  color: red;\n  ${mq.small`\n    font-size: 20px;\n    margin-bottom: 8px;\n  `}\n`\n\nconst Files = styled('div')`\n  align-items: flex-start;\n  justify-items: flex-start;\n`\n\nconst Upload = props => {\n  const [files, setFiles] = useState([])\n  const [upload, setUpload] = useState(false)\n  const [uploadError, setUploadError] = useState(false)\n  const [client] = useState(getConfig('TEMPORAL'))\n\n  const sendRequest = newfiles => {\n    const ipfs = ipfsClient({\n      host: getDev() ? client.dev : client.host,\n      port: client.port,\n      'api-path': client.apiPath,\n      protocol: client.protocol,\n      headers: {\n        Authorization: loggedIn() ? 'Bearer ' + getToken() : ''\n      }\n    })\n    setFiles(newfiles)\n    setUpload(true)\n    if (newfiles.length > 1) {\n      ipfs\n        .add(newfiles, {})\n        .then(response => {\n          const root = response[response.length - 1]\n          if (props.updateValue) {\n            props.updateValue('ipfs://' + root.hash)\n          }\n          setUpload(false)\n        })\n        .catch(() => {\n          setUpload(false)\n          setUploadError(true)\n        })\n    } else if (newfiles.length === 1) {\n      const file = [...newfiles][0]\n      let ipfsId\n      ipfs\n        .add(file, {})\n        .then(response => {\n          ipfsId = response[0].hash\n          if (props.updateValue) {\n            props.updateValue('ipfs://' + ipfsId)\n          }\n          setUpload(false)\n        })\n        .catch(() => {\n          setUpload(false)\n          setUploadError(true)\n        })\n    }\n  }\n\n  return (\n    <Container>\n      {upload ? (\n        <Loader withWrap large />\n      ) : props.newValue !== '' ? (\n        <>\n          <Files>\n            {files.length > 1 ? (\n              <FileName>\n                Folder successfully uploaded to IPFS! <br />\n                Click 'Save' to put the hash in your Content Record. <br />\n              </FileName>\n            ) : (\n              <FileName>\n                File successfully uploaded to IPFS! <br />\n                Click 'Save' to put the hash in your Content Record. <br />\n              </FileName>\n            )}\n          </Files>\n        </>\n      ) : (\n        <>\n          <FileName>UPLOAD FILES TO IPFS</FileName>\n          <ErrorMsg>\n            {uploadError ? 'There was a problem uploading your file' : ''}\n          </ErrorMsg>\n          <Dropzone sendRequest={sendRequest} disabled={upload} />\n          <FileName>\n            Manage your pins <a href={client.link}>here</a>.\n          </FileName>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default Upload\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { getConfig, getDev } from './config'\nimport mq from 'mediaQuery'\n\nconst Login = styled('div')`\n  margin: 16px auto;\n  font-size: 16px;\n  ${mq.large`\n    width: 400px;\n  `}\n`\n\nconst Header = styled('h2')`\n  margin-top: 5px;\n  margin-bottom: 0;\n  background: #5483fe;\n  padding: 20px;\n  font-size: 1.4em;\n  font-weight: normal;\n  text-align: center;\n  text-transform: uppercase;\n  color: #fff;\n  ${mq.small`\n    padding: 4px;\n  `}\n`\n\nconst Logo = styled('img')`\n  padding-top: 10px;\n  height: 95%;\n  width: 95%;\n`\n\nconst ErrorMsg = styled('h3')`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;\n  font-weight: normal;\n  text-align: center;\n  text-transform: uppercase;\n  color: red;\n  font-size: 16px;\n  ${mq.small`\n    font-size: 18px;\n  `}\n`\n\nconst InputWrapper = styled('p')`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 12px;\n`\n\nconst LoginForm = styled('form')`\n  background: #ebebeb;\n  padding: 12px;\n`\n\nconst TextInput = styled('input')`\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n  border-width: 1px;\n  border-style: solid;\n  padding: 16px;\n  outline: 0;\n  font-family: inherit;\n  font-size: 0.95em;\n  background: #fff;\n  border-color: #bbb;\n  color: #555;\n  :focus {\n    border-color: #888;\n  }\n`\n\nconst Button = styled('input')`\n  background: #5384fe;\n  width: 40%;\n  height: 35px;\n  border-color: transparent;\n  color: #fff;\n  cursor: pointer;\n  font-size: 0.95em;\n  margin-right: 5%;\n  margin-left: 5%;\n  :hover {\n    background: #2c46a6;\n  }\n  :focus {\n    border-color: #2c46a6;\n  }\n`\n\nconst IpfsLogin = props => {\n  const [signupForm, setSignupForm] = useState(false)\n  const [errorMsg, setErrorMsg] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n  const [client] = useState(getConfig('TEMPORAL'))\n\n  const signup = (email, username, password) => {\n    const data = new FormData()\n    data.append('username', username)\n    data.append('password', password)\n    data.append('email_address', email)\n    const req = new XMLHttpRequest()\n    req.withCredentials = false\n\n    req.addEventListener('readystatechange', () => {\n      if (req.readyState === 4) {\n        let result = JSON.parse(req.responseText)\n        if (result.code === 200) {\n          setErrorMsg('Verify your email before you can upload.')\n          setPassword('')\n          setUsername('')\n          setEmail('')\n          setSignupForm(false)\n        } else {\n          setErrorMsg(result.response)\n        }\n      }\n    })\n\n    req.open('POST', getDev() ? client.signupDev : client.signup)\n    req.setRequestHeader('Cache-Control', 'no-cache')\n    req.send(data)\n  }\n\n  const login = (username, password) => {\n    const data = JSON.stringify({\n      username: username.toString(),\n      password: password.toString()\n    })\n\n    const req = new XMLHttpRequest()\n    req.withCredentials = false\n\n    req.addEventListener('readystatechange', () => {\n      if (req.readyState === 4) {\n        let result = JSON.parse(req.responseText)\n        if (result.token) {\n          window.localStorage.setItem('ipfsexpire', result.expire)\n          window.localStorage.setItem('ipfstoken', result.token)\n          setErrorMsg('')\n          props.startAuthorizing()\n        } else {\n          setErrorMsg(result.message)\n        }\n      }\n    })\n\n    req.open('POST', getDev() ? client.loginDev : client.login)\n    req.setRequestHeader('Cache-Control', 'no-cache')\n    req.setRequestHeader('Content-Type', 'text/plain')\n    req.send(data)\n  }\n\n  const handleChange = evt => {\n    const { name, value } = evt.target\n    name === 'username'\n      ? setUsername(value)\n      : name === 'email'\n      ? setEmail(value)\n      : setPassword(value)\n  }\n\n  const handleSubmit = evt => {\n    evt.preventDefault()\n    signupForm ? signup(email, username, password) : login(username, password)\n  }\n\n  const handleFormChange = () => {\n    setPassword('')\n    setUsername('')\n    setErrorMsg('')\n    setEmail('')\n    signupForm ? setSignupForm(false) : setSignupForm(true)\n  }\n\n  return (\n    <Login>\n      <Header>\n        <a href={client.link}>\n          <Logo src={client.logo} />\n        </a>\n      </Header>\n      <LoginForm onSubmit={handleSubmit}>\n        <ErrorMsg>{errorMsg}</ErrorMsg>\n        {signupForm && (\n          <InputWrapper>\n            <TextInput\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n        )}\n        <InputWrapper>\n          <TextInput\n            type=\"username\"\n            name=\"username\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={handleChange}\n          />\n        </InputWrapper>\n        <InputWrapper>\n          <TextInput\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </InputWrapper>\n        <InputWrapper>\n          <Button\n            type=\"button\"\n            value={signupForm ? 'Login' : 'Sign Up'}\n            onClick={handleFormChange}\n          />\n          <Button type=\"submit\" value={signupForm ? 'Sign Up' : 'Login'} />\n        </InputWrapper>\n      </LoginForm>\n    </Login>\n  )\n}\n\nexport default IpfsLogin\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUpload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 20,\n    viewBox: \"0 0 24 25\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#ADBBCD\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUpload);\nexport default __webpack_public_path__ + \"static/media/Upload.42daaa59855e7317cb4aea8c1c345520.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { ReactComponent as ExternalLinkIcon } from '../Icons/externalLink.svg'\nimport { getProtocolType } from '@evmosdomains/ui'\n\nconst ContentHashLinkContainer = styled('a')`\n  display: inline-block;\n  align-items: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  svg {\n    margin-left: 10px;\n    transition: 0.1s;\n    opacity: 0;\n  }\n\n  &:hover {\n    svg {\n      opacity: 1;\n    }\n  }\n`\n\nconst ContentHashLink = ({ value, contentType, domain }) => {\n  if (contentType === 'oldcontent' || !value) {\n    return <div>{value}</div>\n  }\n\n  const rslt = getProtocolType(value)\n\n  const protocolType = rslt?.protocolType\n  const decoded = rslt?.decoded\n\n  let externalLink, url\n  if (protocolType === 'ipfs') {\n    externalLink = `https://dweb.link/ipfs/${decoded}` // using ipfs's secured origin gateway\n    url = `ipfs://${decoded}`\n  } else if (protocolType === 'ipns') {\n    externalLink = `https://dweb.link/ipns/${decoded}`\n    url = `ipns://${decoded}`\n  } else if (protocolType === 'bzz') {\n    externalLink = `https://gateway.ethswarm.org/bzz/${decoded}`\n    url = `bzz://${decoded}`\n  } else if (protocolType === 'onion' || protocolType === 'onion3') {\n    externalLink = `http://${decoded}.onion`\n    url = `onion://${decoded}`\n  } else if (protocolType === 'sia') {\n    externalLink = `https://siasky.net/${decoded}`\n    url = `sia://${decoded}`\n  } else if (protocolType === 'arweave') {\n    externalLink = `https://arweave.net/${decoded}`\n    url = `arweave://${decoded}`\n  } else {\n    console.warn(`Unsupported protocol ${protocolType}`)\n  }\n  return (\n    <ContentHashLinkContainer\n      target=\"_blank\"\n      href={externalLink}\n      aria-label={contentType}\n    >\n      {url}\n      <ExternalLinkIcon />\n    </ContentHashLinkContainer>\n  )\n}\n\nexport default ContentHashLink\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled/macro'\nimport { useMutation } from '@apollo/client'\nimport { useTranslation } from 'react-i18next'\nimport DefaultAddressInput from '@evmosdomains/react-ens-address'\n\nimport { SET_CONTENT, SET_CONTENTHASH, SET_ADDRESS } from 'graphql/mutations'\n\nimport { validateRecord } from 'utils/records'\nimport { emptyAddress } from 'utils/utils'\nimport mq from 'mediaQuery'\nimport { getOldContentWarning } from './warnings'\nimport { getEnsAddress } from '../../../apollo/mutations/ens'\n\nimport { DetailsItem, DetailsKey, DetailsValue } from '../DetailsItem'\nimport Upload from '../../IPFS/Upload'\nimport IpfsLogin from '../../IPFS/Login'\nimport StyledUpload from '../../Forms/Upload'\nimport AddressLink from '../../Links/AddressLink'\nimport ContentHashLink from '../../Links/ContentHashLink'\nimport Pencil from '../../Forms/Pencil'\nimport Bin from '../../Forms/Bin'\nimport { SaveCancel, SaveCancelSwitch } from '../SaveCancel'\nimport DefaultPendingTx from '../../PendingTx'\nimport DetailsItemInput from '../DetailsItemInput'\nimport CopyToClipBoard from '../../CopyToClipboard/'\nimport { useEditable } from '../../hooks'\n\nconst AddressInput = styled(DefaultAddressInput)`\n  margin-bottom: 10px;\n`\n\nexport const RecordsItem = styled(DetailsItem)`\n  ${p => !p.hasRecord && 'display: none;'}\n  ${p => (p.noBorder ? '' : 'border-top: 1px dashed #d3d3d3;')}\n  display: block;\n  padding: 20px;\n  flex-direction: column;\n   ${mq.small`\n    align-items: flex-start;\n  `}\n\n  background: ${({ editing }) => (editing ? 'white' : 'white')};\n  ${mq.medium`\n    display: flex;\n    flex-direction: column;\n  `}\n`\n\nexport const RecordsContent = styled('div')`\n  display: grid;\n  width: 100%;\n  justify-content: flex-start;\n  align-items: center;\n  position: relative;\n  ${mq.medium`\n    display: flex;\n  `}\n`\n\nexport const RecordsKey = styled(DetailsKey)`\n  font-size: 12px;\n  margin-bottom: 0;\n  max-width: 100%;\n  margin-right: 10px;\n  ${mq.medium`\n    width: 200px;\n    margin-right: 0px;\n  `}\n`\n\nexport const RecordsSubKey = styled('div')`\n  font-family: Overpass Mono;\n  font-weight: 500;\n  font-size: 14px;\n  color: #adbbcd;\n  letter-spacing: 0;\n\n  ${mq.small`\n    font-size: 16px;\n    max-width: 220px;\n    min-width: 180px;\n  `}\n`\n\nexport const RecordsValue = styled(DetailsValue)`\n  font-size: 14px;\n  font-family: Overpass Mono;\n  margin-top: 1em;\n  ${mq.small`\n      margin-top: 0;\n  `}\n`\n\nconst NewRecordsContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 21px;\n  overflow: hidden;\n  ${mq.medium`\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n  `}\n`\n\nconst EditRecord = styled('div')`\n  width: 100%;\n`\n\nconst Action = styled('div')`\n  margin-left: 0;\n  ${mq.small`\n    margin-left: auto;\n  `};\n`\n\nconst SecondaryAction = styled('div')`\n  margin-right: 10px;\n`\n\nconst ActionContainer = styled('div')`\n  display: flex;\n  margin-left: 0;\n  margin-top: 10px;\n  align-self: flex-end;\n  ${mq.small`\n    margin-top: 0;\n    margin-left: auto;\n  `};\n`\n\nconst PendingTx = styled(DefaultPendingTx)`\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translate(0, -65%);\n`\n\nfunction chooseMutation(recordType, contentType) {\n  switch (recordType) {\n    case 'Content':\n      if (contentType === 'oldcontent') {\n        return SET_CONTENT\n      } else {\n        return SET_CONTENTHASH\n      }\n    case 'Address':\n      return SET_ADDRESS\n    default:\n      throw new Error('Not a recognised record type')\n  }\n}\n\nconst Actionable = ({ startEditing, keyName, value }) => {\n  if (value && !value.error) {\n    return (\n      <Action>\n        <Pencil\n          onClick={startEditing}\n          data-testid={`edit-${keyName.toLowerCase()}`}\n        />\n      </Action>\n    )\n  }\n}\n\nconst Uploadable = ({ startUploading, keyName, value }) => {\n  if (value && !value.error) {\n    return (\n      <SecondaryAction>\n        <StyledUpload\n          onClick={startUploading}\n          data-testid={'edit-upload-temporal'}\n        />\n      </SecondaryAction>\n    )\n  }\n}\n\nconst RecordItemEditable = ({\n  domain,\n  keyName,\n  value,\n  type,\n  mutation,\n  refetch,\n  variableName,\n  account\n}) => {\n  const { t } = useTranslation()\n  const { state, actions } = useEditable()\n\n  const {\n    editing,\n    authorized,\n    uploading,\n    newValue,\n    txHash,\n    pending,\n    confirmed\n  } = state\n\n  const {\n    startEditing,\n    stopEditing,\n    updateValue,\n    startPending,\n    setConfirmed,\n    startUploading,\n    stopUploading,\n    startAuthorizing,\n    stopAuthorizing\n  } = actions\n\n  const isValid = validateRecord({\n    type,\n    value: newValue,\n    contentType: domain.contentType\n  })\n\n  const isInvalid = newValue !== '' && !isValid\n  const [executeMutation] = useMutation(mutation, {\n    onCompleted: data => {\n      startPending(Object.values(data)[0])\n    }\n  })\n\n  return (\n    <>\n      <RecordsItem editing={editing} hasRecord={true}>\n        <RecordsContent editing={editing}>\n          <RecordsKey>{t(`c.${keyName}`)}</RecordsKey>\n          <RecordsValue editableSmall>\n            {type === 'address' ? (\n              <AddressLink address={value} ariaLabel={t(`c.${keyName}`)}>\n                {value}\n              </AddressLink>\n            ) : (\n              <ContentHashLink\n                value={value}\n                contentType={domain.contentType}\n                domain={domain}\n              />\n            )}\n            <CopyToClipBoard value={value} />\n          </RecordsValue>\n\n          {pending && !confirmed && txHash ? (\n            <PendingTx\n              txHash={txHash}\n              onConfirmed={() => {\n                setConfirmed()\n                refetch()\n              }}\n            />\n          ) : editing || uploading ? (\n            <Action>\n              {() => {\n                const [mutate] = useMutation(\n                  chooseMutation(keyName, domain.contentType),\n                  {\n                    onCompleted: data => {\n                      startPending(Object.values(data)[0])\n                    }\n                  }\n                )\n                return (\n                  <Bin\n                    data-testid={`delete-${type.toLowerCase()}`}\n                    onClick={e => {\n                      e.preventDefault()\n                      mutate({\n                        variables: {\n                          name: domain.name,\n                          recordValue: emptyAddress\n                        }\n                      })\n                    }}\n                  />\n                )\n              }}\n            </Action>\n          ) : (\n            <ActionContainer>\n              {type === 'address' ? (\n                <Actionable\n                  startEditing={startEditing}\n                  keyName={keyName}\n                  value={value}\n                />\n              ) : (\n                <>\n                  <Uploadable\n                    startUploading={startUploading}\n                    keyName={keyName}\n                    value={value}\n                  />\n                  <Actionable\n                    startEditing={startEditing}\n                    keyName={keyName}\n                    value={value}\n                  />\n                </>\n              )}\n            </ActionContainer>\n          )}\n        </RecordsContent>\n        {editing ? (\n          <>\n            <EditRecord>\n              {type === 'address' ? (\n                <AddressInput\n                  provider={\n                    window.ethereum || window.web3 || 'http://localhost:8545'\n                  }\n                  onResolve={({ address }) => {\n                    if (address) {\n                      updateValue(address)\n                    } else {\n                      updateValue('')\n                    }\n                  }}\n                  ensAddress={getEnsAddress()}\n                />\n              ) : (\n                <DetailsItemInput\n                  newValue={newValue}\n                  dataType={type}\n                  contentType={domain.contentType}\n                  updateValue={updateValue}\n                  isValid={isValid}\n                  isInvalid={isInvalid}\n                />\n              )}\n            </EditRecord>\n            <SaveCancel\n              warningMessage={getOldContentWarning(type, domain.contentType)}\n              mutation={e => {\n                e.preventDefault()\n                const variables = {\n                  name: domain.name,\n                  [variableName ? variableName : 'recordValue']: newValue\n                }\n                executeMutation({\n                  variables\n                })\n              }}\n              isValid={isValid}\n              stopEditing={stopEditing}\n            />\n          </>\n        ) : uploading && authorized ? (\n          <>\n            <EditRecord>\n              <Upload updateValue={updateValue} newValue={newValue} />\n              {newValue !== '' && (\n                <NewRecordsContainer>\n                  <RecordsKey>New IPFS Hash:</RecordsKey>\n                  <ContentHashLink\n                    value={newValue}\n                    contentType={domain.contentType}\n                    domain={domain}\n                  />\n                </NewRecordsContainer>\n              )}\n            </EditRecord>\n            <SaveCancelSwitch\n              warningMessage={getOldContentWarning(type, domain.contentType)}\n              mutation={e => {\n                e.preventDefault()\n                const variables = {\n                  name: domain.name,\n                  [variableName ? variableName : 'recordValue']: newValue\n                }\n                executeMutation({\n                  variables\n                })\n              }}\n              isValid={isValid}\n              newValue={newValue}\n              startUploading={startUploading}\n              stopUploading={stopUploading}\n              stopAuthorizing={stopAuthorizing}\n            />\n          </>\n        ) : uploading && !authorized ? (\n          <>\n            <IpfsLogin startAuthorizing={startAuthorizing} />\n            <SaveCancel\n              warningMessage={getOldContentWarning(type, domain.contentType)}\n              mutation={e => {\n                e.preventDefault()\n                const variables = {\n                  name: domain.name,\n                  [variableName ? variableName : 'recordValue']: newValue\n                }\n                executeMutation({\n                  variables\n                })\n              }}\n              isValid={isValid}\n              stopEditing={stopUploading}\n            />\n          </>\n        ) : (\n          ''\n        )}\n      </RecordsItem>\n    </>\n  )\n}\n\nfunction RecordItemViewOnly({ keyName, value, type, domain }) {\n  const { contentType } = domain\n  const { t } = useTranslation()\n  return keyName !== 'Address' && contentType === 'error' ? (\n    ''\n  ) : (\n    <RecordsItem>\n      <RecordsContent>\n        <RecordsKey>{t(`c.${keyName}`)}</RecordsKey>\n        <RecordsValue>\n          {type === 'address' ? (\n            <AddressLink address={value} ariaLabel={t(`c.${keyName}`)}>\n              {value}\n            </AddressLink>\n          ) : (\n            <ContentHashLink\n              value={value}\n              contentType={contentType}\n              domain={domain}\n            />\n          )}\n          <CopyToClipBoard value={value} />\n        </RecordsValue>\n        <Action>\n          <Pencil\n            disabled={true}\n            data-testid={`edit-${keyName.toLowerCase()}`}\n          />\n        </Action>\n      </RecordsContent>\n    </RecordsItem>\n  )\n}\n\nfunction RecordItem(props) {\n  const { canEdit } = props\n  if (canEdit) return <RecordItemEditable {...props} />\n\n  return <RecordItemViewOnly {...props} />\n}\n\nRecordItem.propTypes = {\n  keyName: PropTypes.string.isRequired, // key of the record\n  value: PropTypes.string.isRequired, // value of the record (normally hex address)\n  type: PropTypes.string, // type of value. Defaults to address\n  mutation: PropTypes.object.isRequired, //graphql mutation string for making tx\n  mutationButton: PropTypes.string, // Mutation button text\n  editButton: PropTypes.string, //Edit button text\n  domain: PropTypes.object.isRequired,\n  variableName: PropTypes.string, //can change the variable name for mutation\n  refetch: PropTypes.func.isRequired,\n  account: PropTypes.string\n}\n\nexport default RecordItem\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nimport { emptyAddress } from '../../utils/utils'\nimport DefaultInput from '../Forms/Input'\n\nconst Input = styled(DefaultInput)`\n  width: 100%;\n  ${p =>\n    p.hasBeenUpdated\n      ? `\n    input {\n      border: #5284FF solid 1px;\n    }\n    \n  `\n      : ''}\n`\n\nconst RecordInput = ({\n  onChange,\n  value,\n  isValid,\n  isInvalid,\n  dataType,\n  contentType,\n  placeholder,\n  hasBeenUpdated,\n  testId\n}) => {\n  return (\n    <Input\n      hasBeenUpdated={hasBeenUpdated}\n      warning={dataType === 'content' && contentType === 'oldcontent'}\n      valid={isValid && hasBeenUpdated}\n      value={value == emptyAddress ? '' : value}\n      invalid={isInvalid}\n      placeholder={placeholder}\n      onChange={onChange}\n      testId={testId}\n    />\n  )\n}\n\nexport default RecordInput\n","import React, { useEffect, useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport RecordLink from '../../../Links/RecordLink'\nimport mq from 'mediaQuery'\n\nimport {\n  RecordsContent,\n  RecordsItem,\n  RecordsKey,\n  RecordsSubKey\n} from '../RecordsItem'\nimport RecordInput from '../../RecordInput'\nimport DefaultBin from '../../../Forms/Bin'\nimport { emptyAddress } from '../../../../utils/utils'\nimport { trimRecord } from '../../../../utils/records'\n\nconst Bin = styled(DefaultBin)`\n  align-self: center;\n  margin-left: 10px;\n  margin-right: 10px;\n`\n\nconst KeyValueItem = styled(RecordsItem)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  width: 100%;\n  padding 0;\n  ${mq.medium`\n    flex-direction: row;\n  `}\n\n  ${p =>\n    p.editing &&\n    mq.medium`\n    flex-direction: column;\n  `}\n`\n\nconst KeyValueContainer = styled('div')`\n  ${p => (p.noRecords ? 'display: none' : 'display:flex')};\n  flex-direction: column;\n  padding: 20px;\n\n  ${mq.xLarge`\n    flex-direction: row;\n    align-items: flex-start;\n  `}\n`\n\nconst KeyValuesList = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  ${mq.xLarge`\n    width: calc(100% - 200px);\n  `};\n`\n\nconst Key = styled(RecordsKey)`\n  margin-bottom: 20px;\n  ${mq.small`\n    margin-bottom: 20px;\n  `}\n`\n\nconst RecordsListItem = styled('div')`\n  display: flex;\n  flex-direction: column;\n\n  ${mq.medium`\n    flex-direction: row;\n    margin-bottom: 20px;\n  `}\n`\n\nconst KeyValuesContent = styled(RecordsContent)`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr;\n  align-items: flex-start;\n  overflow: hidden;\n  ${p => (p.hasBeenUpdated ? 'border: solid 1px red;' : '')}\n  ${mq.small`\n    grid-template-columns: 150px 1fr;\n  `}\n`\n\nconst DeleteRecord = styled('span')`\n  color: red;\n`\n\nconst hasChange = (changedRecords, key) => {\n  return !!changedRecords.find(el => el.key === key)\n}\n\nconst Editable = ({\n  editing,\n  domain,\n  validator,\n  changedRecords,\n  updateRecord,\n  record,\n  placeholder,\n  validating\n}) => {\n  const { key, value } = record\n  const isValid = validator(record)\n  const isValidating = validating(record)\n  return (\n    <KeyValueItem editing={editing} hasRecord={true} noBorder>\n      {editing ? (\n        <KeyValuesContent editing={editing}>\n          <RecordsSubKey>{key}</RecordsSubKey>\n          <RecordInput\n            testId={`${key}-record-input`}\n            hasBeenUpdated={hasChange(changedRecords, key)}\n            type=\"text\"\n            isInvalid={!isValid && !isValidating}\n            onChange={event => {\n              updateRecord({\n                ...record,\n                value: trimRecord(key, event.target.value)\n              })\n            }}\n            value={value === emptyAddress ? '' : value}\n            isValid={isValid && !isValidating}\n            {...{ placeholder }}\n          />\n\n          <Bin\n            data-testid={`${key}-record-delete`}\n            onClick={() => {\n              updateRecord({ ...record, value: '' })\n            }}\n          />\n        </KeyValuesContent>\n      ) : (\n        <KeyValuesContent>\n          <RecordsSubKey>{key}</RecordsSubKey>\n          <RecordLink textKey={key} value={value} name={domain?.name} />\n        </KeyValuesContent>\n      )}\n    </KeyValueItem>\n  )\n}\n\nfunction Record(props) {\n  const {\n    validator,\n    setHasRecord,\n    hasRecord,\n    canEdit,\n    editing,\n    setUpdatedRecords,\n    recordType,\n    changedRecords,\n    updateRecord,\n    record,\n    domain,\n    validating\n  } = props\n\n  const { key, value } = record\n\n  useEffect(() => {\n    if (value && parseInt(value, 16) !== 0 && !hasRecord) {\n      setHasRecord(true)\n    }\n  }, [value, hasRecord, setHasRecord])\n\n  return canEdit ? (\n    <Editable\n      {...props}\n      validator={validator}\n      validating={validating}\n      editing={editing}\n      setUpdatedRecords={setUpdatedRecords}\n      changedRecords={changedRecords}\n      recordType={recordType}\n      domain={domain}\n      {...{ updateRecord, record }}\n    />\n  ) : (\n    <ViewOnly textKey={key} value={record?.value} domain={domain} />\n  )\n}\n\nfunction ViewOnly({ textKey, value, remove, domain }) {\n  return (\n    <RecordsListItem>\n      <RecordsSubKey>{textKey}</RecordsSubKey>\n      {remove ? (\n        <DeleteRecord>Delete Record</DeleteRecord>\n      ) : (\n        <RecordLink textKey={textKey} value={value} name={domain?.name} />\n      )}\n    </RecordsListItem>\n  )\n}\n\nfunction Records({\n  editing,\n  canEdit,\n  records,\n  validator,\n  title,\n  setUpdatedRecords,\n  changedRecords,\n  recordType,\n  updateRecord,\n  domain,\n  validating\n}) {\n  const [hasRecord, setHasRecord] = useState(false)\n  return (\n    <KeyValueContainer hasRecord={hasRecord}>\n      <Key>{title}</Key>\n      <KeyValuesList>\n        {records?.map(record => {\n          return (\n            <Record\n              editing={editing}\n              dataValue={record.value}\n              validator={validator}\n              validating={validating}\n              setHasRecord={setHasRecord}\n              hasRecord={hasRecord}\n              canEdit={canEdit}\n              setUpdatedRecords={setUpdatedRecords}\n              changedRecords={changedRecords}\n              recordType={recordType}\n              domain={domain}\n              {...{\n                updateRecord,\n                record\n              }}\n            />\n          )\n        })}\n      </KeyValuesList>\n    </KeyValueContainer>\n  )\n}\n\nexport default function KeyValueRecord(props) {\n  if (props.loading) return null\n  return <Records {...props} />\n}\n\nexport { ViewOnly, KeyValueContainer, KeyValuesList, Key }\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {\n  ViewOnly as KeyValueViewOnly,\n  KeyValueContainer as DefaultKeyValueContainer,\n  KeyValuesList as DefaultKeyValuesList,\n  Key as DefaultKey\n} from './KeyValueRecord/'\n\nimport mq from 'mediaQuery'\n\nimport 'cross-fetch/polyfill'\nconst Key = styled(DefaultKey)`\n  ${mq.small`\n    margin-bottom: 0;\n  `}\n`\n\nconst KeyValuesList = styled(DefaultKeyValuesList)``\n\nconst KeyValueContainer = styled(DefaultKeyValueContainer)`\n  padding: 0;\n  margin-bottom: 20px;\n`\n\nconst Contenthash = styled('div')`\n  display: flex;\n  margin-bottom: 20px;\n`\n\nconst Delete = styled('span')`\n  color: red;\n`\n\nexport default function MultipleRecordsCheck({ changedRecords }) {\n  return (\n    <div>\n      <KeyValueContainer>\n        <KeyValuesList>\n          {changedRecords.map(record =>\n            record.value === '' ? (\n              <KeyValueViewOnly\n                textKey={record.key}\n                value={record.value}\n                remove={true}\n              />\n            ) : (\n              <KeyValueViewOnly textKey={record.key} value={record.value} />\n            )\n          )}\n        </KeyValuesList>\n      </KeyValueContainer>\n    </div>\n  )\n}\n","import KeyValueRecord from './KeyValueRecord'\n\nexport default KeyValueRecord\nexport * from './KeyValueRecord.js'\n","const TLD = 'link'\nfunction createFetchUrl(name) {\n  return `https://eth.${TLD}/names/${name}.${TLD}`\n}\n\nfunction whitelisted() {\n  return ['app.ens.domains', 'ens.eth', 'ens.eth.link'].includes(\n    window.location.host\n  )\n}\n\nexport function requestCertificate(name) {\n  if (!whitelisted()) return Promise.resolve({ status: null })\n  const fetchUrl = createFetchUrl(name)\n  fetch(fetchUrl, {\n    method: 'PUT',\n    mode: 'cors',\n    headers: {\n      Origin: '*',\n      'Content-Type': 'text/plain',\n      'Access-Control-Request-Method': 'PUT'\n    }\n  }).catch(e => {\n    console.log(e)\n  })\n}\n\nexport function checkCertificate(name) {\n  if (!whitelisted()) return Promise.resolve({ status: null })\n  return fetch(createFetchUrl(name))\n}\n\nexport function isEthSubdomain(name) {\n  let labels = name.split('.')\n  let suffix = labels[labels.length - 1]\n  return suffix === 'eth' && name !== 'eth'\n}\n","import React, { useEffect, useState } from 'react'\nimport { emptyAddress } from 'utils/utils'\nimport {\n  requestCertificate,\n  checkCertificate,\n  isEthSubdomain\n} from './Certificate.js'\nimport { useInterval } from 'components/hooks'\nimport PendingTx from 'components/PendingTx'\nimport styled from '@emotion/styled/macro'\nimport Button from '../../Forms/Button'\nimport mq from 'mediaQuery'\nimport { useTranslation } from 'react-i18next'\nimport useNetworkInfo from '../../NetworkInformation/useNetworkInfo'\n\nconst Warning = styled('span')`\n  margin-right: 1em;\n  color: #f5a623;\n`\n\nconst Action = styled('div')`\n  margin-left: 0;\n  ${mq.small`\n    margin-left: auto;\n  `};\n`\n\nexport default function RequestCertificate({ domain, value }) {\n  const { networkId } = useNetworkInfo()\n  // CloudFlaire only creates certificate if the domain exists on Mainnet\n  if (networkId !== 1) return ''\n\n  const [requireCertificate, setRequireCertificate] = useState(false)\n  const [timerRunning, setTimerRunning] = useState(false)\n  const { t } = useTranslation()\n  const handleRequestCertificate = () => {\n    requestCertificate(domain.name)\n    setTimerRunning(true)\n  }\n  useInterval(\n    () => {\n      // Make sure that the requested certificate for subdomain is created\n      checkCertificate(domain.name)\n        .then(({ status }) => {\n          if (status === 200) {\n            setRequireCertificate(false)\n            setTimerRunning(false)\n          }\n        })\n        .catch(e => {\n          console.log('checkCertificate error', { e })\n        })\n    },\n    timerRunning ? 3000 : null\n  )\n\n  useEffect(() => {\n    if (\n      isEthSubdomain(domain.parent) &&\n      domain.contentType === 'contenthash' &&\n      domain.content !== emptyAddress &&\n      (value?.includes('ipfs') || value?.includes('ipns'))\n    ) {\n      checkCertificate(domain.name).then(({ status }) => {\n        setRequireCertificate(status === 404)\n      })\n    }\n  }, [domain, value])\n\n  if (requireCertificate) {\n    if (timerRunning) {\n      return (\n        <Action>\n          <PendingTx>{t('singleName.messages.pending')}</PendingTx>\n        </Action>\n      )\n    } else {\n      return (\n        <Action>\n          <Warning>{t('certificate.warning', { name: domain.name })}</Warning>\n          <Button onClick={handleRequestCertificate}>\n            {t('certificate.button')}\n          </Button>\n        </Action>\n      )\n    }\n  }\n  return ''\n}\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\n\nimport { emptyAddress } from 'utils/utils'\nimport mq from 'mediaQuery'\n\nimport { DetailsItem, DetailsKey, DetailsValue } from '../DetailsItem'\nimport ContentHashLink from '../../Links/ContentHashLink'\nimport DefaultBin from '../../Forms/Bin'\nimport RecordInput from '../RecordInput'\nimport CopyToClipBoard from '../../CopyToClipboard/'\nimport RequestCertificate from './RequestCertificate'\nimport useNetworkInfo from '../../NetworkInformation/useNetworkInfo'\nimport { ReactComponent as ExternalLinkIcon } from '../../Icons/externalLink.svg'\n\nexport const RecordsItem = styled(DetailsItem)`\n  ${p => !p.hasRecord && 'display: none;'}\n  ${p => (p.noBorder ? '' : 'border-top: 1px dashed #d3d3d3;')}\n  display: block;\n  padding: 20px;\n  flex-direction: column;\n  ${mq.small`\n    align-items: flex-start;\n  `}\n\n  border-bottom: 1px dashed #d3d3d3;\n\n  ${mq.medium`\n    display: flex;\n    flex-direction: column;\n  `}\n`\n\nexport const RecordsContent = styled('div')`\n  display: grid;\n  width: 100%;\n  justify-content: flex-start;\n  align-items: center;\n  position: relative;\n  ${mq.medium`\n    display: flex;\n  `}\n  ${({ editing }) => editing && 'margin-bottom: 30px'};\n`\n\nexport const RecordsKey = styled(DetailsKey)`\n  font-size: 12px;\n  margin-bottom: 0;\n  max-width: 100%;\n  margin-right: 10px;\n  align-self: flex-start;\n  ${mq.medium`\n    width: 180px;\n    margin-right: 0px;\n  `}\n\n  ${mq.large`\n    width: 200px;\n    margin-right: 0px;\n  `}\n`\n\nexport const RecordsSubKey = styled('div')`\n  font-family: Overpass Mono;\n  font-weight: 500;\n  font-size: 14px;\n  color: #adbbcd;\n  letter-spacing: 0;\n\n  ${mq.small`\n    font-size: 16px;\n    max-width: 220px;\n    min-width: 180px;\n  `}\n`\n\nexport const RecordsValue = styled(DetailsValue)`\n  font-size: 14px;\n  margin-top: 1em;\n  ${mq.small`\n      margin-top: 0;\n  `}\n`\n\nconst NewRecordsContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  font-size: 21px;\n  overflow: hidden;\n  ${mq.medium`\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n  `}\n`\n\nconst EditRecord = styled('div')`\n  width: 100%;\n`\n\nconst Action = styled('div')`\n  margin-left: 0;\n  ${mq.small`\n    margin-left: auto;\n  `};\n`\n\nconst Bin = styled(DefaultBin)`\n  align-self: flex-start;\n  margin-top: 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n`\n\nconst SecondaryAction = styled('div')`\n  margin-right: 10px;\n`\n\nconst NotSet = styled('div')`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #ccc;\n`\n\nconst LinkContainer = styled('a')`\n  display: inline-block;\n  align-items: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  svg {\n    margin-left: 10px;\n    transition: 0.1s;\n    opacity: 0;\n  }\n\n  &:hover {\n    svg {\n      opacity: 1;\n    }\n  }\n`\n\nconst hasChange = (changedRecords, key) => {\n  return !!changedRecords.find(el => el.key === key)\n}\n\nconst ContentHashEditable = ({\n  domain,\n  keyName,\n  type,\n  records,\n  changedRecords,\n  editing,\n  updateRecord,\n  validator\n}) => {\n  const { t } = useTranslation()\n  const { contentType } = domain\n\n  const record = records[0]\n  const value = record?.value\n  const isValid = validator(record)\n  const isInvalid = value !== '' && !isValid\n\n  return (\n    <>\n      <RecordsItem editing={editing} hasRecord={true}>\n        <RecordsContent editing={editing}>\n          <RecordsKey>{t('c.Content')}</RecordsKey>\n\n          {!editing && (\n            <RecordsValue editableSmall>\n              {value === '' ||\n              value === emptyAddress ||\n              value === undefined ||\n              value === 'undefined' ? (\n                <NotSet>Not set</NotSet>\n              ) : (\n                <ContentHashLinkWithEthLink\n                  value={value}\n                  contentType={contentType}\n                  domain={domain}\n                />\n              )}\n            </RecordsValue>\n          )}\n\n          {editing && (\n            <>\n              <EditRecord>\n                <RecordInput\n                  testId={`content-record-input${isInvalid ? '-invalid' : ''}`}\n                  onChange={event => {\n                    updateRecord({\n                      ...record,\n                      value: event.target.value.trim()\n                    })\n                  }}\n                  hasBeenUpdated={hasChange(changedRecords, keyName)}\n                  value={value}\n                  dataType={type}\n                  contentType={domain.contentType}\n                  isValid={isValid}\n                  isInvalid={isInvalid}\n                />\n              </EditRecord>\n              <Action>\n                <Bin\n                  data-testid={`delete-${type.toLowerCase()}`}\n                  onClick={e => {\n                    e.preventDefault()\n                    updateRecord({ ...record, value: emptyAddress })\n                  }}\n                />\n              </Action>\n            </>\n          )}\n\n          {!editing && <RequestCertificate {...{ domain, value }} />}\n        </RecordsContent>\n      </RecordsItem>\n    </>\n  )\n}\n\nfunction ContentHashLinkWithEthLink({ value, contentType, domain }) {\n  const { networkId } = useNetworkInfo()\n  const displayEthLink =\n    !!domain.name.match('.evmos$') && networkId === 1 && value?.match(/^ip/)\n  return (\n    <>\n      <div>\n        <ContentHashLink\n          value={value}\n          contentType={contentType}\n          domain={domain}\n        />\n        {displayEthLink && (\n          <div>\n            <LinkContainer\n              target=\"_blank\"\n              rel=\"noopener\"\n              href={`https://${domain.name}.link`}\n            >\n              ({`https://${domain.name}.link`})\n              <ExternalLinkIcon />\n            </LinkContainer>\n          </div>\n        )}\n      </div>\n      <div>\n        <CopyToClipBoard value={value} />\n        <div>{displayEthLink && <>&nbsp;</>}</div>\n      </div>\n    </>\n  )\n}\n\nfunction ContentHashViewOnly({ domain, account, records }) {\n  const value = records?.length && records[0]\n  const { contentType } = domain\n\n  if (contentType === 'error') return ''\n\n  return (\n    <RecordsItem>\n      <RecordsContent>\n        <RecordsValue>\n          {!!value && value !== '' ? (\n            <ContentHashLinkWithEthLink\n              {...{ value: value?.value, contentType, domain }}\n            />\n          ) : (\n            <NotSet>Not set</NotSet>\n          )}\n        </RecordsValue>\n      </RecordsContent>\n    </RecordsItem>\n  )\n}\n\nfunction ContentHash(props) {\n  const { canEdit } = props\n  if (canEdit) return <ContentHashEditable {...props} />\n\n  return <ContentHashViewOnly {...props} />\n}\n\nexport default ContentHash\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport styled from '@emotion/styled/macro'\nimport isEqual from 'lodash/isEqual'\nimport differenceWith from 'lodash/differenceWith'\nimport { useTranslation } from 'react-i18next'\nimport { gql } from '@apollo/client'\n\nimport { getNamehash, emptyAddress } from '@evmosdomains/ui'\nimport { useEditable } from '../../hooks'\nimport { ADD_MULTI_RECORDS } from '../../../graphql/mutations'\nimport COIN_LIST from 'constants/coinList'\nimport PendingTx from '../../PendingTx'\nimport { formatsByCoinType } from '@evmosdomains/address-encoder'\n\nimport {\n  GET_ADDRESSES,\n  GET_TEXT_RECORDS,\n  GET_RESOLVER_FROM_SUBGRAPH\n} from 'graphql/queries'\n\nimport AddRecord from './AddRecord'\nimport DefaultSaveCancel from '../SaveCancel'\nimport RecordsCheck from './RecordsCheck'\nimport KeyValueRecord from './KeyValueRecord/KeyValueRecord'\n\nimport ContentHash from './ContentHash'\n\nconst RecordsWrapper = styled('div')`\n  border-radius: 6px;\n  border: 1px solid #ededed;\n  box-shadow: inset 0 0 10px 0 rgba(235, 235, 235, 0.5);\n  display: ${p => (p.shouldShowRecords ? 'block' : 'none')};\n  margin-bottom: 20px;\n`\n\nconst CantEdit = styled('div')`\n  padding: 20px;\n  font-size: 14px;\n  color: #adbbcd;\n  background: hsla(37, 91%, 55%, 0.1);\n`\n\nconst SaveCancel = styled(DefaultSaveCancel)``\n\nconst ConfirmBox = styled('div')`\n  p {\n    font-weight: 300;\n    font-size: 14px;\n  }\n  padding: 20px;\n  background: #f0f6fa;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst RECORDS = [\n  {\n    label: 'Addresses',\n    value: 'coins',\n    contractFn: 'setAddr(bytes32,uint256,bytes)'\n  },\n  {\n    label: 'Content',\n    value: 'content',\n    contractFn: 'setContenthash'\n  },\n  {\n    label: 'Text',\n    value: 'textRecords',\n    contractFn: 'setText'\n  }\n]\nimport TEXT_PLACEHOLDER_RECORDS from '../../../constants/textRecords'\nimport { validateRecord } from '../../../utils/records'\nimport { asyncThrottle, usePrevious } from '../../../utils/utils'\nimport { isEthSubdomain, requestCertificate } from './Certificate'\n\nconst COIN_PLACEHOLDER_RECORDS = ['ETH', ...COIN_LIST.slice(0, 3)]\n\nfunction isEmpty(record) {\n  if (parseInt(record, 16) === 0) {\n    return true\n  }\n  if (record === '0x') {\n    return true\n  }\n  if (!record) {\n    return true\n  }\n  return false\n}\n\nfunction hasAnyRecord(domain) {\n  if (!isEmpty(domain.addr)) {\n    return true\n  }\n\n  if (!isEmpty(domain.content)) {\n    return true\n  }\n}\n\nfunction calculateShouldShowRecords(isOwner, hasResolver, hasRecords) {\n  //do no show records if it only has a resolver if not owner\n  if (!isOwner && hasRecords) {\n    return true\n  }\n  //show records if it only has a resolver if owner so they can add\n  if (isOwner && hasResolver) {\n    return true\n  }\n  return false\n}\n\nfunction getChangedRecords(initialRecords, updatedRecords) {\n  return differenceWith(updatedRecords, initialRecords, isEqual)\n}\n\nfunction isContentHashEmpty(hash) {\n  return hash?.startsWith('undefined') || parseInt(hash, 16) === 0\n}\n\nconst useGetRecords = domain => {\n  const { data: dataResolver } = useQuery(GET_RESOLVER_FROM_SUBGRAPH, {\n    variables: {\n      id: getNamehash(domain.name)\n    }\n  })\n\n  const resolver =\n    dataResolver && dataResolver.domain && dataResolver.domain.resolver\n\n  const coinList =\n    resolver &&\n    resolver.coinTypes &&\n    resolver.coinTypes\n      .map(c => {\n        return formatsByCoinType[c] && formatsByCoinType[c].name\n      })\n      .filter(c => c)\n\n  const { loading: addressesLoading, data: dataAddresses } = useQuery(\n    GET_ADDRESSES,\n    {\n      variables: { name: domain.name, keys: coinList },\n      skip: !coinList,\n      fetchPolicy: 'network-only'\n    }\n  )\n\n  const { loading: textRecordsLoading, data: dataTextRecords } = useQuery(\n    GET_TEXT_RECORDS,\n    {\n      variables: {\n        name: domain.name,\n        keys: resolver && resolver.texts\n      },\n      skip: !dataResolver,\n      fetchPolicy: 'network-only'\n    }\n  )\n\n  return {\n    dataAddresses,\n    dataTextRecords,\n    recordsLoading: addressesLoading || textRecordsLoading\n  }\n}\n\nconst processRecords = (records, placeholder) => {\n  const nonDuplicatePlaceholderRecords = placeholder.filter(\n    record => !records.find(r => record === r.key)\n  )\n\n  const recordsSansEmpty = records.map(record => {\n    if (record.value === emptyAddress) {\n      return { ...record, value: '' }\n    }\n    return record\n  })\n\n  return [\n    ...recordsSansEmpty,\n    ...nonDuplicatePlaceholderRecords.map(record => ({\n      key: record,\n      value: ''\n    }))\n  ]\n}\n\nconst getInitialContent = domain => {\n  return {\n    contractFn: 'setContenthash',\n    key: 'CONTENT',\n    value: isContentHashEmpty(domain.content) ? '' : domain.content\n  }\n}\n\nconst getInitialCoins = dataAddresses => {\n  const addresses =\n    dataAddresses && dataAddresses.getAddresses\n      ? processRecords(dataAddresses.getAddresses, COIN_PLACEHOLDER_RECORDS)\n      : processRecords([], COIN_PLACEHOLDER_RECORDS)\n\n  return addresses?.map(address => ({\n    contractFn: 'setAddr(bytes32,uint256,bytes)',\n    ...address\n  }))\n}\n\nconst getInitialTextRecords = (dataTextRecords, domain) => {\n  const textRecords =\n    dataTextRecords && dataTextRecords.getTextRecords\n      ? processRecords(dataTextRecords.getTextRecords, TEXT_PLACEHOLDER_RECORDS)\n      : processRecords([], TEXT_PLACEHOLDER_RECORDS)\n\n  return textRecords?.map(textRecord => ({\n    addr: domain.addr,\n    contractFn: 'setText',\n    ...textRecord\n  }))\n}\n\nconst getInitialRecords = (domain, dataAddresses, dataTextRecords) => {\n  const initialTextRecords = getInitialTextRecords(dataTextRecords, domain)\n  const initialCoins = getInitialCoins(dataAddresses)\n  const initialContent = getInitialContent(domain)\n\n  return [...initialTextRecords, ...initialCoins, initialContent]\n}\n\nconst getCoins = updatedRecords =>\n  updatedRecords\n    .filter(record => record.contractFn === 'setAddr(bytes32,uint256,bytes)')\n    .sort(record => (record.key === 'ETH' ? -1 : 1))\n\nconst getContent = updatedRecords => {\n  const content = updatedRecords.filter(\n    record => record.contractFn === 'setContenthash'\n  )[0]\n\n  if (!content) return []\n  return [\n    {\n      key: content.key,\n      value: content.value,\n      contractFn: content.contractFn\n    }\n  ]\n}\n\nconst getTextRecords = updatedRecords =>\n  updatedRecords.filter(record => record.contractFn === 'setText')\n\nconst updateRecord = setUpdatedRecords => updatedRecord => {\n  setUpdatedRecords(updatedRecords => {\n    return updatedRecords?.reduce((acc, currentVal) => {\n      if (currentVal.key === updatedRecord.key) {\n        return [...acc, updatedRecord]\n      }\n      return [...acc, currentVal]\n    }, [])\n  })\n}\n\nconst addRecord = setUpdatedRecords => newRecord => {\n  setUpdatedRecords(updatedRecords => [...updatedRecords, newRecord])\n}\n\nconst hasRecord = (record, records) => {\n  return !!records.find(el => el.key === record.key)\n}\n\nconst addOrUpdateRecord = (updateFn, addFn, updatedRecords) => record => {\n  if (hasRecord(record, updatedRecords)) {\n    updateFn(record)\n    return\n  }\n  addFn(record)\n}\n\nconst validateAllRecords = (updatedRecords, validRecords) =>\n  updatedRecords.length === validRecords.length\n\nconst singleValidator = validRecords => record =>\n  validRecords.some(el => el.key === record.key && el.val === record.val)\n\nconst singleValidating = validatingRecords => record =>\n  validatingRecords.some(el => el.key === record.key && el.val === record.val)\n\nconst getValidRecords = async (records, validator) =>\n  Promise.all(records.map(validator)).then(results =>\n    records.map((value, index) => ({ valid: results[index], record: value }))\n  )\n\nconst useInitRecords = (\n  domain,\n  dataAddresses,\n  dataTextRecords,\n  setInitialRecords\n) => {\n  useEffect(() => {\n    setInitialRecords(getInitialRecords(domain, dataAddresses, dataTextRecords))\n  }, [domain, dataAddresses, dataTextRecords])\n}\n\nconst useUpdatedRecords = (\n  recordsLoading,\n  initialRecords,\n  setUpdatedRecords\n) => {\n  const prevInitialRecords = usePrevious(initialRecords)\n  useEffect(() => {\n    if (!recordsLoading || prevInitialRecords !== initialRecords) {\n      setUpdatedRecords(initialRecords)\n    }\n  }, [recordsLoading, initialRecords, prevInitialRecords])\n}\n\nconst throttledUpdate = asyncThrottle(\n  (\n    setChangedRecords,\n    initialRecords,\n    updatedRecords,\n    setValidatingRecords,\n    updatedRecordDiff,\n    validatingRecords\n  ) => {\n    setChangedRecords(getChangedRecords(initialRecords, updatedRecords))\n    setValidatingRecords([...validatingRecords, ...updatedRecordDiff])\n    return getValidRecords(updatedRecordDiff, validateRecord)\n  },\n  500\n)\n\nconst useChangedValidRecords = (\n  recordsLoading,\n  setChangedRecords,\n  setValidRecords,\n  initialRecords,\n  updatedRecords,\n  setValidatingRecords,\n  validRecords,\n  validatingRecords\n) => {\n  const prevUpdatedRecords = usePrevious(updatedRecords)\n  const updatedRecordsRef = useRef()\n  const validRecordsRef = useRef()\n  const validatingRecordsRef = useRef()\n\n  updatedRecordsRef.current = updatedRecords\n  validRecordsRef.current = validRecords\n  validatingRecordsRef.current = validatingRecords\n\n  useEffect(() => {\n    if (!recordsLoading) {\n      const updatedRecordDiff = updatedRecords.filter(\n        record => !prevUpdatedRecords.includes(record)\n      )\n      throttledUpdate(\n        setChangedRecords,\n        initialRecords,\n        updatedRecords,\n        setValidatingRecords,\n        updatedRecordDiff,\n        validatingRecordsRef.current\n      ).then(newValidatedRecords => {\n        const validatableRecords = newValidatedRecords.filter(record =>\n          updatedRecordsRef.current.includes(record.record)\n        )\n        const validRecordsWithoutNew = validRecordsRef.current.filter(\n          record => !validatableRecords.some(el => el.record.key === record.key)\n        )\n        const recordsToAddToValid = validatableRecords\n          .filter(\n            record =>\n              record.valid ||\n              (record.record.key.match(/_LEGACY/) &&\n                record.record.value ===\n                  initialRecords.find(el => el.key === record.record.key).value)\n          )\n          .map(record => record.record)\n        setValidRecords([...validRecordsWithoutNew, ...recordsToAddToValid])\n        setValidatingRecords(\n          validatingRecordsRef.current.filter(\n            record => !updatedRecordDiff.includes(record)\n          )\n        )\n      })\n    }\n  }, [updatedRecords, recordsLoading, initialRecords])\n}\n\nconst RECORDS_QUERY = gql`\n  query recordsQuery @client {\n    accounts\n    isReadOnly\n  }\n`\n\nexport const useResetFormOnAccountChange = (\n  account,\n  initialRecords,\n  setUpdatedRecords,\n  stopEditing\n) => {\n  useEffect(() => {\n    setUpdatedRecords(initialRecords)\n    stopEditing()\n  }, [account])\n}\n\nexport default function Records({\n  domain,\n  isOwner,\n  hasResolver,\n  isOldPublicResolver,\n  isDeprecatedResolver,\n  needsToBeMigrated\n}) {\n  const { t } = useTranslation()\n  const {\n    data: { accounts, isReadOnly }\n  } = useQuery(RECORDS_QUERY)\n\n  const [addMultiRecords] = useMutation(ADD_MULTI_RECORDS, {\n    onCompleted: data => {\n      startPending(Object.values(data)[0])\n    }\n  })\n  const [updatedRecords, setUpdatedRecords] = useState([])\n  const [changedRecords, setChangedRecords] = useState([])\n  const [validRecords, setValidRecords] = useState([])\n  const [validatingRecords, setValidatingRecords] = useState([])\n\n  const { actions, state } = useEditable()\n  const { pending, confirmed, editing, txHash } = state\n\n  const {\n    startPending,\n    setConfirmed,\n    startEditing,\n    stopEditing,\n    resetPending\n  } = actions\n\n  const { dataAddresses, dataTextRecords, recordsLoading } = useGetRecords(\n    domain\n  )\n\n  const [initialRecords, setInitialRecords] = useState([])\n\n  useInitRecords(domain, dataAddresses, dataTextRecords, setInitialRecords)\n  useUpdatedRecords(recordsLoading, initialRecords, setUpdatedRecords)\n  useChangedValidRecords(\n    recordsLoading,\n    setChangedRecords,\n    setValidRecords,\n    initialRecords,\n    updatedRecords,\n    setValidatingRecords,\n    validRecords,\n    validatingRecords\n  )\n  useResetFormOnAccountChange(\n    accounts?.[0],\n    initialRecords,\n    setUpdatedRecords,\n    stopEditing\n  )\n\n  const shouldShowRecords = calculateShouldShowRecords(\n    isOwner,\n    hasResolver,\n    hasAnyRecord(domain)\n  )\n  if (!shouldShowRecords) {\n    return null\n  }\n\n  const canEditRecords = isOwner\n\n  return (\n    <RecordsWrapper\n      shouldShowRecords={shouldShowRecords}\n      needsToBeMigrated={needsToBeMigrated}\n    >\n      {!canEditRecords && isOwner ? (\n        <CantEdit>{t('singleName.record.cantEdit')}</CantEdit>\n      ) : (\n        <AddRecord\n          canEdit={canEditRecords}\n          emptyRecords={RECORDS}\n          updateRecord={addOrUpdateRecord(\n            updateRecord(setUpdatedRecords),\n            addRecord(setUpdatedRecords),\n            updatedRecords\n          )}\n          {...{\n            pending,\n            domain,\n            editing,\n            startEditing,\n            stopEditing,\n            initialRecords,\n            updatedRecords,\n            setUpdatedRecords\n          }}\n        />\n      )}\n      <KeyValueRecord\n        canEdit={canEditRecords}\n        editing={editing}\n        records={getCoins(updatedRecords)}\n        title={t('c.addresses')}\n        updateRecord={updateRecord(setUpdatedRecords)}\n        changedRecords={changedRecords}\n        validator={singleValidator(validRecords)}\n        validating={singleValidating(validatingRecords)}\n      />\n      <ContentHash\n        canEdit={canEditRecords}\n        editing={editing}\n        domain={domain}\n        keyName=\"CONTENT\"\n        type=\"content\"\n        records={getContent(updatedRecords)}\n        changedRecords={changedRecords}\n        updatedRecords={updatedRecords}\n        updateRecord={updateRecord(setUpdatedRecords)}\n        validator={singleValidator(validRecords)}\n      />\n      <KeyValueRecord\n        canEdit={canEditRecords}\n        editing={editing}\n        domain={domain}\n        records={getTextRecords(updatedRecords)}\n        title={t('c.textrecord')}\n        updateRecord={updateRecord(setUpdatedRecords)}\n        changedRecords={changedRecords}\n        validator={singleValidator(validRecords)}\n        validating={singleValidating(validatingRecords)}\n      />\n      {pending && !confirmed && txHash && (\n        <ConfirmBox pending={pending}>\n          <PendingTx\n            txHash={txHash}\n            onConfirmed={() => {\n              setConfirmed()\n              resetPending()\n              setInitialRecords(updatedRecords)\n              if (isEthSubdomain(domain.parent)) {\n                requestCertificate(domain.name)\n              }\n            }}\n          />\n        </ConfirmBox>\n      )}\n      {editing && !txHash && (\n        <ConfirmBox>\n          <p>\n            Add, delete, or edit one or multiple records. Confirm in one\n            transaction.\n          </p>\n          <SaveCancel\n            mutation={() => {\n              addMultiRecords({\n                variables: { name: domain.name, records: changedRecords }\n              })\n            }}\n            mutationButton=\"Confirm\"\n            stopEditing={() => {\n              setUpdatedRecords(initialRecords)\n              stopEditing()\n            }}\n            disabled={false}\n            confirm={true}\n            extraDataComponent={\n              <RecordsCheck changedRecords={changedRecords} />\n            }\n            isValid={\n              !!changedRecords.length &&\n              validateAllRecords(updatedRecords, validRecords) &&\n              !validatingRecords.length\n            }\n          />\n        </ConfirmBox>\n      )}\n    </RecordsWrapper>\n  )\n}\n","import React from 'react'\nimport { Query } from '@apollo/client/react/components'\nimport styled from '@emotion/styled/macro'\n\nimport Loader from '../../Loader'\n\nimport {\n  RecordsContent,\n  RecordsItem,\n  RecordsKey,\n  RecordsValue\n} from './RecordsItem'\n\nconst Records = styled('div')`\n  border-radius: 6px;\n  border: 1px solid #ededed;\n  box-shadow: inset 0 0 10px 0 rgba(235, 235, 235, 0.5);\n  padding-bottom: 10px;\n  display: block;\n  margin-bottom: 20px;\n`\n\nconst RecordsHeader = styled('div')`\n  background: #f0f6fa;\n`\n\nconst RecordsTitle = styled('h3')`\n  font-family: Overpass;\n  font-weight: 700;\n  font-size: 12px;\n  color: #adbbcd;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n  margin: 0;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nfunction isArt(name) {\n  return !!name?.match(/\\.art$/)\n}\n\nfunction getArtRecordLabel(key) {\n  const recordLabels = {\n    title: 'Title',\n    maker: 'Maker',\n    type: 'Type of Object',\n    subject: 'Subject',\n    period: 'Period',\n    dimensions: 'Measurements',\n    materials: 'Materials & Techniques',\n    markings: 'Inscriptions & Markings',\n    features: 'Features',\n    reference: 'Reference'\n  }\n\n  return recordLabels[key]\n}\n\nfunction isEmpty(records) {\n  if (!records.length) {\n    return true\n  }\n\n  return records.filter(record => record.value).length === 0\n}\n\nfunction decodeRecords(values) {\n  let parsed = {}\n  try {\n    parsed = JSON.parse(values)\n  } catch (e) {}\n\n  return Object.keys(parsed).reduce(\n    (decoded, key) =>\n      decoded.concat({\n        label: getArtRecordLabel(key),\n        value: parsed[key]\n      }),\n    []\n  )\n}\n\nfunction ArtRecordItem({ value, label }) {\n  if (!value) return null\n\n  return (\n    <RecordsItem>\n      <RecordsContent>\n        <RecordsKey>{label}</RecordsKey>\n        <RecordsValue>\n          <div>{value}</div>\n        </RecordsValue>\n      </RecordsContent>\n    </RecordsItem>\n  )\n}\n\nexport default function ArtRecords({ domain, query }) {\n  if (!isArt(domain.name)) return null\n\n  return (\n    <Query query={query} variables={{ name: domain.name, key: 'artrecords' }}>\n      {({ loading, data }) => {\n        if (loading) return <Loader center />\n\n        const { getText: encodedArtRecords } = data\n\n        if (!encodedArtRecords) return null\n\n        const records = decodeRecords(encodedArtRecords)\n\n        if (isEmpty(records)) return null\n\n        return (\n          <Records>\n            <RecordsHeader>\n              <RecordsTitle>Art records</RecordsTitle>\n            </RecordsHeader>\n\n            {records.map((r, i) => (\n              <ArtRecordItem key={i} value={r.value} label={r.label} />\n            ))}\n          </Records>\n        )\n      }}\n    </Query>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from '@emotion/styled/macro'\nimport mq from 'mediaQuery'\n\nimport Button from 'components/Forms/Button'\n\nconst ModalBackground = styled('div')`\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  color: #2b2b2b;\n  z-index: 100000000;\n  left: 0;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Content = styled('div')`\n  background: white;\n  padding: 15px 20px;\n  width: 90%;\n  ${mq.medium`\n    width: 50%\n  `}\n`\n\nconst ErrorTitle = styled('h2')`\n  color: red;\n  font-weight: 300;\n  font-size: 22px;\n  margin-top: 0;\n`\n\nconst ErrorMessage = styled('pre')`\n  white-space: normal;\n`\n\nconst WarningIcon = (\n  <svg width=\"25\" height=\"22\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M12.165 6.51c.658-.16 1.344.16 1.618.77a1.8 1.8 0 01.137.664 49.926 49.926 0 01-.137 2.02c-.055 1.036-.137 2.099-.192 3.135-.027.345-.027.372-.027.717a1.021 1.021 0 01-1.042.984c-.576 0-1.015-.399-1.042-.957-.082-1.62-.192-2.976-.274-4.597l-.083-1.302a1.41 1.41 0 011.042-1.434m.357 12.222c-.768 0-1.399-.611-1.399-1.355s.631-1.355 1.399-1.355c.767 0 1.398.61 1.37 1.381.028.718-.63 1.329-1.37 1.329M3.749 22H21.24c2.879 0 4.688-3.056 3.263-5.447l-8.774-14.72c-1.425-2.444-5.044-2.444-6.47 0L.486 16.553C-.912 18.971.87 22 3.749 22\"\n      fill=\"#DC2E2E\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n)\n\nconst ButtonContainer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`\nexport default function ErrorModal({ title, error, close }) {\n  const modalRoot = document.getElementById('modal-root')\n  return ReactDOM.createPortal(\n    <ModalBackground onClick={close}>\n      <Content onClick={event => event.stopPropagation()}>\n        <ErrorTitle>\n          {WarningIcon} &nbsp;\n          {title}\n        </ErrorTitle>\n        <ErrorMessage>{JSON.stringify(error)}</ErrorMessage>\n        <ButtonContainer>\n          <Button type=\"primary\" onClick={close}>\n            Close\n          </Button>\n        </ButtonContainer>\n      </Content>\n    </ModalBackground>,\n    modalRoot\n  )\n}\n","import ErrorModal from './ErrorModal'\nexport default ErrorModal\n","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useMutation } from '@apollo/client'\nimport { useEditable } from 'components/hooks'\nimport { MIGRATE_RESOLVER } from 'graphql/mutations'\nimport { useTranslation } from 'react-i18next'\nimport { DetailsItem, DetailsKey, DetailsValue } from '../DetailsItem'\nimport PendingTx from '../../PendingTx'\nimport Button from '../../Forms/Button'\nimport mq from 'mediaQuery'\nimport ErrorModal from 'components/ErrorModal'\nimport CopyToClipBoard from '../../CopyToClipboard/'\n\nconst MigrateItem = styled(DetailsItem)`\n  position: relative;\n`\n\nconst MigrateKey = styled(DetailsKey)`\n  color: #2b2b2b;\n`\n\nconst MigrateValue = styled(DetailsValue)`\n  color: #f5a623;\n`\n\nconst MigrateButton = styled(Button)`\n  margin-left: 10px;\n`\n\nconst MigrateAction = styled('div')`\n  margin-left: 0;\n  ${mq.small`\n    margin-left: auto\n  `}\n`\n\nconst SVG = styled('svg')`\n  margin-right: 10px;\n`\n\nexport default function MigrateResolver({ value, name, refetch, isOwner }) {\n  const { t } = useTranslation()\n  const [isErrorModalOpen, setIsErrorModalOpen] = useState(false)\n  const { state: state1, actions: actions1 } = useEditable()\n  const { state: state2, actions: actions2 } = useEditable()\n\n  const { txHash: txHash1, pending: pending1, confirmed: confirmed1 } = state1\n  const { txHash: txHash2, pending: pending2, confirmed: confirmed2 } = state2\n\n  const { startPending: startPending1, setConfirmed: setConfirmed1 } = actions1\n\n  const { startPending: startPending2, setConfirmed: setConfirmed2 } = actions2\n  const [migrateResolver, { error: mutationError }] = useMutation(\n    MIGRATE_RESOLVER,\n    {\n      variables: { name },\n      onCompleted: data => {\n        if (Object.values(data)[0].length > 1) {\n          startPending1(Object.values(data)[0][0])\n          startPending2(Object.values(data)[0][1])\n        } else {\n          startPending1(Object.values(data)[0][0])\n          startPending2('notatx')\n        }\n      }\n    }\n  )\n\n  useEffect(() => {\n    if (mutationError) setIsErrorModalOpen(true)\n  }, [mutationError])\n\n  return (\n    <MigrateItem>\n      {isErrorModalOpen && (\n        <ErrorModal\n          error={mutationError}\n          title={t('singleName.resolver.error')}\n          close={() => setIsErrorModalOpen(false)}\n        />\n      )}\n      <MigrateKey>\n        <SVG width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M8.739 5.82c-.039.746-.096 1.512-.134 2.258-.02.25-.02.268-.02.517a.723.723 0 01-.727.708.707.707 0 01-.727-.689c-.058-1.167-.134-2.143-.192-3.311l-.057-.938c-.02-.478.268-.9.727-1.034a.972.972 0 011.13.556c.057.153.095.306.095.478-.019.479-.057.976-.095 1.455m-.88 6.316a.98.98 0 01-.977-.976.98.98 0 01.976-.976c.536 0 .976.44.957.995.02.517-.44.957-.957.957M7.93 0a7.93 7.93 0 100 15.86A7.93 7.93 0 007.93 0\"\n            fill=\"#F5A623\"\n            fillRule=\"evenodd\"\n          />\n        </SVG>\n        {t('c.Resolver')}\n      </MigrateKey>\n      <MigrateValue editable data-testid={'migrate-value'}>\n        {value}\n        <CopyToClipBoard iconColour=\"#f5a623\" />\n      </MigrateValue>\n      <MigrateAction>\n        {pending1 &&\n        pending2 &&\n        (txHash1 && txHash2) &&\n        (!confirmed1 || !confirmed2) ? (\n          <PendingTx\n            txHashes={txHash2 === 'notatx' ? undefined : [txHash1, txHash2]}\n            txHash={txHash2 === 'notatx' ? txHash1 : undefined}\n            onConfirmed={() => {\n              setConfirmed1()\n              setConfirmed2()\n              refetch()\n            }}\n          />\n        ) : (\n          <MigrateButton\n            onClick={isOwner ? migrateResolver : () => {}}\n            type={isOwner ? 'primary' : 'disabled'}\n          >\n            {t('c.migrate')}\n          </MigrateButton>\n        )}\n      </MigrateAction>\n    </MigrateItem>\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useQuery } from '@apollo/client'\nimport { useTranslation } from 'react-i18next'\nimport Records from './Records'\n\nimport { GET_RESOLVER_MIGRATION_INFO, GET_TEXT } from 'graphql/queries'\nimport { SET_RESOLVER } from 'graphql/mutations'\nimport ArtRecords from './ArtRecords'\n\nimport ResolverMigration from './ResolverMigration'\nimport DetailsItemEditable from '../DetailsItemEditable'\n\nconst MigrationWarningContainer = styled('div')`\n  margin-bottom: 20px;\n`\n\nfunction MigrationWarning() {\n  const { t } = useTranslation()\n  return (\n    <MigrationWarningContainer>\n      {t('singleName.resolver.warning')}\n    </MigrationWarningContainer>\n  )\n}\n\nconst ManualMigrationMessage = styled('div')`\n  margin-bottom: 20px;\n`\n\nconst ManualMigration = styled('div')`\n  border-top: 1px dashed #d3d3d3;\n  padding-top: 20px;\n`\n\nconst ResolverWrapper = styled('div')`\n  ${p =>\n    p.needsToBeMigrated\n      ? `\n    color: #ADBBCD;\n    font-size: 14px;\n    background: hsla(37, 91%, 55%, 0.1);\n    padding: 20px;\n    margin-bottom: 20px;\n  `\n      : 'background: none;'}\n`\n\nfunction hasAResolver(resolver) {\n  return parseInt(resolver, 16) !== 0\n}\n\nexport default function ResolverAndRecords({\n  domain,\n  isOwner,\n  refetch,\n  account,\n  isMigratedToNewRegistry\n}) {\n  const { t } = useTranslation()\n  const hasResolver = hasAResolver(domain.resolver)\n  let isOldPublicResolver = false\n  let isDeprecatedResolver = false\n  let areRecordsMigrated = true\n  let isPublicResolverReady = false\n\n  const { data, loading } = useQuery(GET_RESOLVER_MIGRATION_INFO, {\n    variables: {\n      name: domain.name,\n      resolver: domain.resolver\n    },\n    skip: !hasResolver\n  })\n\n  if (data && data.getResolverMigrationInfo) {\n    isOldPublicResolver = data.getResolverMigrationInfo.isOldPublicResolver\n    isDeprecatedResolver = data.getResolverMigrationInfo.isDeprecatedResolver\n    areRecordsMigrated = data.getResolverMigrationInfo.areRecordsMigrated\n    isPublicResolverReady = data.getResolverMigrationInfo.isPublicResolverReady\n  }\n\n  const needsToBeMigrated =\n    !loading &&\n    isMigratedToNewRegistry &&\n    isPublicResolverReady &&\n    (isOldPublicResolver || isDeprecatedResolver)\n  return (\n    <>\n      <ResolverWrapper needsToBeMigrated={needsToBeMigrated}>\n        {needsToBeMigrated ? (\n          <>\n            <ResolverMigration\n              value={domain.resolver}\n              name={domain.name}\n              refetch={refetch}\n              isOwner={isOwner}\n            />\n          </>\n        ) : (\n          <DetailsItemEditable\n            keyName=\"Resolver\"\n            type=\"address\"\n            value={domain.resolver}\n            canEdit={isOwner && isMigratedToNewRegistry}\n            domain={domain}\n            editButton={t('c.set')}\n            mutationButton={t('c.save')}\n            mutation={SET_RESOLVER}\n            refetch={refetch}\n            account={account}\n            needsToBeMigrated={needsToBeMigrated}\n            copyToClipboard={true}\n          />\n        )}\n        {needsToBeMigrated && (\n          <>\n            <MigrationWarning />\n            <ManualMigration>\n              <ManualMigrationMessage>\n                {t('singleName.resolver.message')}\n              </ManualMigrationMessage>\n              <DetailsItemEditable\n                showLabel={false}\n                keyName=\"Resolver\"\n                type=\"address\"\n                value={domain.resolver}\n                canEdit={isOwner && isMigratedToNewRegistry}\n                domain={domain}\n                editButton={t('c.set')}\n                editButtonType=\"hollow-primary\"\n                mutationButton={t('c.save')}\n                backgroundStyle=\"warning\"\n                mutation={SET_RESOLVER}\n                refetch={refetch}\n                account={account}\n                needsToBeMigrated={needsToBeMigrated}\n              />\n            </ManualMigration>\n          </>\n        )}\n      </ResolverWrapper>\n\n      {hasResolver && Object.values(domain).filter(x => x).length && (\n        <Records\n          domain={domain}\n          refetch={refetch}\n          account={account}\n          isOwner={isOwner}\n          hasResolver={hasResolver}\n          needsToBeMigrated={needsToBeMigrated}\n          isOldPublicResolver={isOldPublicResolver}\n          isDeprecatedResolver={isDeprecatedResolver}\n          areRecordsMigrated={areRecordsMigrated}\n        />\n      )}\n\n      {hasResolver && <ArtRecords domain={domain} query={GET_TEXT} />}\n    </>\n  )\n}\n","import ResolverAndRecords from './ResolverAndRecords'\n\nexport default ResolverAndRecords\n","import React from 'react'\nimport { useTranslation, Trans } from 'react-i18next'\nimport styled from '@emotion/styled/macro'\nimport { REGISTER_TESTDOMAIN } from '../../graphql/mutations'\nimport { useMutation } from '@apollo/client'\nimport Button from '../Forms/Button'\nimport { useEditable } from '../hooks'\nimport PendingTx from '../PendingTx'\nimport mq from 'mediaQuery'\n\nconst NameClaimTestDomainContainer = styled('div')`\n  padding: 20px 0px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  ${mq.medium`\n    flex-direction: row-reverse;\n  `};\n  border-top: 1px dashed #d3d3d3;\n`\nconst ClaimButton = styled(Button)`\n  max-width: 8em;\n`\n\nconst Note = styled('p')`\n  color: #c7d3e3;\n  size: 14pt;\n`\n\nconst Tld = styled('pre')`\n  display: inline;\n  background-color: #eee;\n  padding: 3px;\n`\n\nfunction NameClaimTestDomain({ domain, refetch }) {\n  const { t } = useTranslation()\n  const { state, actions } = useEditable()\n  const { txHash, pending, confirmed } = state\n\n  const { startPending, setConfirmed } = actions\n  const [mutation] = useMutation(REGISTER_TESTDOMAIN, {\n    onCompleted: data => {\n      startPending(Object.values(data)[0])\n      refetch()\n    }\n  })\n\n  return (\n    <NameClaimTestDomainContainer>\n      {pending && !confirmed ? (\n        <PendingTx\n          txHash={txHash}\n          onConfirmed={() => {\n            setConfirmed()\n            refetch()\n          }}\n        />\n      ) : (\n        <ClaimButton\n          data-testid=\"claim-test\"\n          onClick={() => {\n            mutation({\n              variables: {\n                label: domain.label\n              }\n            })\n          }}\n        >\n          {t('c.claim')}\n        </ClaimButton>\n      )}\n      <Note>\n        <Trans i18nKey=\"singleName.test.note\">\n          Note: <Tld>.test</Tld> domain allows anyone to claim an unused name\n          for test purposes, which expires after 28 days\n        </Trans>\n      </Note>\n    </NameClaimTestDomainContainer>\n  )\n}\n\nexport default NameClaimTestDomain\n","import React from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport styled from '@emotion/styled'\nimport mq from '../../mediaQuery'\n\nimport SetupName from '../SetupName/SetupName'\nimport RegistryMigration from './RegistryMigration'\nimport { DetailsItem, DetailsKey, DetailsValue } from './DetailsItem'\nimport { ReactComponent as ExternalLinkIcon } from '../Icons/externalLink.svg'\nimport DetailsItemEditable from './DetailsItemEditable'\nimport {\n  RECLAIM,\n  RENEW,\n  SET_OWNER,\n  SET_REGISTRANT,\n  SET_SUBNODE_OWNER\n} from '../../graphql/mutations'\nimport { SingleNameBlockies } from '../Blockies'\nimport You from '../Icons/You'\nimport SubmitProof from './SubmitProof'\nimport Tooltip from '../Tooltip/Tooltip'\nimport { HR } from '../Typography/Basic'\nimport { formatDate } from '../../utils/dates'\nimport ResolverAndRecords from './ResolverAndRecords'\nimport NameClaimTestDomain from './NameClaimTestDomain'\nimport DefaultLoader from '../Loader'\nimport DefaultButton from '../Forms/Button'\nimport DefaultAddressLink from '../Links/AddressLink'\n\nimport { ReactComponent as DefaultOrangeExclamation } from '../Icons/OrangeExclamation.svg'\n\nconst Details = styled('section')`\n  padding: 20px;\n  transition: 0.4s;\n  ${mq.small`\n    padding: 40px;\n  `}\n`\n\nconst Loader = styled(DefaultLoader)`\n  width: 30%;\n  margin: auto;\n`\n\nconst Button = styled(DefaultButton)`\n  position: absolute;\n  width: 130px;\n  background-colore: white;\n`\n\nconst ButtonContainer = styled('div')`\n  margin-top: 20px;\n  height: 50px;\n  ${mq.small`\n    height: 50px;\n    width: 50px;\n    position: absolute;\n    right: 128px;\n    -webkit-transform: translate(0, -65%);\n    -ms-transform: translate(0, -65%);\n    transform: translate(0, -65%);\n  `}\n`\n\nconst ExpirationDetailsValue = styled(DetailsValue)`\n  color: ${p => (p.isExpired ? 'red' : null)};\n`\n\nconst AddressLink = styled(DefaultAddressLink)`\n  display: flex;\n  align-items: center;\n`\n\nconst Explainer = styled('div')`\n  background: #f0f6fa;\n  color: #adbbcd;\n  display: flex;\n  padding: 1em 0;\n  margin-left: 0px;\n  ${mq.small`\n    margin-left: 180px;\n  `}\n\n  margin-bottom: 45px;\n  padding-left: 24px;\n`\n\nconst ErrorExplainer = styled(Explainer)`\n  background: #fef7e9;\n`\n\nconst OutOfSyncExplainer = styled('div')`\n  margin-top: 20px;\n  background: #fef7e9;\n  display: flex;\n`\n\nconst OutOfSyncExplainerContainer = styled('div')`\n  margin-top: 15px;\n`\n\nconst EtherScanLinkContainer = styled('span')`\n  display: inline-block;\n  transform: translate(25%, 20%);\n`\n\nconst LinkToLearnMore = styled('a')`\n  margin-right: ${props => (props.outOfSync ? '' : '')};\n  font-size: 14px;\n  letter-spacing: 0.58px;\n  text-align: center;\n  margin-left: auto;\n  min-width: 130px;\n`\n\nconst OrangeExclamation = styled(DefaultOrangeExclamation)`\n  margin-right: 5px;\n  margin-top: 6px;\n  width: 20px;\n  height: 20px;\n`\n\nconst DNSOwnerError = styled('span')`\n  color: #f5a623;\n`\n\nconst OwnerFields = styled('div')`\n  background: ${props => (props.outOfSync ? '#fef7e9' : '')};\n  padding: ${props => (props.outOfSync ? '1.5em' : '0')};\n  margin-bottom: ${props => (props.outOfSync ? '1.5em' : '0')};\n`\n\nconst DomainOwnerAddress = styled('span')`\n  color: ${props => (props.outOfSync ? '#CACACA' : '')};\n`\n\nconst GracePeriodWarningContainer = styled('div')`\n  font-family: 'Overpass';\n  background: ${p => (p.isExpired ? '#ff926f' : '#fef7e9')};\n  padding: 10px 20px;\n  margin: 5px 0px;\n`\n\nconst GracePeriodText = styled('span')`\n  color: ${p => (p.isExpired ? 'white' : '#cacaca')};\n  margin-left: 0.5em;\n`\n\nconst GracePeriodDate = styled('span')`\n  font-weight: bold;\n`\n\nconst Expiration = styled('span')`\n  color: ${p => (p.isExpired ? 'white' : '#f5a623')};\n  font-weight: bold;\n`\n\nconst GracePeriodWarning = ({ date, expiryTime }) => {\n  let { t } = useTranslation()\n  let isExpired = new Date() > new Date(expiryTime)\n  return (\n    <GracePeriodWarningContainer isExpired={isExpired}>\n      <Expiration isExpired={isExpired}>\n        {isExpired\n          ? t('singleName.expiry.expired')\n          : t('singleName.expiry.expiringSoon')}\n      </Expiration>\n      <GracePeriodText isExpired={isExpired}>\n        {t('singleName.expiry.gracePeriodEnds')}{' '}\n        <GracePeriodDate>{formatDate(date)}</GracePeriodDate>\n      </GracePeriodText>\n    </GracePeriodWarningContainer>\n  )\n}\n\nfunction canClaim(domain) {\n  if (!domain.name?.match(/\\.test$/)) return false\n  return parseInt(domain.owner) === 0 || domain.expiryTime < new Date()\n}\n\nfunction DetailsContainer({\n  isMigratedToNewRegistry,\n  isDeedOwner,\n  isRegistrant,\n  showExplainer,\n  canSubmit,\n  outOfSync,\n  loading,\n  setLoading,\n  isOwnerOfParent,\n  isOwner,\n  refetch,\n  domain,\n  dnssecmode,\n  account,\n  loadingIsMigrated,\n  refetchIsMigrated,\n  isParentMigratedToNewRegistry,\n  loadingIsParentMigrated\n}) {\n  const { t } = useTranslation()\n  const isExpired = domain.expiryTime < new Date()\n  const domainOwner =\n    domain.available || domain.owner === '0x0' ? null : domain.owner\n  const registrant =\n    domain.available || domain.registrant === '0x0' ? null : domain.registrant\n\n  const domainParent =\n    domain.name === '[root]' ? null : domain.parent ? domain.parent : '[root]'\n\n  const is2ld = domain.name?.split('.').length === 2\n  const showUnclaimableWarning =\n    is2ld &&\n    parseInt(domain.owner) === 0 &&\n    domain.parent !== 'evmos' && // changed to evmos\n    !domain.isDNSRegistrar\n\n  return (\n    <Details data-testid=\"name-details\">\n      {isOwner && <SetupName initialState={showExplainer} />}\n      {parseInt(domain.owner, 16) !== 0 &&\n        !loadingIsMigrated &&\n        !isMigratedToNewRegistry && (\n          <RegistryMigration\n            account={account}\n            domain={domain}\n            dnssecmode={dnssecmode}\n            refetchIsMigrated={refetchIsMigrated}\n            isParentMigratedToNewRegistry={isParentMigratedToNewRegistry}\n            loadingIsParentMigrated={loadingIsParentMigrated}\n          />\n        )}\n      {domainParent ? (\n        <DetailsItem uneditable>\n          <DetailsKey>{t('c.parent')}</DetailsKey>\n          <DetailsValue>\n            <Link to={`/name/${domainParent}`} aria-label={t('c.parent')}>\n              {domainParent}\n            </Link>\n          </DetailsValue>\n        </DetailsItem>\n      ) : (\n        ''\n      )}\n      {showUnclaimableWarning && (\n        <GracePeriodWarningContainer>\n          <DetailsItem>\n            {t('c.cannotclaimDns', { name: domainParent })}\n            <LinkToLearnMore\n              href=\"https://docs.ens.domains/dns-registrar-guide\"\n              target=\"_blank\"\n            >\n              {t('c.learnmore')}{' '}\n              <EtherScanLinkContainer>\n                <ExternalLinkIcon />\n              </EtherScanLinkContainer>\n            </LinkToLearnMore>\n          </DetailsItem>\n        </GracePeriodWarningContainer>\n      )}\n      <OwnerFields outOfSync={outOfSync}>\n        {domain.parent === 'eth' && domain.isNewRegistrar ? (\n          <>\n            <DetailsItemEditable\n              domain={domain}\n              keyName=\"registrant\"\n              value={registrant}\n              canEdit={isRegistrant && !isExpired}\n              isExpiredRegistrant={isRegistrant && isExpired}\n              type=\"address\"\n              editButton={t('c.transfer')}\n              mutationButton={t('c.transfer')}\n              mutation={SET_REGISTRANT}\n              refetch={refetch}\n              confirm={true}\n              copyToClipboard={true}\n            />\n            <DetailsItemEditable\n              domain={domain}\n              keyName=\"Controller\"\n              value={domainOwner}\n              canEdit={isRegistrant || (isOwner && isMigratedToNewRegistry)}\n              deedOwner={domain.deedOwner}\n              isDeedOwner={isDeedOwner}\n              type=\"address\"\n              editButton={isRegistrant ? t('c.set') : t('c.transfer')}\n              mutationButton={isRegistrant ? t('c.set') : t('c.transfer')}\n              mutation={isRegistrant ? RECLAIM : SET_OWNER}\n              refetch={refetch}\n              confirm={true}\n              copyToClipboard={true}\n            />\n          </>\n        ) : domain.parent === 'evmos' && !domain.isNewRegistrar ? ( // changed to evmos\n          <>\n            <DetailsItem uneditable>\n              <DetailsKey>{t('c.registrant')}</DetailsKey>\n              <DetailsValue>\n                <AddressLink\n                  address={domain.deedOwner}\n                  arialLabel={t('c.registrant')}\n                >\n                  <SingleNameBlockies\n                    address={domain.deedOwner}\n                    imageSize={24}\n                  />\n                  {domain.deedOwner}\n                </AddressLink>\n              </DetailsValue>\n            </DetailsItem>\n            <DetailsItemEditable\n              domain={domain}\n              keyName=\"Controller\"\n              value={domain.owner}\n              canEdit={isRegistrant || (isOwner && isMigratedToNewRegistry)}\n              deedOwner={domain.deedOwner}\n              isDeedOwner={isDeedOwner}\n              type=\"address\"\n              editButton={isRegistrant ? t('c.set') : t('c.transfer')}\n              mutationButton={isRegistrant ? t('c.set') : t('c.transfer')}\n              mutation={isRegistrant ? RECLAIM : SET_OWNER}\n              refetch={refetch}\n              confirm={true}\n              copyToClipboard={true}\n            />\n          </>\n        ) : domain.isDNSRegistrar ? (\n          <DetailsItem uneditable>\n            <DetailsKey>\n              {t('c.Controller')} {isOwner ? <You /> : ''}\n            </DetailsKey>\n            <DetailsValue>\n              <AddressLink address={domain.owner} ariaLabel={t('c.Controller')}>\n                {outOfSync ? (\n                  <SingleNameBlockies\n                    address={domain.owner}\n                    imageSize={24}\n                    color={'#E1E1E1'}\n                    bgcolor={'#FFFFFF'}\n                    spotcolor={'#CFCFCF'}\n                  />\n                ) : (\n                  <SingleNameBlockies address={domain.owner} imageSize={24} />\n                )}\n                <DomainOwnerAddress outOfSync={outOfSync}>\n                  {domain.owner}\n                </DomainOwnerAddress>\n              </AddressLink>\n            </DetailsValue>\n            <ButtonContainer outOfSync={outOfSync}>\n              {canSubmit ? (\n                <SubmitProof\n                  name={domain.name}\n                  parentOwner={domain.parentOwner}\n                  refetch={refetch}\n                  actionText={t('c.sync')}\n                />\n              ) : (\n                <Tooltip\n                  text={t(\n                    'singleName.tooltips.detailsItem.ControllerAndDnsAlreadySync'\n                  )}\n                  position=\"left\"\n                  border={true}\n                  warning={true}\n                  offset={{ left: -30, top: 10 }}\n                >\n                  {({ tooltipElement, showTooltip, hideTooltip }) => {\n                    return (\n                      <Button\n                        onMouseOver={() => {\n                          showTooltip()\n                        }}\n                        onMouseLeave={() => {\n                          hideTooltip()\n                        }}\n                        type=\"disabled\"\n                      >\n                        {t('c.sync')}\n                        {tooltipElement}\n                      </Button>\n                    )\n                  }}\n                </Tooltip>\n              )}\n            </ButtonContainer>\n          </DetailsItem>\n        ) : (\n          // Either subdomain, or .test\n          <DetailsItemEditable\n            domain={domain}\n            keyName=\"Controller\"\n            value={domain.owner}\n            canEdit={(isOwner || isOwnerOfParent) && isMigratedToNewRegistry}\n            deedOwner={domain.deedOwner}\n            isDeedOwner={isDeedOwner}\n            outOfSync={outOfSync}\n            type=\"address\"\n            editButton={isOwnerOfParent ? t('c.set') : t('c.transfer')}\n            mutationButton={isOwnerOfParent ? t('c.set') : t('c.transfer')}\n            mutation={isOwnerOfParent ? SET_SUBNODE_OWNER : SET_OWNER}\n            refetch={refetch}\n            confirm={true}\n            copyToClipboard={true}\n          />\n        )}\n        {/* To be replaced with a logic a function to detect dnsregistrar */}\n        {domain.isDNSRegistrar ? (\n          <>\n            <DetailsItem uneditable>\n              <DetailsKey>{t('dns.dnsowner')}</DetailsKey>\n              <DetailsValue>\n                {dnssecmode.displayError ? (\n                  <DNSOwnerError>{dnssecmode.title}</DNSOwnerError>\n                ) : (\n                  <AddressLink\n                    address={domain.dnsOwner}\n                    ariaLabel={t('dns.dnsowner')}\n                  >\n                    <SingleNameBlockies\n                      address={domain.dnsOwner}\n                      imageSize={24}\n                    />\n                    {domain.dnsOwner}\n                  </AddressLink>\n                )}\n              </DetailsValue>\n              <ButtonContainer outOfSync={outOfSync}>\n                {loading ? (\n                  <Button>\n                    <Loader />\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() => {\n                      setLoading(true)\n                      refetch()\n                        .then(dd => {\n                          setLoading(false)\n                        })\n                        .catch(err => {\n                          console.log('failed to refetch', err)\n                        })\n                    }}\n                  >\n                    {t('c.refresh')}{' '}\n                  </Button>\n                )}\n              </ButtonContainer>\n            </DetailsItem>\n            {dnssecmode.displayError ? (\n              <ErrorExplainer>\n                <OrangeExclamation />\n                {domain.stateError\n                  ? domain.stateError\n                  : t('singleName.dns.messages.error')}\n                <LinkToLearnMore\n                  href=\"https://docs.ens.domains/dns-registrar-guide\"\n                  target=\"_blank\"\n                >\n                  {t('c.learnmore')}{' '}\n                  <EtherScanLinkContainer>\n                    <ExternalLinkIcon />\n                  </EtherScanLinkContainer>\n                </LinkToLearnMore>\n              </ErrorExplainer>\n            ) : outOfSync ? (\n              <OutOfSyncExplainerContainer>\n                <HR />\n                <OutOfSyncExplainer>\n                  <OrangeExclamation />\n                  <Trans i18nKey={'singleName.dns.messages.outOfSync'}>\n                    {dnssecmode.explainer}\n                  </Trans>\n                  <LinkToLearnMore\n                    href=\"https://docs.ens.domains/dns-registrar-guide\"\n                    target=\"_blank\"\n                    outOfSync={outOfSync}\n                  >\n                    {t('c.learnmore')}{' '}\n                    <EtherScanLinkContainer>\n                      <ExternalLinkIcon />\n                    </EtherScanLinkContainer>\n                  </LinkToLearnMore>\n                </OutOfSyncExplainer>\n              </OutOfSyncExplainerContainer>\n            ) : (\n              <Explainer>\n                <Trans i18nKey={'singleName.dns.messages.readyToRegister'}>\n                  {dnssecmode.explainer}\n                </Trans>\n                <LinkToLearnMore\n                  href=\"https://docs.ens.domains/dns-registrar-guide\"\n                  target=\"_blank\"\n                >\n                  {t('c.learnmore')}{' '}\n                  <EtherScanLinkContainer>\n                    <ExternalLinkIcon />\n                  </EtherScanLinkContainer>\n                </LinkToLearnMore>\n              </Explainer>\n            )}\n          </>\n        ) : (\n          ''\n        )}\n\n        {domain.registrationDate ? (\n          <DetailsItem uneditable>\n            <DetailsKey>{t('c.registrationDate')}</DetailsKey>\n            <DetailsValue>{formatDate(domain.registrationDate)}</DetailsValue>\n          </DetailsItem>\n        ) : (\n          ''\n        )}\n        {!domain.available ? (\n          domain.isNewRegistrar || domain.gracePeriodEndDate ? (\n            <>\n              <DetailsItemEditable\n                domain={domain}\n                keyName=\"Expiration Date\"\n                value={domain.expiryTime}\n                canEdit={parseInt(account, 16) !== 0}\n                type=\"date\"\n                editButton={t('c.renew')}\n                mutationButton={t('c.renew')}\n                mutation={RENEW}\n                refetch={refetch}\n                confirm={true}\n              />\n              {domain.gracePeriodEndDate ? (\n                <GracePeriodWarning\n                  expiryTime={domain.expiryTime}\n                  date={domain.gracePeriodEndDate}\n                />\n              ) : (\n                ''\n              )}\n            </>\n          ) : domain.expiryTime ? (\n            <DetailsItem uneditable>\n              <DetailsKey>{t(\"c['Expiration Date']\")}</DetailsKey>\n              <ExpirationDetailsValue isExpired={isExpired}>\n                {formatDate(domain.expiryTime)}\n              </ExpirationDetailsValue>\n            </DetailsItem>\n          ) : (\n            ''\n          )\n        ) : (\n          ''\n        )}\n      </OwnerFields>\n      <HR />\n      <ResolverAndRecords\n        domain={domain}\n        isOwner={isOwner}\n        refetch={refetch}\n        account={account}\n        isMigratedToNewRegistry={isMigratedToNewRegistry}\n      />\n      {canClaim(domain) ? (\n        <NameClaimTestDomain domain={domain} refetch={refetch} />\n      ) : null}\n    </Details>\n  )\n}\n\nexport default DetailsContainer\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { Route, Redirect } from 'react-router-dom'\n\nimport { IS_MIGRATED } from '../../graphql/queries'\n\nimport { isEmptyAddress } from '../../utils/records'\n\nimport NameRegister from './NameRegister'\nimport SubDomains from './SubDomains'\nimport dnssecmodes from '../../api/dnssecmodes'\nimport DetailsContainer from './DetailsContainer'\n\nfunction NameDetails({\n  domain,\n  isOwner,\n  isOwnerOfParent,\n  refetch,\n  account,\n  registrationOpen,\n  tab,\n  pathname\n}) {\n  const [loading, setLoading] = useState(undefined)\n  const {\n    data: { isMigrated } = {},\n    loading: loadingIsMigrated,\n    refetch: refetchIsMigrated\n  } = useQuery(IS_MIGRATED, {\n    variables: {\n      name: domain.name\n    }\n  })\n\n  const {\n    data: { isMigrated: isParentMigrated } = {},\n    loading: loadingIsParentMigrated\n  } = useQuery(IS_MIGRATED, {\n    variables: {\n      name: domain.parent\n    }\n  })\n  const isLoggedIn = parseInt(account) !== 0\n  const isMigratedToNewRegistry = !loadingIsMigrated && isMigrated\n  const isParentMigratedToNewRegistry = isParentMigrated\n\n  const isDeedOwner = domain.deedOwner === account\n  const isRegistrant = !domain.available && domain.registrant === account\n  let dnssecmode, canSubmit\n  if ([5, 6].includes(domain.state) && !isMigrated) {\n    dnssecmode = dnssecmodes[7]\n    canSubmit =\n      isLoggedIn && domain.isDNSRegistrar && dnssecmode.state === 'SUBMIT_PROOF'\n  } else {\n    dnssecmode = dnssecmodes[domain.state]\n    canSubmit =\n      isLoggedIn &&\n      domain.isDNSRegistrar &&\n      dnssecmode.state === 'SUBMIT_PROOF' && // This is for not allowing the case user does not have record rather than having empty address record.\n      domain.owner.toLowerCase() !== domain.dnsOwner.toLowerCase()\n  }\n  const showExplainer = !parseInt(domain.resolver)\n  const outOfSync = dnssecmode && dnssecmode.outOfSync\n  const isAnAbsolutePath = pathname.split('/').length > 3\n\n  if (domain.parent === 'evmos' && tab === 'register' && !isAnAbsolutePath) {\n    // changed to evmos\n    return <Redirect to={`${pathname}/register`} />\n  } else if (\n    domain.parent === 'evmos' && // changed to evmos\n    tab === 'details' &&\n    !isAnAbsolutePath\n  ) {\n    return <Redirect to={`${pathname}/details`} />\n  } else if (domain.parent !== 'evmos' && !isAnAbsolutePath) {\n    // changed to evmos\n    //subdomain or dns\n    return <Redirect to={`${pathname}/subdomains`} />\n  }\n\n  return (\n    <>\n      <Route\n        path=\"/name/:name/details\"\n        render={() => {\n          return (\n            <DetailsContainer\n              loadingIsMigrated={loadingIsMigrated}\n              isMigratedToNewRegistry={isMigratedToNewRegistry}\n              isDeedOwner={isDeedOwner}\n              isRegistrant={isRegistrant}\n              showExplainer={showExplainer}\n              canSubmit={canSubmit}\n              outOfSync={outOfSync}\n              loading={loading}\n              setLoading={setLoading}\n              isOwnerOfParent={isOwnerOfParent}\n              isParentMigratedToNewRegistry={isParentMigratedToNewRegistry}\n              loadingIsParentMigrated={loadingIsParentMigrated}\n              isOwner={isOwner}\n              refetch={refetch}\n              domain={domain}\n              dnssecmode={dnssecmode}\n              account={account}\n              refetchIsMigrated={refetchIsMigrated}\n            />\n          )\n        }}\n      />\n\n      <Route\n        exact\n        path=\"/name/:name/subdomains\"\n        render={() => (\n          <SubDomains\n            domain={domain}\n            isOwner={isOwner}\n            data-testid=\"subdomains\"\n            isMigratedToNewRegistry={isMigratedToNewRegistry}\n            loadingIsMigrated={loadingIsMigrated}\n            isParentMigratedToNewRegistry={isParentMigratedToNewRegistry}\n            loadingIsParentMigrated={loadingIsParentMigrated}\n          />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/name/:name/register\"\n        render={() => (\n          <NameRegister\n            registrationOpen={registrationOpen}\n            domain={domain}\n            refetch={refetch}\n            refetchIsMigrated={refetchIsMigrated}\n            readOnly={isEmptyAddress(account)}\n          />\n        )}\n      />\n    </>\n  )\n}\n\nexport default NameDetails\n","import registerReducerFactory from '../registerReducerFactory'\n\nexport const registerMachine = {\n  initialState: 'ENABLE_DNSSEC',\n  states: {\n    ENABLE_DNSSEC: {\n      on: {\n        NEXT: 'ADD_TEXT'\n      }\n    },\n    ADD_TEXT: {\n      on: {\n        NEXT: 'SUBMIT_PROOF'\n      }\n    },\n    SUBMIT_PROOF: {\n      on: {\n        NEXT: 'SUBMIT_SENT'\n      }\n    },\n    SUBMIT_SENT: {\n      on: {\n        NEXT: 'SUBMIT_CONFIRMED'\n      }\n    },\n    SUBMIT_CONFIRMED: {\n      on: {\n        NEXT: 'SUBMIT_CONFIRMED'\n      }\n    }\n  }\n}\n\nexport const { registerReducer, hasReachedState } = registerReducerFactory(\n  registerMachine\n)\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst offset = 180\n\nconst Number = styled('div')`\n  color: ${p => (p.progress === 100 ? '#42E068' : '#dfdfdf')};\n  font-size: 34px;\n  font-weight: 300;\n  position: relative;\n  width: 60px;\n  height: 60px;\n\n  span {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n`\n\nconst SVG = styled('svg')`\n  stroke: #ccc;\n\n  circle {\n    stroke-dasharray: ${offset};\n    stroke-dashoffset: 0;\n  }\n\n  circle.progress {\n    stroke-dasharray: ${offset};\n    stroke-dashoffset: ${p => (offset / 100) * (p.progress - 100)};\n  }\n`\n\nconst Content = styled('div')`\n  margin-left: 8px;\n\n  div {\n    font-weight: 100;\n    font-size: 20px;\n    color: #2b2b2b;\n    letter-spacing: 0;\n  }\n  p {\n    font-size: 12px;\n    color: #adbbcd;\n    letter-spacing: 0;\n  }\n`\n\nconst StepContainer = styled('div')`\n  display: flex;\n`\n\nconst Step = ({ number, text, title, progress = 100 }) => (\n  <StepContainer>\n    <Number progress={progress}>\n      <SVG height=\"60\" width=\"60\" progress={progress}>\n        <circle\n          cx=\"30\"\n          cy=\"30\"\n          r=\"28\"\n          stroke=\"#dfdfdf\"\n          strokeWidth=\"2\"\n          fill=\"none\"\n          transform=\"rotate(-90, 30, 30)\"\n        />\n        <circle\n          cx=\"30\"\n          cy=\"30\"\n          r=\"28\"\n          strokeWidth=\"2\"\n          stroke=\"#42E068\"\n          fill=\"none\"\n          className=\"progress\"\n          transform=\"rotate(-90, 30, 30)\"\n        />\n      </SVG>\n      <span>{number}</span>\n    </Number>\n    <Content>\n      <div>{title}</div>\n      <p>{text}</p>\n    </Content>\n  </StepContainer>\n)\n\nexport default Step\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport Step from './Step'\n\nconst Steps = styled('section')`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-row-gap: 30px;\n  border-bottom: ${p => (p.border ? '1' : '0')}px solid #dfdfdf;\n`\n\nconst Explainer = ({ step, number, title, text, border }) => {\n  return (\n    <>\n      <Steps border={border}>\n        <Step\n          number={number}\n          progress={\n            step === 'SUBMIT_CONFIRMED' ? 100 : step === 'SUBMIT_SENT' ? 50 : 0\n          }\n          title={title}\n          text={text}\n        />\n      </Steps>\n    </>\n  )\n}\n\nexport default Explainer\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport { Mutation } from '@apollo/client/react/components'\nimport { SUBMIT_PROOF } from '../../../graphql/mutations'\n\nimport PendingTx from '../../PendingTx'\nimport Button from '../../Forms/Button'\nimport { ReactComponent as DefaultPencil } from '../../Icons/SmallPencil.svg'\nimport { ReactComponent as ExternalLinkIcon } from '../../Icons/externalLink.svg'\nimport DefaultLoader from '../../Loader'\n\nconst LoaderContainer = styled('div')`\n  width: 60px;\n`\nconst Loader = styled(DefaultLoader)`\n  width: 30%;\n  margin: auto;\n`\n\nconst EtherScanLinkContainer = styled('span')`\n  display: inline-block;\n  transform: translate(25%, 20%);\n`\n\nconst CTAContainer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding-top: 20px;\n`\n\nconst LinkToLearnMore = styled('a')`\n  margin-right: 1em;\n  font-size: 14px;\n  letter-spacing: 0.58px;\n  text-align: center;\n  margin-left: auto;\n`\n\nconst Pencil = styled(DefaultPencil)`\n  margin-right: 5px;\n`\n\nconst Exclamation = () => (\n  <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M8.739 5.82c-.039.746-.096 1.512-.134 2.258-.02.25-.02.268-.02.517a.723.723 0 0 1-.727.708.707.707 0 0 1-.727-.689c-.058-1.167-.134-2.143-.192-3.311l-.057-.938c-.02-.478.268-.9.727-1.034a.972.972 0 0 1 1.13.556c.057.153.095.306.095.478-.019.479-.057.976-.095 1.455m-.88 6.316a.98.98 0 0 1-.977-.976.98.98 0 0 1 .976-.976c.536 0 .976.44.957.995.02.517-.44.957-.957.957M7.93 0a7.93 7.93 0 1 0 0 15.86A7.93 7.93 0 0 0 7.93 0\"\n      fill=\"#F5A623\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n)\n\nconst Error = styled('span')`\n  margin-left: 0.2em;\n  font-size: 14px;\n  color: #f5a623;\n`\n\nfunction CallToAction({\n  step,\n  name,\n  parentOwner,\n  incrementStep,\n  txHash,\n  setTxHash,\n  refetch,\n  loading,\n  setLoading,\n  readOnly\n}) {\n  const { t } = useTranslation()\n  const RefreshButton = number => {\n    return loading ? (\n      <Button>\n        <LoaderContainer>\n          <Loader />\n        </LoaderContainer>\n      </Button>\n    ) : (\n      <Button\n        onClick={() => {\n          setLoading(true)\n          refetch().then(data => {\n            setLoading(false)\n            if (data.data.singleName.state > number) {\n              incrementStep()\n            }\n          })\n        }}\n      >\n        {t('c.refresh')}\n      </Button>\n    )\n  }\n\n  const CTAs = {\n    ENABLE_DNSSEC: <RefreshButton number={2} />,\n    ADD_TEXT: <RefreshButton number={4} />,\n    SUBMIT_PROOF: (\n      <Mutation\n        mutation={SUBMIT_PROOF}\n        onCompleted={data => {\n          setTxHash(Object.values(data)[0])\n          incrementStep()\n        }}\n      >\n        {mutate => (\n          <Button\n            onClick={() => {\n              mutate({ variables: { name, parentOwner } })\n            }}\n            type={readOnly ? 'disabled' : 'primary'}\n          >\n            {t('c.register')}\n          </Button>\n        )}\n      </Mutation>\n    ),\n    SUBMIT_SENT: (\n      <PendingTx\n        txHash={txHash}\n        onConfirmed={() => {\n          incrementStep()\n        }}\n      />\n    ),\n    SUBMIT_CONFIRMED: (\n      <Button onClick={() => refetch()}>\n        <Pencil />\n        {t('dns.viewinmanager')}\n      </Button>\n    )\n  }\n  return CTAs[step]\n}\n\nconst CTA = ({\n  name,\n  parentOwner,\n  step,\n  incrementStep,\n  refetch,\n  error,\n  readOnly\n}) => {\n  const { t } = useTranslation()\n  const [txHash, setTxHash] = useState(undefined)\n  const [loading, setLoading] = useState(undefined)\n\n  return (\n    <CTAContainer>\n      {error ? (\n        <>\n          <Exclamation />\n          <Error>{error}</Error>\n        </>\n      ) : null}\n      <LinkToLearnMore\n        href=\"https://docs.ens.domains/dns-registrar-guide\"\n        target=\"_blank\"\n      >\n        {t('c.learnmore')}\n        <EtherScanLinkContainer>\n          <ExternalLinkIcon />\n        </EtherScanLinkContainer>\n      </LinkToLearnMore>\n      <CallToAction\n        step={step}\n        name={name}\n        parentOwner={parentOwner}\n        incrementStep={incrementStep}\n        txHash={txHash}\n        setTxHash={setTxHash}\n        refetch={refetch}\n        loading={loading}\n        setLoading={setLoading}\n        readOnly={readOnly}\n      />\n    </CTAContainer>\n  )\n}\n\nexport default CTA\n","import React, { useReducer } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from '@emotion/styled/macro'\nimport { registerMachine, registerReducer } from './registerReducer'\n\nimport Explainer from './Explainer'\nimport CTA from './CTA'\nimport { SingleNameBlockies } from '../../Blockies'\nimport DefaultEtherScanLink from '../../Links/EtherScanLink'\n\nimport dnssecmodes from '../../../api/dnssecmodes'\nimport You from '../../Icons/You'\n\nconst EtherScanLink = styled(DefaultEtherScanLink)`\n  display: flex;\n  overflow: hidden;\n  svg {\n    flex-grow: 1;\n  }\n`\n\nconst NameRegisterContainer = styled('div')`\n  padding: 20px 40px;\n`\n\nconst Title = styled('span')`\n  color: ${p => p.color};\n`\n\nconst Address = styled('span')`\n  color: #d8d8d8;\n`\n\nconst DNSOwnerContainer = styled('div')`\n  background: #f0f6fa;\n  display: flex;\n  padding: 1em 0;\n  *{\n    padding-left 24px;\n  }\n`\n\nconst BreadcrumbsCaontainer = styled('ul')`\n  background: #f0f6fa;\n  list-style: none;\n  overflow: hidden;\n  display: flex;\n  padding: 1em;\n  li {\n    border-right: 1px solid #adbbcd;\n    text-align: center;\n    flex: auto;\n  }\n  li a {\n    color: white;\n    text-decoration: none;\n    padding: 10px 0 10px 65px;\n    background: brown; /* fallback color */\n    background: hsla(34, 85%, 35%, 1);\n    position: relative;\n    display: block;\n    float: left;\n  }\n\n  li:last-child {\n    border-right: none;\n  }\n`\nconst NumberContainer = styled('span')`\n  margin-right: 0.5em;\n`\n\nconst Number = ({ number, currentNumber, text }) => {\n  const green = '#42E068'\n  const grey = '#D8D8D8'\n  const black = '#2B2B2B'\n  const displayNumber = number < currentNumber ? '✓' : number\n  let color\n  if (number === currentNumber) {\n    color = black\n  } else if (number < currentNumber) {\n    color = green\n  } else {\n    color = grey\n  }\n\n  return (\n    <>\n      <NumberContainer>\n        <svg width=\"12px\" height=\"12px\" viewBox=\"0 0 12 12\" version=\"1.1\">\n          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g transform=\"translate(-694.000000, -314.000000)\">\n              <g transform=\"translate(404.000000, 183.000000)\">\n                <g transform=\"translate(37.000000, 119.000000)\">\n                  <g transform=\"translate(253.000000, 9.000000)\">\n                    <g transform=\"translate(0.000000, 2.000000)\">\n                      <circle fill={color} cx=\"6\" cy=\"7\" r=\"6\" />\n                      <text\n                        fontFamily=\"Helvetica\"\n                        fontSize=\"10\"\n                        fontWeight=\"normal\"\n                        letterSpacing=\"0.3125\"\n                        fill=\"#F0F6FA\"\n                      >\n                        <tspan x=\"2.8\" y=\"10\">\n                          {displayNumber}\n                        </tspan>\n                      </text>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </svg>\n      </NumberContainer>\n      <Title color={color}>{text}</Title>\n    </>\n  )\n}\n\nconst getContent = (step, account, dnsOwner, t) => {\n  let content = {\n    ENABLE_DNSSEC: {\n      title: t('dns.steps.enable.title'),\n      text: t('dns.steps.enable.title'),\n      number: 1\n    },\n    ADD_TEXT: {\n      title: (\n        <>\n          {t('dns.steps.addtext.title')}\n          <Address>a={account}</Address>\n        </>\n      ),\n      text: t('dns.steps.addtext.text'),\n      number: 2\n    },\n    SUBMIT_PROOF: [\n      {\n        title: t('dns.steps.proof.title1'),\n        text: t('dns.steps.proof.text1'),\n        number: 3,\n        owner: true\n      },\n      {\n        title: t('dns.steps.proof.title2'),\n        text: t('dns.steps.proof.text2'),\n        number: 3\n      }\n    ],\n    SUBMIT_SENT: [\n      {\n        title: t('dns.steps.proof.title1'),\n        text: t('dns.steps.proof.text1'),\n        number: 3,\n        owner: true\n      },\n      {\n        title: t('dns.steps.proof.title2'),\n        text: t('dns.steps.proof.text2'),\n        number: 3\n      }\n    ],\n    SUBMIT_CONFIRMED: [\n      {\n        title: t('dns.steps.manage.title'),\n        text: t('dns.steps.manage.text1'),\n        number: 4,\n        owner: true\n      },\n      {\n        title: t('dns.steps.manage.title'),\n        text: t('dns.steps.manage.text2'),\n        number: 4\n      }\n    ]\n  }[step]\n  if (content.length >= 0) {\n    content =\n      !!account && dnsOwner.toLowerCase() === account.toLowerCase()\n        ? content[0]\n        : content[1]\n  }\n  return content\n}\n\nconst NameRegister = ({\n  account,\n  domain,\n  refetch,\n  readOnly,\n  registrarAddress\n}) => {\n  const { t } = useTranslation()\n  const dnssecmode = dnssecmodes[domain.state]\n  let [step, dispatch] = useReducer(\n    registerReducer,\n    dnssecmode.state || registerMachine.initialState\n  )\n  const incrementStep = () => dispatch('NEXT')\n  const content = getContent(step, account, domain.dnsOwner, t)\n  const errorMessage =\n    dnssecmode.displayError && (domain.stateError || dnssecmode.title)\n  const showDNSOwner =\n    domain.dnsOwner &&\n    [2, 3, 4].includes(content.number) &&\n    parseInt(domain.dnsOwner) !== 0\n  return (\n    <NameRegisterContainer>\n      <BreadcrumbsCaontainer>\n        <li>\n          <Number\n            number={1}\n            currentNumber={content.number}\n            text={t('dns.breadcrumbs.0')}\n          />{' '}\n        </li>\n        <li>\n          <Number\n            number={2}\n            currentNumber={content.number}\n            text={t('dns.breadcrumbs.1')}\n          />\n        </li>\n        <li>\n          <Number\n            number={3}\n            currentNumber={content.number}\n            text={t('dns.breadcrumbs.2')}\n          />\n        </li>\n        <li>\n          <Number\n            number={4}\n            currentNumber={content.number}\n            text={t('dns.breadcrumbs.3')}\n          />\n        </li>\n      </BreadcrumbsCaontainer>\n      <Explainer\n        step={step}\n        border={!showDNSOwner}\n        number={content.number}\n        title={content.title}\n        text={content.text}\n      />\n      {showDNSOwner ? (\n        <DNSOwnerContainer>\n          <span>\n            {t('dns.dnsowner')} {content.owner ? <You /> : null}\n          </span>\n          <EtherScanLink address={domain.dnsOwner}>\n            <SingleNameBlockies address={domain.dnsOwner} imageSize={24} />\n            {domain.dnsOwner}\n          </EtherScanLink>\n        </DNSOwnerContainer>\n      ) : null}\n      <CTA\n        name={domain.name}\n        parentOwner={registrarAddress}\n        incrementStep={incrementStep}\n        step={step}\n        error={errorMessage}\n        state={domain.state}\n        label={domain.label}\n        refetch={refetch}\n        readOnly={readOnly}\n      />\n    </NameRegisterContainer>\n  )\n}\n\nconst NameRegisterDataWrapper = props => {\n  return <NameRegister {...props} />\n}\n\nexport default NameRegisterDataWrapper\n","import DNSNameRegister from './DNSNameRegister'\n\nexport default DNSNameRegister\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport mq from 'mediaQuery'\n\nconst ShortNameContainer = styled('div')`\n  padding: 20px;\n  text-align: center;\n\n  ${mq.medium`\n    padding: 40px 40px;\n  `}\n`\n\nconst InnerWrapper = styled('div')`\n  background: #f0f6fa;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  ${mq.medium`\n    flex-direction: row;\n    align-items: flex-start;\n  `}\n  p {\n    text-align: left;\n    max-width: 500px;\n    font-weight: 300;\n    line-height: 26px;\n    font-size: 18px;\n    margin-top: 0;\n  }\n  ${mq.small`\n    padding: 40px 40px;\n  `}\n`\n\nexport default function ShortName({ name }) {\n  return (\n    <ShortNameContainer>\n      <InnerWrapper>1 ~ 2 characters are not allowed to register.</InnerWrapper>\n    </ShortNameContainer>\n  )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from '@emotion/styled/macro'\nimport { Link } from 'react-router-dom'\n\nimport mq from 'mediaQuery'\n\nconst TabLink = styled(Link)`\n  font-size: 14px;\n  background: ${({ active }) => (active ? '#2C46A6' : 'transparent')};\n  color: ${({ active }) => (active ? 'white' : '#D2D2D2')};\n  transform: scale(${({ active }) => (active ? '1.08' : '1')});\n  transition: background 0.1s ease-out, transform 0.3s ease-out;\n  padding: 10px 20px;\n  ${mq.small`\n    padding: 10px 30px;\n  `}\n  &:hover,\n  &:visited {\n    color: ${({ active }) => (active ? 'white' : '#D2D2D2')};\n  }\n  &:first-child {\n    border-radius: 4px 0 0 4px;\n  }\n\n  &:last-child {\n    border-radius: 0 4px 4px 0;\n  }\n`\n\nconst TabContainer = styled('div')`\n  display: inline-flex;\n  justify-content: flex-start;\n  border: 2px solid #dfdfdf;\n  border-radius: 4px;\n  margin-left: 20px;\n  margin-top: 20px;\n\n  ${mq.small`\n    margin-right: 0;\n    margin: 0;\n    margin-left: 20px;\n  `}\n`\nfunction getDetailsActive(domain, pathname, tab) {\n  const { name } = domain\n  if (domain.parent !== 'eth') {\n    return (\n      pathname !== `/name/${name}/register` &&\n      pathname !== `/name/${name}/subdomains`\n    )\n  } else {\n    return (\n      (tab === 'details' || pathname === `/name/${name}/details`) &&\n      (pathname !== `/name/${name}/register` &&\n        pathname !== `/name/${name}/subdomains`)\n    )\n  }\n}\nconst Tabs = ({ domain, pathname, parent, tab }) => {\n  const { t } = useTranslation()\n  const { name, state } = domain\n  return (\n    (state !== 'Auction' || state !== 'Reveal') && (\n      <TabContainer>\n        {parent === 'evmos' /** changed to evmos */ && (\n          <TabLink\n            active={\n              (tab === 'register' || pathname === `/name/${name}/register`) &&\n              (pathname !== `/name/${name}/details` &&\n                pathname !== `/name/${name}/subdomains`)\n            }\n            to={`/name/${name}/register`}\n          >\n            {t('singleName.tabs.register')}\n          </TabLink>\n        )}\n\n        <TabLink\n          active={getDetailsActive(domain, pathname, tab)}\n          to={`/name/${name}/details`}\n        >\n          {t('singleName.tabs.details')}\n        </TabLink>\n        <TabLink\n          active={pathname === `/name/${name}/subdomains`}\n          to={`/name/${name}/subdomains`}\n        >\n          {t('singleName.tabs.subdomains')}\n        </TabLink>\n      </TabContainer>\n    )\n  )\n}\nexport default Tabs\n","import React, { useEffect, useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport { gql } from '@apollo/client'\nimport { useQuery } from '@apollo/client'\n\nimport { useMediaMin } from 'mediaQuery'\nimport { EMPTY_ADDRESS } from '../../utils/records'\nimport { Title } from '../Typography/Basic'\nimport TopBar from '../Basic/TopBar'\nimport DefaultFavourite from '../AddFavourite/Favourite'\nimport NameDetails from './NameDetails'\nimport DNSNameRegister from './DNSNameRegister'\nimport ShortName from './ShortName'\nimport Tabs from './Tabs'\nimport NameContainer from '../Basic/MainContainer'\nimport Copy from '../CopyToClipboard/'\nimport { isOwnerOfParentDomain } from '../../utils/utils'\n\nconst Owner = styled('div')`\n  color: #ccd4da;\n  margin-right: 20px;\n`\n\nconst RightBar = styled('div')`\n  display: flex;\n  align-items: center;\n`\n\nconst Favourite = styled(DefaultFavourite)``\n\nfunction isRegistrationOpen(available, parent) {\n  return parent === 'evmos' && available // changed to evmos\n}\n\nfunction isDNSRegistrationOpen(domain) {\n  const nameArray = domain.name?.split('.')\n  if (nameArray?.length !== 2 || nameArray?.[1] === 'evmos') {\n    // changed to evmos\n    return false\n  }\n  return domain.isDNSRegistrar && domain.owner === EMPTY_ADDRESS\n}\n\nfunction isOwnerOfDomain(domain, account) {\n  if (domain.owner !== EMPTY_ADDRESS && !domain.available) {\n    return domain.owner?.toLowerCase() === account?.toLowerCase()\n  }\n  return false\n}\n\nconst NAME_REGISTER_DATA_WRAPPER = gql`\n  query nameRegisterDataWrapper @client {\n    accounts\n    networkId\n  }\n`\n\nexport const useRefreshComponent = () => {\n  const [key, setKey] = useState(0)\n  const {\n    data: { accounts, networkId }\n  } = useQuery(NAME_REGISTER_DATA_WRAPPER)\n  const mainAccount = accounts?.[0]\n  useEffect(() => {\n    setKey(x => x + 1)\n  }, [mainAccount, networkId])\n  return key\n}\n\nconst NAME_QUERY = gql`\n  query nameQuery {\n    accounts @client\n  }\n`\n\nfunction Name({ details: domain, name, pathname, type, refetch }) {\n  const { t } = useTranslation()\n  const smallBP = useMediaMin('small')\n  const percentDone = 0\n\n  const {\n    data: { accounts }\n  } = useQuery(NAME_QUERY)\n\n  const account = accounts?.[0]\n  const isOwner = isOwnerOfDomain(domain, account)\n  const isOwnerOfParent = isOwnerOfParentDomain(domain, account)\n  const isDeedOwner = domain.deedOwner === account\n  const isRegistrant = !domain.available && domain.registrant === account\n\n  const registrationOpen = isRegistrationOpen(domain.available, domain.parent)\n  const preferredTab = registrationOpen ? 'register' : 'details'\n\n  let ownerType,\n    registrarAddress = domain.parentOwner\n  if (isDeedOwner || isRegistrant) {\n    ownerType = 'Registrant'\n  } else if (isOwner) {\n    ownerType = 'Controller'\n  }\n  let containerState\n  if (isDNSRegistrationOpen(domain)) {\n    containerState = 'Open'\n  } else {\n    containerState = isOwner ? 'Yours' : domain.state\n  }\n\n  const key = useRefreshComponent()\n\n  return (\n    <NameContainer state={containerState} key={key}>\n      <TopBar percentDone={percentDone}>\n        <Title>\n          {domain?.decrypted\n            ? name\n            : '[unknown' +\n              domain.name?.split('.')[0].slice(1, 11) +\n              ']' +\n              '.' +\n              domain.parent}\n          <Copy\n            value={\n              domain?.decrypted\n                ? name\n                : '[unknown' +\n                  domain.name?.split('.')[0].slice(1, 11) +\n                  ']' +\n                  '.' +\n                  domain.parent\n            }\n          />\n        </Title>\n        <RightBar>\n          {!!ownerType && (\n            <Owner data-testid=\"owner-type\">\n              {ownerType === 'Registrant'\n                ? t('c.registrant')\n                : t('c.Controller')}\n            </Owner>\n          )}\n          <Favourite domain={domain} />\n          {smallBP && (\n            <Tabs\n              pathname={pathname}\n              tab={preferredTab}\n              domain={domain}\n              parent={domain.parent}\n            />\n          )}\n        </RightBar>\n      </TopBar>\n      {!smallBP && (\n        <Tabs\n          pathname={pathname}\n          tab={preferredTab}\n          domain={domain}\n          parent={domain.parent}\n        />\n      )}\n      {isDNSRegistrationOpen(domain) ? (\n        <DNSNameRegister\n          domain={domain}\n          registrarAddress={registrarAddress}\n          pathname={pathname}\n          refetch={refetch}\n          account={account}\n          readOnly={account === EMPTY_ADDRESS}\n        />\n      ) : type === 'short' && domain.owner === EMPTY_ADDRESS ? ( // check it's short and hasn't been claimed already\n        <ShortName name={name} />\n      ) : (\n        <NameDetails\n          tab={preferredTab}\n          domain={domain}\n          pathname={pathname}\n          name={name}\n          isOwner={isOwner}\n          isOwnerOfParent={isOwnerOfParent}\n          refetch={refetch}\n          account={account}\n          registrationOpen={registrationOpen}\n        />\n      )}\n    </NameContainer>\n  )\n}\n\nexport default Name\n","import React, { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { gql } from '@apollo/client'\n\nimport { validateName, parseSearchTerm } from '../utils/utils'\nimport { useScrollTo } from '../components/hooks'\nimport { GET_SINGLE_NAME } from '../graphql/queries'\nimport Loader from '../components/Loader'\nimport SearchErrors from '../components/SearchErrors/SearchErrors'\nimport Name from '../components/SingleName/Name'\nimport {\n  NonMainPageBannerContainerWithMarginBottom,\n  DAOBannerContent\n} from '../components/Banner/DAOBanner'\n\nconst SINGLE_NAME = gql`\n  query singleNameQuery @client {\n    isENSReady\n    networkId\n  }\n`\n\nfunction SingleName({\n  match: {\n    params: { name: searchTerm }\n  },\n  location: { pathname }\n}) {\n  useScrollTo(0)\n\n  const [valid, setValid] = useState(undefined)\n  const [type, setType] = useState(undefined)\n  const [name, setNormalisedName] = useState('')\n  let errorMessage\n\n  const {\n    data: { isENSReady }\n  } = useQuery(SINGLE_NAME)\n  const { data, loading, error, refetch } = useQuery(GET_SINGLE_NAME, {\n    variables: { name },\n    fetchPolicy: 'no-cache',\n    context: {\n      queryDeduplication: false\n    }\n  })\n\n  useEffect(() => {\n    let normalisedName\n    if (isENSReady) {\n      try {\n        // This is under the assumption that validateName never returns false\n        normalisedName = validateName(searchTerm)\n        setNormalisedName(normalisedName)\n        document.title = searchTerm\n      } catch {\n        document.title = 'Error finding name'\n      } finally {\n        parseSearchTerm(normalisedName || searchTerm).then(_type => {\n          if (_type === 'supported' || _type === 'tld' || _type === 'search') {\n            setValid(true)\n\n            setType(_type)\n          } else {\n            if (_type === 'invalid') {\n              setType('domainMalformed')\n            } else {\n              setType(_type)\n            }\n            setValid(false)\n          }\n        })\n      }\n    }\n  }, [searchTerm, isENSReady])\n\n  if (valid) {\n    if (loading) return <Loader large center />\n    if (error) return <div>{(console.log(error), JSON.stringify(error))}</div>\n    if (data?.singleName)\n      return (\n        <>\n          <NonMainPageBannerContainerWithMarginBottom>\n            <DAOBannerContent />\n          </NonMainPageBannerContainerWithMarginBottom>\n          <Name\n            details={data.singleName}\n            name={name}\n            pathname={pathname}\n            type={type}\n            refetch={refetch}\n          />\n        </>\n      )\n  }\n\n  if (valid === false) {\n    if (type === 'invalid') {\n      errorMessage = 'domainMalformed'\n    } else if (type === 'short') {\n      errorMessage = 'tooShort'\n    } else {\n      errorMessage = type\n    }\n    return (\n      <SearchErrors errors={[errorMessage]} searchTerm={name || searchTerm} />\n    )\n  } else {\n    return <Loader large center />\n  }\n}\n\nexport default SingleName\n"],"names":["isFavourite","favourites","name","filter","domain","length","nameArray","split","useQuery","GET_FAVOURITES","GET_SUBDOMAIN_FAVOURITES","getFavouritesQuery","data","subDomainFavourites","AddFavourite","isSubDomain","registerMachine","states","initialState","traverseLinkedList","list","next","on","NEXT","getStates","registerReducer","state","action","hasReachedState","currentState","indexToReach","findIndex","s","PRICE_DECISION","PREVIOUS","COMMIT_SENT","COMMIT_CONFIRMED","AWAITING_REGISTER","REVEAL_SENT","REVEAL_CONFIRMED","registerReducerFactory","_path","Number","p","progress","SVG","offset","Content","StepContainer","number","text","title","height","width","cx","cy","r","stroke","strokeWidth","fill","transform","className","_excluded","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBell","_ref","svgRef","titleId","props","xmlns","ref","id","d","fillRule","_g","ForwardRef","SvgGreyCircleTick","sendNotification","message","window","hasPermission","Notification","permission","requestPermission","then","Steps","mq","Header","NotifyButton","Button","NotifyButtonDisabled","step","waitPercentComplete","t","waitTime","useTranslation","titles","style","marginRight","type","onClick","startDatetime","registrant","noMargin","useState","showModal","setShowModal","endDatetime","clone","add","duration","moment","diff","asHours","event","description","location","format","handleCloseModal","dropDownLinks","EmailNotifyLink","domainName","address","Modal","closeModal","ExpiryNotificationModal","onCancel","Calendar","display","SvgSmallPencil","CTAContainer","Pencil","DefaultPencil","Prompt","OrangeExclamation","DefaultOrangeExclamation","LeftLink","Link","getCTA","incrementStep","secret","label","hasSufficientBalance","txHash","setTxHash","setCommitmentTimerRunning","commitmentTimerRunning","isAboveMinDuration","refetch","refetchIsMigrated","readOnly","price","years","premium","history","ethUsdPrice","account","Mutation","mutation","COMMIT","variables","onCompleted","values","mutate","Tooltip","position","border","left","top","showTooltip","hideTooltip","onMouseOver","onMouseLeave","PendingTx","REGISTER","onConfirmed","trackReferral","transactionId","labels","EthVal","_hex","toEth","mul","toFixed","css","utc","local","subtract","Promise","all","push","setTimerRunning","setBlockCreatedAt","useHistory","useAccount","undefined","useEffect","SvgQuestionMarkSmall","fontFamily","fontSize","fontWeight","letterSpacing","x","y","SvgCheckCircle","ProgressContainer","ProgressBar","percentDone","large","StepContent","completed","QuestionMark","DefaultQuestionMark","CheckCircle","DefaultCheckCircle","Step","children","icon","tooltipElement","NotAvailableContainer","Message","NotAvailable","LineGraphContainer","Legend","Canvas","Title","LineGraph","chartStartDate","maxTicksLimit","startDate","currentDate","targetDate","endDate","now","handleTooltip","oracle","premiumOnlyPrice","c","priceCalculator","daysRemaining","getDaysRemaining","hoursRemaining","getHoursRemaining","totalDays","chartRef","React","dates","pointRadius","supportLine","chart","setChart","chartstartPremium","getAmountByDateRange","ctx","current","getContext","Chart","_chart","datasets","borderWidth","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","options","events","animation","tooltips","enabled","mode","intersect","titleAlign","multiKeyBackground","callbacks","tooltipItem","yLabel","datasetIndex","responsive","aspectRatio","legend","scales","xAxes","afterFit","scale","ticks","callback","gridLines","zeroLineColor","zeroLineWidth","color","lineWidth","offsetGridLines","drawBorder","yAxes","max","layout","padding","update","premiumInEth","premiumInUsd","parseInt","invalid","PremiumContainer","Chain","ChainDefault","AmountContainer","DateContainer","CalendarContainer","Value","Description","Input","DefaultInput","reference","handlePremium","targetPremium","wide","placeholder","value","onChange","evt","formatDate","Store","localStorage","getItem","JSON","parse","obj","setItem","stringify","savedStep","isBehind","checkCommitment","networkId","dispatch","setSecret","setYears","timerRunning","waitUntil","setWaitUntil","secondsPassed","setSecondsPassed","commitmentExpirationDate","setCommitmentExpirationDate","stepIndex","crypto","toString","isSameOrBefore","Date","GET_WEB3","gql","loading","error","accounts","network","isReadOnly","isSafeApp","HOUR","PremiumPriceOracle","expiryDate","algorithm","startingPremiumInUsd","lastValue","releasedDate","zeroPremiumDate","rate","diffInHour","hourlyRate","getDaysPast","getHoursPast","amount","daysPast","Math","log","getTargetAmountByDaysPast","NameRegisterContainer","PremiumWarning","NameRegister","showPremiumWarning","currentPremium","underPremium","registrationOpen","useNetworkInfo","useReducer","blockCreatedAt","setTargetDate","setTargetPremium","GET_ETH_PRICE","getEthPrice","ethUsdPriceLoading","GET_PRICE_CURVE","getPriceCurve","useGasPrice","gasPriceLoading","gasPrice","block","useBlock","setInvalid","WAIT_BLOCK_TIMESTAMP","fetchPolicy","waitBlockTimestamp","GET_BALANCE","getBalance","GET_MAXIMUM_COMMITMENT_AGE","getMaximumCommitmentAge","timestamp","CHECK_COMMITMENT","ProgressRecorder","useInterval","parsedYears","parseFloat","calculateDuration","GET_RENT_PRICE","getRentPrice","rentPriceLoading","getPremiumPrice","gt","yearInSeconds","expiryTime","isBetween","Pricer","ethUsdPremiumPrice","displayGas","delimitedParsedValue","getTargetDateByAmount","parsedValue","replace","isNaN","decrementStep","GET_MINIMUM_COMMITMENT_AGE","withWrap","console","getMinimumCommitmentAge","AddSubdomainContainer","AddSubdomainContent","useEditable","actions","editing","newValue","pending","confirmed","startEditing","stopEditing","updateValue","startPending","setConfirmed","isValid","isLabelValid","isInvalid","useMutation","CREATE_SUBDOMAIN","e","valid","disabled","SubDomainsContainer","SubDomainH2","H2","SubDomainsFromWeb3","canAddSubdomain","Query","query","GET_SUBDOMAINS","subdomains","getSubDomains","subDomains","subdomain","owner","hasNoSubdomains","map","ChildDomainItem","labelhash","labelHash","canDeleteSubdomain","isOwner","loadingIsParentMigrated","isParentMigratedToNewRegistry","isMigratedToNewRegistry","loadingIsMigrated","rest","GET_SUBDOMAINS_FROM_SUBGRAPH","getNamehash","parentLabel","labelName","decryptName","showBlockies","isMigrated","isSubdomain","displayError","explainer","outOfSync","setOpen","initial","setInitial","WarningBox","WarningContent","SubWarning","Migrate","ExternalButtonLink","RegistryMigration","canMigrate","dnssecmode","IS_CONTRACT_CONTROLLER","isContractController","MIGRATE_REGISTRY","migrateRegistry","parentOwner","isContractControllerMessage","defaultMessage","Trans","i18nKey","parent","migrateParentFirstMessage","dnssecMigrateMessage","href","DetailsItem","uneditable","DetailsKey","greyed","DetailsValue","editable","DetailsContent","AddressLinkContainer","ariaLabel","to","SvgPencil","CopyContainer","Copied","iconColour","copied","setCopied","CopyToClipboard","onCopy","setTimeout","AddressInput","DefaultAddressInput","AddressLink","DefaultAddressLink","Address","Info","DefaultInfo","EditButton","WarningMessage","DetailsEditableContainer","backgroundStyle","DefaultDetailsValue","ExpiryDate","EditRecord","motion","Action","DefaultPendingTx","DefaultResolverButton","DefaultPricer","Buttons","ResolverAddressWarning","SaveCancel","DefaultSaveCancel","getToolTipMessage","keyName","isExpiredRegistrant","getInputType","presetValue","expirationDate","rentPrice","ensAddress","getEnsAddress","provider","process","REACT_APP_STAGE","ethereum","web3","option","onResolve","trim","Editable","isExpired","showLabel","editButtonType","mutationQuery","mutationButton","editButton","variableName","copyToClipboard","confirm","getTime","skip","ethUsdPriceData","isNewResolverAddress","addressUtils","emptyAddress","isContractAddress","getValidation","isOwnerOfParent","isOwnerOfParentDomain","isRegistrant","available","canDelete","includes","recordType","SET_SUBNODE_OWNER","SET_OWNER","SET_RESOLVER","chooseMutation","ownerMutation","GET_PUBLIC_RESOLVER","toLowerCase","imageSize","contentType","tabIndex","refetchTilUpdatedSingle","interval","keyToCompare","prevData","singleName","getterString","opacity","animate","exit","preventDefault","transition","ease","publicResolver","getVariables","ViewOnly","deedOwner","isDeedOwner","getDefaultMessage","newType","getMessages","warning","canEdit","SubmitButton","actionText","SUBMIT_PROOF","dataType","getPlaceholder","trimRecord","SelectContainer","styles","control","textTransform","isDisabled","isSelected","isFocused","cursor","input","singleValue","SelectComponent","selectedOption","handleChange","SelectorType","addNewKey","CreatableSelect","Select","isHidden","theme","borderRadius","colors","primary25","primary","Component","ToggleAddRecord","DefaultSelect","RecordsTitle","AddRecordContainer","AddRecordForm","Row","AddRecordButton","textRecordOptions","TEXT_RECORD_KEYS","sort","coinOptions","COIN_LIST","throttledValidate","asyncThrottle","selectedKey","selectedRecord","setIsValidating","validateRecord","contractFn","addr","emptyRecords","updateRecord","setSelectedRecord","setSelectedKey","setIsValid","isValidating","newValueRef","useRef","useChangedValidRecord","onSubmit","clearInput","LinkContainer","UnlinkedValue","NotSet","UnlinkedValueContainer","AvatarImage","OwnerLabel","url","textKey","prependUrl","useAvatar","is_owner","host_meta","imageUrl","image","isEmpty","isRecordEmpty","rel","src","externalLinkSvg","alt","reference_url","ContentHashLinkContainer","externalLink","rslt","getProtocolType","protocolType","decoded","warn","RecordsItem","hasRecord","noBorder","RecordsContent","RecordsKey","RecordsSubKey","RecordsValue","hasBeenUpdated","testId","Bin","DefaultBin","KeyValueItem","KeyValueContainer","noRecords","KeyValuesList","Key","RecordsListItem","KeyValuesContent","DeleteRecord","hasChange","changedRecords","find","el","validator","record","validating","Record","setHasRecord","setUpdatedRecords","remove","Records","records","dataValue","KeyValueRecord","styled","DefaultKey","DefaultKeyValuesList","DefaultKeyValueContainer","MultipleRecordsCheck","TLD","createFetchUrl","whitelisted","host","requestCertificate","resolve","status","fetchUrl","fetch","method","headers","Origin","checkCertificate","isEthSubdomain","Warning","RequestCertificate","requireCertificate","setRequireCertificate","content","ContentHashEditable","editableSmall","ContentHashLinkWithEthLink","displayEthLink","match","ContentHashViewOnly","RecordsWrapper","shouldShowRecords","CantEdit","ConfirmBox","RECORDS","COIN_PLACEHOLDER_RECORDS","processRecords","nonDuplicatePlaceholderRecords","recordsSansEmpty","getInitialRecords","dataAddresses","dataTextRecords","initialTextRecords","textRecords","getTextRecords","TEXT_PLACEHOLDER_RECORDS","textRecord","getInitialTextRecords","initialCoins","addresses","getAddresses","getInitialCoins","initialContent","hash","startsWith","getInitialContent","getCoins","updatedRecords","getContent","updatedRecord","reduce","acc","currentVal","addRecord","newRecord","addOrUpdateRecord","updateFn","addFn","validateAllRecords","validRecords","singleValidator","some","val","singleValidating","validatingRecords","getValidRecords","results","index","throttledUpdate","setChangedRecords","initialRecords","setValidatingRecords","updatedRecordDiff","differenceWith","isEqual","getChangedRecords","RECORDS_QUERY","hasResolver","needsToBeMigrated","isOldPublicResolver","isDeprecatedResolver","ADD_MULTI_RECORDS","addMultiRecords","setValidRecords","resetPending","dataResolver","GET_RESOLVER_FROM_SUBGRAPH","resolver","coinList","coinTypes","formatsByCoinType","GET_ADDRESSES","addressesLoading","GET_TEXT_RECORDS","texts","textRecordsLoading","recordsLoading","useGetRecords","setInitialRecords","useInitRecords","prevInitialRecords","usePrevious","useUpdatedRecords","prevUpdatedRecords","updatedRecordsRef","validRecordsRef","validatingRecordsRef","newValidatedRecords","validatableRecords","validRecordsWithoutNew","recordsToAddToValid","useChangedValidRecords","useResetFormOnAccountChange","hasRecords","calculateShouldShowRecords","hasAnyRecord","canEditRecords","extraDataComponent","RecordsHeader","getArtRecordLabel","maker","subject","period","dimensions","materials","markings","features","ArtRecordItem","ArtRecords","center","encodedArtRecords","getText","parsed","concat","decodeRecords","ModalBackground","ErrorTitle","ErrorMessage","WarningIcon","ButtonContainer","close","modalRoot","document","getElementById","ReactDOM","stopPropagation","MigrateItem","MigrateKey","MigrateValue","MigrateButton","MigrateAction","MigrateResolver","isErrorModalOpen","setIsErrorModalOpen","state1","actions1","state2","actions2","txHash1","pending1","confirmed1","txHash2","pending2","confirmed2","startPending1","setConfirmed1","startPending2","setConfirmed2","MIGRATE_RESOLVER","migrateResolver","mutationError","txHashes","MigrationWarningContainer","MigrationWarning","ManualMigrationMessage","ManualMigration","ResolverWrapper","areRecordsMigrated","isPublicResolverReady","GET_RESOLVER_MIGRATION_INFO","getResolverMigrationInfo","DetailsItemEditable","GET_TEXT","NameClaimTestDomainContainer","ClaimButton","Note","Tld","REGISTER_TESTDOMAIN","Details","Loader","DefaultLoader","DefaultButton","ExpirationDetailsValue","Explainer","ErrorExplainer","OutOfSyncExplainer","OutOfSyncExplainerContainer","EtherScanLinkContainer","LinkToLearnMore","DNSOwnerError","OwnerFields","DomainOwnerAddress","GracePeriodWarningContainer","GracePeriodText","GracePeriodDate","Expiration","GracePeriodWarning","date","canClaim","showExplainer","canSubmit","setLoading","domainOwner","domainParent","showUnclaimableWarning","isDNSRegistrar","isNewRegistrar","SET_REGISTRANT","RECLAIM","bgcolor","spotcolor","arialLabel","dnsOwner","dd","err","stateError","HR","registrationDate","gracePeriodEndDate","RENEW","tab","pathname","IS_MIGRATED","isParentMigrated","isLoggedIn","dnssecmodes","isAnAbsolutePath","path","render","exact","isEmptyAddress","ENABLE_DNSSEC","ADD_TEXT","SUBMIT_SENT","SUBMIT_CONFIRMED","LoaderContainer","Exclamation","Error","CallToAction","RefreshButton","EtherScanLink","DefaultEtherScanLink","DNSOwnerContainer","BreadcrumbsCaontainer","NumberContainer","currentNumber","displayNumber","viewBox","version","registrarAddress","errorMessage","showDNSOwner","ShortNameContainer","InnerWrapper","ShortName","TabLink","active","TabContainer","getDetailsActive","Owner","RightBar","Favourite","DefaultFavourite","isDNSRegistrationOpen","EMPTY_ADDRESS","NAME_REGISTER_DATA_WRAPPER","NAME_QUERY","ownerType","containerState","details","smallBP","useMediaMin","isOwnerOfDomain","preferredTab","setKey","mainAccount","useRefreshComponent","TopBar","decrypted","slice","SINGLE_NAME","searchTerm","params","useScrollTo","setValid","setType","setNormalisedName","isENSReady","GET_SINGLE_NAME","context","queryDeduplication","normalisedName","validateName","parseSearchTerm","_type","DAOBanner","SearchErrors","errors"],"sourceRoot":""}